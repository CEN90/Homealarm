des (0, 6835, 5760)
(0,"user.start[].[]",1)
(0,"user.start[].[]",2)
(0,"intruder.maeby[].[]",3)
(0,"intruder.maeby[].[]",4)
(1,"user.enterkey[].[_3]",5)
(1,"user.enterkey[].[_8]",6)
(1,"user.enterkey[].[_10]",7)
(1,"intruder.maeby[].[]",8)
(1,"intruder.maeby[].[]",9)
(2,"user.opendoor[].[]",30)
(2,"intruder.maeby[].[]",10)
(2,"intruder.maeby[].[]",11)
(3,"user.start[].[]",8)
(3,"user.start[].[]",10)
(4,"user.start[].[]",9)
(4,"user.start[].[]",11)
(5,"intruder.maeby[].[]",12)
(5,"intruder.maeby[].[]",18)
(6,"intruder.maeby[].[]",14)
(6,"intruder.maeby[].[]",20)
(7,"intruder.maeby[].[]",16)
(7,"intruder.maeby[].[]",22)
(8,"user.enterkey[].[_3]",12)
(8,"user.enterkey[].[_8]",14)
(8,"user.enterkey[].[_10]",16)
(9,"user.enterkey[].[_3]",18)
(9,"user.enterkey[].[_8]",20)
(9,"user.enterkey[].[_10]",22)
(10,"user.opendoor[].[]",24)
(11,"user.opendoor[].[]",25)
(12,"time +=3",13)
(13,"controller.checkkey[2].[]",33)
(14,"time +=8",15)
(15,"controller.checkkey[2].[]",43)
(16,"time +=10",17)
(17,"controller.checkkey[2].[]",48)
(18,"time +=3",19)
(19,"controller.checkkey[2].[]",32)
(20,"time +=8",21)
(21,"controller.checkkey[2].[]",42)
(22,"time +=10",23)
(23,"controller.checkkey[2].[]",49)
(24,"door.opendoor[].[]",26)
(25,"door.opendoor[].[]",28)
(26,"time +=5",27)
(27,"controller.setdoorstatus[true, false].[]",38)
(28,"time +=5",29)
(29,"controller.setdoorstatus[true, false].[]",40)
(30,"intruder.maeby[].[]",24)
(30,"intruder.maeby[].[]",25)
(30,"door.opendoor[].[_true]",31)
(31,"intruder.maeby[].[]",26)
(31,"intruder.maeby[].[]",28)
(32,"controller.setkeyvalid[].[]",34)
(33,"controller.setkeyvalid[].[]",36)
(34,"time +=10",35)
(35,"user.keychecked[true].[]",56)
(35,"controller.tau=>setkeyvalid.[]",57)
(36,"time +=10",37)
(37,"user.keychecked[true].[]",54)
(37,"controller.tau=>setkeyvalid.[]",55)
(38,"time +=15",39)
(39,"user.closedoor[].[]",78)
(40,"time +=15",41)
(41,"user.closedoor[].[]",79)
(42,"controller.setkeyvalid[].[]",44)
(43,"controller.setkeyvalid[].[]",46)
(44,"time +=10",45)
(45,"user.keychecked[true].[]",66)
(45,"controller.tau=>setkeyvalid.[]",67)
(46,"time +=10",47)
(47,"user.keychecked[true].[]",68)
(47,"controller.tau=>setkeyvalid.[]",69)
(48,"controller.setkeyvalid[].[]",50)
(49,"controller.setkeyvalid[].[]",52)
(50,"time +=10",51)
(51,"user.keychecked[true].[]",80)
(51,"controller.tau=>setkeyvalid.[]",81)
(52,"time +=10",53)
(53,"user.keychecked[true].[]",82)
(53,"controller.tau=>setkeyvalid.[]",83)
(54,"controller.tau=>setkeyvalid.[]",58)
(55,"user.keychecked[true].[]",58)
(55,"controller.setkeyinvalid[].[]",59)
(56,"controller.tau=>setkeyvalid.[]",60)
(57,"user.keychecked[true].[]",60)
(57,"controller.setkeyinvalid[].[]",61)
(58,"controller.setkeyinvalid[].[]",62)
(59,"user.keychecked[true].[]",62)
(60,"controller.setkeyinvalid[].[]",64)
(61,"user.keychecked[true].[]",64)
(62,"time +=10",63)
(63,"controller.checkcode[3].[]",96)
(64,"time +=10",65)
(65,"controller.checkcode[3].[]",97)
(66,"controller.tau=>setkeyvalid.[]",70)
(67,"user.keychecked[true].[]",70)
(67,"controller.setkeyinvalid[].[]",71)
(68,"controller.tau=>setkeyvalid.[]",72)
(69,"user.keychecked[true].[]",72)
(69,"controller.setkeyinvalid[].[]",73)
(70,"controller.setkeyinvalid[].[]",74)
(71,"user.keychecked[true].[]",74)
(72,"controller.setkeyinvalid[].[]",76)
(73,"user.keychecked[true].[]",76)
(74,"time +=10",75)
(75,"controller.checkcode[3].[]",106)
(76,"time +=10",77)
(77,"controller.checkcode[3].[]",107)
(78,"door.closedoor[].[]",84)
(79,"door.closedoor[].[]",86)
(80,"controller.tau=>setkeyvalid.[]",90)
(81,"user.keychecked[true].[]",90)
(81,"controller.setkeyinvalid[].[]",95)
(82,"controller.tau=>setkeyvalid.[]",88)
(83,"user.keychecked[true].[]",88)
(83,"controller.setkeyinvalid[].[]",89)
(84,"time +=10",85)
(85,"intruder.spyingdoor[false].[]",123)
(86,"time +=50",87)
(87,"user.enterkey[].[_3]",301)
(87,"user.enterkey[].[_8]",303)
(87,"user.enterkey[].[_10]",305)
(88,"controller.setkeyinvalid[].[]",91)
(89,"user.keychecked[true].[]",91)
(90,"controller.setkeyinvalid[].[]",93)
(91,"time +=10",92)
(92,"controller.checkcode[3].[]",122)
(93,"time +=10",94)
(94,"controller.checkcode[3].[]",120)
(94,"intruder.spyingdoor[false].[]",121)
(95,"user.keychecked[true].[]",93)
(96,"controller.lockeduser[].[]",98)
(97,"controller.lockeduser[].[]",99)
(98,"controller.setarmed[].[]",100)
(99,"controller.setarmed[].[]",101)
(100,"door.lockdoor[].[]",102)
(101,"door.lockdoor[].[]",104)
(102,"time +=5",103)
(103,"controller.setdoorstatus[false, true].[]",108)
(104,"time +=5",105)
(105,"controller.setdoorstatus[false, true].[]",110)
(106,"controller.lockeduser[].[]",112)
(107,"controller.lockeduser[].[]",113)
(108,"time +=2",109)
(109,"intruder.spyingdoor[false].[]",127)
(110,"time +=5",111)
(111,"user.codechecked[true].[]",143)
(112,"controller.setarmed[].[]",114)
(113,"controller.setarmed[].[]",115)
(114,"door.lockdoor[].[]",116)
(115,"door.lockdoor[].[]",118)
(116,"time +=5",117)
(117,"controller.setdoorstatus[false, true].[]",141)
(118,"time +=2",119)
(119,"intruder.spyingdoor[false].[]",129)
(120,"controller.lockeduser[].[]",131)
(120,"intruder.spyingdoor[false].[]",125)
(121,"controller.checkcode[3].[]",125)
(122,"controller.lockeduser[].[]",126)
(123,"time +=30",124)
(124,"door.spiedon[].[]",201)
(125,"controller.lockeduser[].[]",132)
(126,"controller.setarmed[].[]",133)
(127,"time +=3",128)
(128,"user.codechecked[true].[]",146)
(129,"time +=3",130)
(130,"controller.setdoorstatus[false, true].[]",144)
(131,"controller.setarmed[].[]",134)
(131,"intruder.spyingdoor[false].[]",132)
(132,"controller.setarmed[].[]",135)
(133,"door.lockdoor[].[]",136)
(134,"intruder.spyingdoor[false].[]",135)
(134,"door.lockdoor[].[]",138)
(135,"door.lockdoor[].[]",139)
(136,"time +=5",137)
(137,"controller.setdoorstatus[false, true].[]",155)
(138,"intruder.spyingdoor[false].[]",139)
(139,"time +=5",140)
(140,"controller.setdoorstatus[false, true].[]",153)
(141,"time +=5",142)
(142,"user.codechecked[true].[]",157)
(143,"door.getlockstatus[].[]",147)
(144,"time +=5",145)
(145,"user.codechecked[true].[]",158)
(146,"door.getlockstatus[].[]",148)
(147,"user.setstatus[true].[]",149)
(148,"user.setstatus[true].[]",151)
(149,"time +=20",150)
(150,"user.enterkey[].[]",173)
(150,"user.enterkey[].[_8]",175)
(150,"user.enterkey[].[_10]",177)
(151,"time +=20",152)
(152,"user.enterkey[].[]",179)
(152,"user.enterkey[].[_8]",181)
(152,"user.enterkey[].[_10]",183)
(153,"time +=5",154)
(154,"user.codechecked[true].[]",165)
(155,"time +=5",156)
(156,"user.codechecked[true].[]",166)
(157,"door.getlockstatus[].[]",159)
(158,"door.getlockstatus[].[]",160)
(159,"user.setstatus[true].[]",161)
(160,"user.setstatus[true].[]",163)
(161,"time +=20",162)
(162,"user.enterkey[].[_3]",5523)
(162,"user.enterkey[].[]",5524)
(162,"user.enterkey[].[_10]",5525)
(163,"time +=20",164)
(164,"user.enterkey[].[_3]",191)
(164,"user.enterkey[].[]",193)
(164,"user.enterkey[].[_10]",195)
(165,"door.getlockstatus[].[]",167)
(166,"door.getlockstatus[].[]",168)
(167,"user.setstatus[true].[]",169)
(168,"user.setstatus[true].[]",171)
(169,"time +=20",170)
(170,"user.enterkey[].[_3]",197)
(170,"user.enterkey[].[_8]",198)
(170,"user.enterkey[].[]",199)
(170,"door.spiedon[].[]",200)
(171,"time +=20",172)
(172,"user.enterkey[].[_3]",5526)
(172,"user.enterkey[].[_8]",5527)
(172,"user.enterkey[].[]",5528)
(173,"time +=3",174)
(174,"controller.checkkey[2].[]",185)
(175,"time +=8",176)
(176,"controller.checkkey[2].[]",242)
(177,"time +=10",178)
(178,"controller.checkkey[2].[]",251)
(179,"time +=3",180)
(180,"controller.checkkey[2].[]",186)
(181,"time +=7",182)
(182,"door.spiedon[].[]",226)
(183,"time +=7",184)
(184,"door.spiedon[].[]",227)
(185,"controller.setkeyvalid[].[]",187)
(186,"controller.setkeyvalid[].[]",189)
(187,"time +=10",188)
(188,"user.keychecked[true].[]",272)
(188,"controller.tau=>setkeyvalid.[]",273)
(189,"time +=4",190)
(190,"door.spiedon[].[]",202)
(191,"time +=2",192)
(192,"door.spiedon[].[]",234)
(193,"time +=2",194)
(194,"door.spiedon[].[]",219)
(195,"time +=2",196)
(196,"door.spiedon[].[]",203)
(197,"door.spiedon[].[]",218)
(198,"door.spiedon[].[]",205)
(199,"door.spiedon[].[]",204)
(200,"user.enterkey[].[_3]",218)
(200,"user.enterkey[].[_8]",205)
(200,"user.enterkey[].[]",204)
(200,"intruder.spyingdoor[true].[]",235)
(201,"intruder.spyingdoor[false].[]",240)
(202,"intruder.spyingdoor[true].[]",206)
(203,"intruder.spyingdoor[true].[]",207)
(204,"intruder.spyingdoor[true].[]",208)
(205,"intruder.spyingdoor[true].[]",209)
(206,"door.breakdoor[].[]",210)
(207,"door.breakdoor[].[]",212)
(208,"door.breakdoor[].[]",214)
(209,"door.breakdoor[].[]",216)
(210,"time +=6",211)
(211,"user.keychecked[true].[]",270)
(211,"controller.tau=>setkeyvalid.[]",271)
(212,"time +=5",213)
(213,"controller.setdoorstatus[true, false].[]",260)
(214,"time +=5",215)
(215,"controller.setdoorstatus[true, false].[]",262)
(216,"time +=5",217)
(217,"controller.setdoorstatus[true, false].[]",261)
(218,"intruder.spyingdoor[true].[]",220)
(219,"intruder.spyingdoor[true].[]",221)
(220,"door.breakdoor[].[]",222)
(221,"door.breakdoor[].[]",224)
(222,"time +=3",223)
(223,"controller.checkkey[2].[]",252)
(224,"time +=5",225)
(225,"controller.setdoorstatus[true, false].[]",268)
(226,"intruder.spyingdoor[true].[]",228)
(227,"intruder.spyingdoor[true].[]",229)
(228,"door.breakdoor[].[]",230)
(229,"door.breakdoor[].[]",232)
(230,"time +=1",231)
(231,"controller.checkkey[2].[]",243)
(232,"time +=3",233)
(233,"controller.checkkey[2].[]",257)
(234,"intruder.spyingdoor[true].[]",236)
(235,"user.enterkey[].[_3]",220)
(235,"user.enterkey[].[_8]",209)
(235,"user.enterkey[].[]",208)
(235,"door.breakdoor[].[_false_true]",237)
(236,"door.breakdoor[].[]",238)
(237,"user.enterkey[].[_3]",222)
(237,"user.enterkey[].[_8]",216)
(237,"user.enterkey[].[]",214)
(238,"time +=1",239)
(239,"controller.checkkey[2].[]",248)
(240,"time +=10",241)
(241,"user.enterkey[].[_3]",295)
(241,"user.enterkey[].[_8]",297)
(241,"user.enterkey[].[_10]",299)
(242,"controller.setkeyvalid[].[]",244)
(243,"controller.setkeyvalid[].[]",246)
(244,"time +=10",245)
(245,"user.keychecked[true].[]",309)
(245,"controller.tau=>setkeyvalid.[]",310)
(246,"time +=10",247)
(247,"user.keychecked[true].[]",307)
(247,"controller.tau=>setkeyvalid.[]",308)
(248,"controller.setkeyvalid[].[]",249)
(249,"time +=10",250)
(250,"user.keychecked[true].[]",311)
(250,"controller.tau=>setkeyvalid.[]",312)
(251,"controller.setkeyvalid[].[]",253)
(252,"controller.setkeyvalid[].[]",255)
(253,"time +=10",254)
(254,"user.keychecked[true].[]",335)
(254,"controller.tau=>setkeyvalid.[]",336)
(255,"time +=10",256)
(256,"user.keychecked[true].[]",337)
(256,"controller.tau=>setkeyvalid.[]",338)
(257,"controller.setkeyvalid[].[]",258)
(258,"time +=10",259)
(259,"user.keychecked[true].[]",340)
(259,"controller.tau=>setkeyvalid.[]",341)
(260,"controller.alarma[].[]",263)
(261,"controller.alarma[].[]",265)
(262,"controller.alarma[].[]",267)
(263,"time +=3",264)
(264,"controller.checkkey[2].[]",289)
(265,"time +=3",266)
(266,"controller.checkkey[2].[]",290)
(267,"time +=5",5529)
(268,"controller.alarma[].[]",269)
(269,"time +=1",5530)
(270,"controller.tau=>setkeyvalid.[]",274)
(271,"user.keychecked[true].[]",274)
(271,"controller.setdoorstatus[true, false].[]",275)
(272,"controller.tau=>setkeyvalid.[]",286)
(273,"user.keychecked[true].[]",276)
(273,"controller.setkeyinvalid[].[]",277)
(274,"controller.setdoorstatus[true, false].[]",278)
(275,"user.keychecked[true].[]",278)
(275,"controller.setkeyinvalid[].[]",279)
(275,"controller.alarma[].[]",280)
(276,"controller.setkeyinvalid[].[]",281)
(277,"user.keychecked[true].[]",281)
(278,"controller.setkeyinvalid[].[]",283)
(278,"controller.alarma[].[]",284)
(279,"user.keychecked[true].[]",283)
(279,"controller.alarma[].[]",285)
(280,"user.keychecked[true].[]",284)
(280,"controller.setkeyinvalid[].[]",285)
(281,"time +=10",282)
(282,"controller.checkcode[3].[]",357)
(283,"controller.alarma[].[]",287)
(284,"controller.setkeyinvalid[].[]",287)
(285,"user.keychecked[true].[]",287)
(286,"controller.setkeyinvalid[].[]",281)
(287,"time +=10",288)
(288,"controller.checkcode[3].[]",358)
(289,"controller.setkeyvalid[].[]",291)
(290,"controller.setkeyvalid[].[]",293)
(291,"time +=10",292)
(292,"user.keychecked[true].[]",376)
(292,"controller.tau=>setkeyvalid.[]",377)
(293,"time +=10",294)
(294,"user.keychecked[true].[]",368)
(294,"controller.tau=>setkeyvalid.[]",369)
(295,"time +=3",296)
(296,"controller.checkkey[2].[]",329)
(297,"time +=8",298)
(298,"controller.checkkey[2].[]",370)
(299,"time +=10",300)
(300,"controller.checkkey[2].[]",379)
(301,"time +=3",302)
(302,"controller.checkkey[2].[]",330)
(303,"time +=8",304)
(304,"controller.checkkey[2].[]",367)
(305,"time +=10",306)
(306,"controller.checkkey[2].[]",380)
(307,"controller.tau=>setkeyvalid.[]",313)
(308,"user.keychecked[true].[]",313)
(308,"controller.setdoorstatus[true, false].[]",314)
(309,"controller.tau=>setkeyvalid.[]",323)
(310,"user.keychecked[true].[]",315)
(310,"controller.setkeyinvalid[].[]",316)
(311,"controller.tau=>setkeyvalid.[]",317)
(312,"user.keychecked[true].[]",317)
(312,"controller.setdoorstatus[true, false].[]",5531)
(313,"controller.setdoorstatus[true, false].[]",320)
(314,"user.keychecked[true].[]",320)
(314,"controller.setkeyinvalid[].[]",321)
(314,"controller.alarma[].[]",322)
(315,"controller.setkeyinvalid[].[]",318)
(316,"user.keychecked[true].[]",318)
(317,"controller.setdoorstatus[true, false].[]",5532)
(318,"time +=10",319)
(319,"controller.checkcode[3].[]",390)
(320,"controller.setkeyinvalid[].[]",324)
(320,"controller.alarma[].[]",325)
(321,"user.keychecked[true].[]",324)
(321,"controller.alarma[].[]",326)
(322,"user.keychecked[true].[]",325)
(322,"controller.setkeyinvalid[].[]",326)
(323,"controller.setkeyinvalid[].[]",318)
(324,"controller.alarma[].[]",327)
(325,"controller.setkeyinvalid[].[]",327)
(326,"user.keychecked[true].[]",327)
(327,"time +=10",328)
(328,"controller.checkcode[3].[]",389)
(329,"controller.setkeyvalid[].[]",331)
(330,"controller.setkeyvalid[].[]",333)
(331,"time +=10",332)
(332,"user.keychecked[true].[]",399)
(332,"controller.tau=>setkeyvalid.[]",400)
(333,"time +=10",334)
(334,"user.keychecked[true].[]",408)
(334,"controller.tau=>setkeyvalid.[]",409)
(335,"controller.tau=>setkeyvalid.[]",339)
(336,"user.keychecked[true].[]",342)
(336,"controller.setkeyinvalid[].[]",343)
(337,"controller.tau=>setkeyvalid.[]",344)
(338,"user.keychecked[true].[]",344)
(338,"controller.setdoorstatus[true, false].[]",5533)
(339,"controller.setkeyinvalid[].[]",347)
(340,"controller.tau=>setkeyvalid.[]",345)
(341,"user.keychecked[true].[]",345)
(341,"controller.setdoorstatus[true, false].[]",346)
(342,"controller.setkeyinvalid[].[]",347)
(343,"user.keychecked[true].[]",347)
(344,"controller.setdoorstatus[true, false].[]",5534)
(345,"controller.setdoorstatus[true, false].[]",349)
(346,"user.keychecked[true].[]",349)
(346,"controller.setkeyinvalid[].[]",350)
(346,"controller.alarma[].[]",351)
(347,"time +=10",348)
(348,"controller.checkcode[3].[]",416)
(349,"controller.setkeyinvalid[].[]",352)
(349,"controller.alarma[].[]",353)
(350,"user.keychecked[true].[]",352)
(350,"controller.alarma[].[]",354)
(351,"user.keychecked[true].[]",353)
(351,"controller.setkeyinvalid[].[]",354)
(352,"controller.alarma[].[]",355)
(353,"controller.setkeyinvalid[].[]",355)
(354,"user.keychecked[true].[]",355)
(355,"time +=10",356)
(356,"controller.checkcode[3].[]",401)
(357,"controller.lockeduser[].[]",359)
(358,"controller.lockeduser[].[]",360)
(359,"controller.setunarmed[].[]",361)
(360,"controller.setunarmed[].[]",362)
(361,"door.unlockdoor[].[]",363)
(362,"door.unlockdoor[].[]",365)
(363,"time +=5",364)
(364,"controller.setdoorstatus[false, false].[]",385)
(365,"time +=5",366)
(366,"controller.setdoorstatus[true, false].[]",387)
(367,"controller.setkeyvalid[].[]",371)
(368,"controller.tau=>setkeyvalid.[]",373)
(369,"user.keychecked[true].[]",5535)
(369,"controller.setkeyinvalid[].[]",5536)
(370,"controller.setkeyvalid[].[]",374)
(371,"time +=10",372)
(372,"user.keychecked[true].[]",439)
(372,"controller.tau=>setkeyvalid.[]",440)
(373,"controller.setkeyinvalid[].[]",5537)
(374,"time +=10",375)
(375,"user.keychecked[true].[]",437)
(375,"controller.tau=>setkeyvalid.[]",438)
(376,"controller.tau=>setkeyvalid.[]",378)
(377,"user.keychecked[true].[]",5538)
(377,"controller.setkeyinvalid[].[]",5539)
(378,"controller.setkeyinvalid[].[]",5540)
(379,"controller.setkeyvalid[].[]",381)
(380,"controller.setkeyvalid[].[]",383)
(381,"time +=10",382)
(382,"user.keychecked[true].[]",458)
(382,"controller.tau=>setkeyvalid.[]",459)
(382,"door.spiedon[].[]",460)
(383,"time +=10",384)
(384,"user.keychecked[true].[]",450)
(384,"controller.tau=>setkeyvalid.[]",451)
(385,"time +=5",386)
(386,"user.codechecked[true].[]",421)
(387,"time +=5",388)
(388,"user.codechecked[true].[]",422)
(389,"controller.lockeduser[].[]",391)
(390,"controller.lockeduser[].[]",392)
(391,"controller.setunarmed[].[]",393)
(392,"controller.setunarmed[].[]",394)
(393,"door.unlockdoor[].[]",395)
(394,"door.unlockdoor[].[]",397)
(395,"time +=5",396)
(396,"controller.setdoorstatus[true, false].[]",429)
(397,"time +=5",398)
(398,"controller.setdoorstatus[false, false].[]",431)
(399,"controller.tau=>setkeyvalid.[]",402)
(400,"user.keychecked[true].[]",402)
(400,"controller.setkeyinvalid[].[]",403)
(401,"controller.lockeduser[].[]",404)
(402,"controller.setkeyinvalid[].[]",405)
(403,"user.keychecked[true].[]",405)
(404,"controller.setunarmed[].[]",407)
(405,"time +=7",406)
(406,"door.spiedon[].[]",461)
(407,"door.unlockdoor[].[]",410)
(408,"controller.tau=>setkeyvalid.[]",412)
(409,"user.keychecked[true].[]",412)
(409,"controller.setkeyinvalid[].[]",413)
(410,"time +=5",411)
(411,"controller.setdoorstatus[true, false].[]",433)
(412,"controller.setkeyinvalid[].[]",414)
(413,"user.keychecked[true].[]",414)
(414,"time +=10",415)
(415,"controller.checkcode[3].[]",488)
(416,"controller.lockeduser[].[]",417)
(417,"controller.setunarmed[].[]",418)
(418,"door.unlockdoor[].[]",419)
(419,"time +=5",420)
(420,"controller.setdoorstatus[false, false].[]",435)
(421,"door.getlockstatus[].[]",423)
(422,"door.getlockstatus[].[]",424)
(423,"user.setstatus[false].[]",425)
(424,"user.setstatus[false].[]",427)
(425,"time +=20",426)
(426,"user.opendoor[].[]",533)
(427,"time +=20",428)
(428,"user.opendoor[].[]",534)
(429,"time +=5",430)
(430,"user.codechecked[true].[]",480)
(431,"time +=5",432)
(432,"user.codechecked[true].[]",479)
(433,"time +=5",434)
(434,"user.codechecked[true].[]",497)
(435,"time +=5",436)
(436,"user.codechecked[true].[]",498)
(437,"controller.tau=>setkeyvalid.[]",441)
(438,"user.keychecked[true].[]",441)
(438,"controller.setkeyinvalid[].[]",442)
(439,"controller.tau=>setkeyvalid.[]",443)
(440,"user.keychecked[true].[]",443)
(440,"controller.setkeyinvalid[].[]",444)
(441,"controller.setkeyinvalid[].[]",445)
(442,"user.keychecked[true].[]",445)
(443,"controller.setkeyinvalid[].[]",447)
(444,"user.keychecked[true].[]",447)
(445,"time +=2",446)
(446,"door.spiedon[].[]",449)
(447,"time +=10",448)
(448,"controller.checkcode[3].[]",506)
(449,"intruder.spyingdoor[false].[]",452)
(450,"controller.tau=>setkeyvalid.[]",454)
(451,"user.keychecked[true].[]",454)
(451,"controller.setkeyinvalid[].[]",455)
(452,"time +=8",453)
(453,"controller.checkcode[3].[]",505)
(454,"controller.setkeyinvalid[].[]",456)
(455,"user.keychecked[true].[]",456)
(456,"time +=10",457)
(457,"controller.checkcode[3].[]",515)
(458,"controller.tau=>setkeyvalid.[]",462)
(458,"door.spiedon[].[]",463)
(459,"user.keychecked[true].[]",462)
(459,"controller.setkeyinvalid[].[]",473)
(459,"door.spiedon[].[]",464)
(460,"user.keychecked[true].[]",463)
(460,"controller.tau=>setkeyvalid.[]",464)
(460,"intruder.spyingdoor[false].[]",465)
(461,"intruder.spyingdoor[false].[]",466)
(462,"controller.setkeyinvalid[].[]",468)
(462,"door.spiedon[].[]",469)
(463,"controller.tau=>setkeyvalid.[]",469)
(463,"intruder.spyingdoor[false].[]",470)
(464,"user.keychecked[true].[]",469)
(464,"controller.setkeyinvalid[].[]",471)
(464,"intruder.spyingdoor[false].[]",472)
(465,"user.keychecked[true].[]",470)
(465,"controller.tau=>setkeyvalid.[]",472)
(466,"time +=3",467)
(467,"controller.checkcode[3].[]",487)
(468,"door.spiedon[].[]",475)
(469,"controller.setkeyinvalid[].[]",475)
(469,"intruder.spyingdoor[false].[]",474)
(470,"controller.tau=>setkeyvalid.[]",474)
(471,"user.keychecked[true].[]",475)
(471,"intruder.spyingdoor[false].[]",476)
(472,"user.keychecked[true].[]",474)
(472,"controller.setkeyinvalid[].[]",476)
(473,"user.keychecked[true].[]",468)
(473,"door.spiedon[].[]",471)
(474,"controller.setkeyinvalid[].[]",477)
(475,"intruder.spyingdoor[false].[]",477)
(476,"user.keychecked[true].[]",477)
(477,"time +=10",478)
(478,"controller.checkcode[3].[]",516)
(479,"door.getlockstatus[].[]",481)
(480,"door.getlockstatus[].[]",482)
(481,"user.setstatus[false].[]",483)
(482,"user.setstatus[false].[]",485)
(483,"time +=20",484)
(484,"user.opendoor[].[]",556)
(485,"time +=20",486)
(486,"user.opendoor[].[]",555)
(487,"controller.lockeduser[].[]",489)
(488,"controller.lockeduser[].[]",490)
(489,"controller.setarmed[].[]",491)
(490,"controller.setarmed[].[]",492)
(491,"door.lockdoor[].[]",493)
(492,"door.lockdoor[].[]",495)
(493,"time +=10",494)
(494,"user.codechecked[true].[]",525)
(495,"time +=10",496)
(496,"user.codechecked[true].[]",526)
(497,"door.getlockstatus[].[]",499)
(498,"door.getlockstatus[].[]",500)
(499,"user.setstatus[false].[]",501)
(500,"user.setstatus[false].[]",503)
(501,"time +=20",502)
(502,"user.opendoor[].[]",562)
(503,"time +=20",504)
(504,"user.opendoor[].[]",563)
(505,"controller.lockeduser[].[]",507)
(506,"controller.lockeduser[].[]",508)
(507,"controller.setarmed[].[]",509)
(508,"controller.setarmed[].[]",510)
(509,"door.lockdoor[].[]",511)
(510,"door.lockdoor[].[]",513)
(511,"time +=10",512)
(512,"user.codechecked[true].[]",540)
(513,"time +=10",514)
(514,"user.codechecked[true].[]",539)
(515,"controller.lockeduser[].[]",517)
(516,"controller.lockeduser[].[]",518)
(517,"controller.setarmed[].[]",519)
(518,"controller.setarmed[].[]",520)
(519,"door.lockdoor[].[]",521)
(520,"door.lockdoor[].[]",523)
(521,"time +=10",522)
(522,"user.codechecked[true].[]",547)
(523,"time +=10",524)
(524,"user.codechecked[true].[]",548)
(525,"door.getlockstatus[].[]",527)
(526,"door.getlockstatus[].[]",528)
(527,"user.setstatus[false].[]",529)
(528,"user.setstatus[false].[]",531)
(529,"time +=17",530)
(530,"door.spiedon[].[]",571)
(531,"time +=20",532)
(532,"user.enterkey[].[]",579)
(532,"user.enterkey[].[_8]",581)
(532,"user.enterkey[].[_10]",583)
(533,"door.opendoor[].[]",535)
(534,"door.opendoor[].[]",537)
(535,"time +=5",536)
(536,"controller.setdoorstatus[true, false].[]",561)
(537,"time +=20",538)
(538,"user.closedoor[].[]",591)
(539,"door.getlockstatus[].[]",541)
(540,"door.getlockstatus[].[]",542)
(541,"user.setstatus[false].[]",543)
(542,"user.setstatus[false].[]",545)
(543,"time +=20",544)
(544,"user.enterkey[].[_3]",5541)
(544,"user.enterkey[].[]",5542)
(544,"user.enterkey[].[_10]",5543)
(545,"time +=12",546)
(546,"door.spiedon[].[]",570)
(547,"door.getlockstatus[].[]",549)
(548,"door.getlockstatus[].[]",550)
(549,"user.setstatus[false].[]",551)
(550,"user.setstatus[false].[]",553)
(551,"time +=20",552)
(552,"user.enterkey[].[_3]",5544)
(552,"user.enterkey[].[_8]",5545)
(552,"user.enterkey[].[]",5546)
(553,"time +=10",554)
(554,"door.spiedon[].[]",572)
(555,"door.opendoor[].[]",557)
(556,"door.opendoor[].[]",559)
(557,"time +=20",558)
(558,"user.closedoor[].[]",612)
(559,"time +=5",560)
(560,"controller.setdoorstatus[true, false].[]",568)
(561,"time +=15",538)
(562,"door.opendoor[].[]",564)
(563,"door.opendoor[].[]",566)
(564,"time +=20",565)
(565,"user.closedoor[].[]",631)
(566,"time +=5",567)
(567,"controller.setdoorstatus[true, false].[]",569)
(568,"time +=15",558)
(569,"time +=15",565)
(570,"intruder.spyingdoor[false].[]",573)
(571,"intruder.spyingdoor[false].[]",575)
(572,"intruder.spyingdoor[false].[]",577)
(573,"time +=8",574)
(574,"user.enterkey[].[_3]",600)
(574,"user.enterkey[].[]",602)
(574,"user.enterkey[].[_10]",604)
(575,"time +=3",576)
(576,"user.enterkey[].[]",585)
(576,"user.enterkey[].[_8]",587)
(576,"user.enterkey[].[_10]",589)
(577,"time +=10",578)
(578,"user.enterkey[].[_3]",606)
(578,"user.enterkey[].[_8]",608)
(578,"user.enterkey[].[]",610)
(579,"time +=3",580)
(580,"controller.checkkey[2].[]",592)
(581,"time +=8",582)
(582,"controller.checkkey[2].[]",621)
(583,"time +=10",584)
(584,"controller.checkkey[2].[]",630)
(585,"time +=3",586)
(586,"controller.checkkey[2].[]",597)
(587,"time +=8",588)
(588,"controller.checkkey[2].[]",613)
(589,"time +=10",590)
(590,"controller.checkkey[2].[]",625)
(591,"door.closedoor[].[]",593)
(592,"controller.setkeyvalid[].[]",595)
(593,"time +=50",594)
(594,"user.enterkey[].[]",5547)
(594,"user.enterkey[].[_8]",5548)
(594,"user.enterkey[].[_10]",5549)
(595,"time +=10",596)
(596,"user.keychecked[true].[]",636)
(596,"controller.tau=>setkeyvalid.[]",637)
(597,"controller.setkeyvalid[].[]",598)
(598,"time +=10",599)
(599,"user.keychecked[true].[]",640)
(599,"controller.tau=>setkeyvalid.[]",641)
(600,"time +=3",601)
(601,"controller.checkkey[2].[]",614)
(602,"time +=8",603)
(603,"controller.checkkey[2].[]",638)
(604,"time +=10",605)
(605,"controller.checkkey[2].[]",652)
(606,"time +=3",607)
(607,"controller.checkkey[2].[]",624)
(608,"time +=8",609)
(609,"controller.checkkey[2].[]",651)
(610,"time +=10",611)
(611,"controller.checkkey[2].[]",657)
(612,"door.closedoor[].[]",615)
(613,"controller.setkeyvalid[].[]",617)
(614,"controller.setkeyvalid[].[]",619)
(615,"time +=50",616)
(616,"user.enterkey[].[_3]",5550)
(616,"user.enterkey[].[]",5551)
(616,"user.enterkey[].[_10]",5552)
(617,"time +=10",618)
(618,"user.keychecked[true].[]",662)
(618,"controller.tau=>setkeyvalid.[]",663)
(619,"time +=10",620)
(620,"user.keychecked[true].[]",660)
(620,"controller.tau=>setkeyvalid.[]",661)
(621,"controller.setkeyvalid[].[]",622)
(622,"time +=10",623)
(623,"user.keychecked[true].[]",665)
(623,"controller.tau=>setkeyvalid.[]",666)
(624,"controller.setkeyvalid[].[]",626)
(625,"controller.setkeyvalid[].[]",628)
(626,"time +=10",627)
(627,"user.keychecked[true].[]",680)
(627,"controller.tau=>setkeyvalid.[]",681)
(628,"time +=10",629)
(629,"user.keychecked[true].[]",683)
(629,"controller.tau=>setkeyvalid.[]",684)
(630,"controller.setkeyvalid[].[]",632)
(631,"door.closedoor[].[]",634)
(632,"time +=10",633)
(633,"user.keychecked[true].[]",678)
(633,"controller.tau=>setkeyvalid.[]",679)
(634,"time +=50",635)
(635,"user.enterkey[].[_3]",5553)
(635,"user.enterkey[].[_8]",5554)
(635,"user.enterkey[].[]",5555)
(636,"controller.tau=>setkeyvalid.[]",639)
(637,"user.keychecked[true].[]",639)
(637,"controller.setkeyinvalid[].[]",642)
(638,"controller.setkeyvalid[].[]",643)
(639,"controller.setkeyinvalid[].[]",645)
(640,"controller.tau=>setkeyvalid.[]",647)
(641,"user.keychecked[true].[]",647)
(641,"controller.setkeyinvalid[].[]",648)
(642,"user.keychecked[true].[]",645)
(643,"time +=10",644)
(644,"user.keychecked[true].[]",696)
(644,"controller.tau=>setkeyvalid.[]",697)
(645,"time +=10",646)
(646,"controller.checkcode[3].[]",700)
(647,"controller.setkeyinvalid[].[]",649)
(648,"user.keychecked[true].[]",649)
(649,"time +=10",650)
(650,"controller.checkcode[3].[]",698)
(651,"controller.setkeyvalid[].[]",653)
(652,"controller.setkeyvalid[].[]",655)
(653,"time +=10",654)
(654,"user.keychecked[true].[]",712)
(654,"controller.tau=>setkeyvalid.[]",713)
(655,"time +=10",656)
(656,"user.keychecked[true].[]",714)
(656,"controller.tau=>setkeyvalid.[]",715)
(657,"controller.setkeyvalid[].[]",658)
(658,"time +=10",659)
(659,"user.keychecked[true].[]",733)
(659,"controller.tau=>setkeyvalid.[]",734)
(659,"door.spiedon[].[]",735)
(660,"controller.tau=>setkeyvalid.[]",664)
(661,"user.keychecked[true].[]",664)
(661,"controller.setkeyinvalid[].[]",667)
(662,"controller.tau=>setkeyvalid.[]",668)
(663,"user.keychecked[true].[]",668)
(663,"controller.setkeyinvalid[].[]",669)
(664,"controller.setkeyinvalid[].[]",672)
(665,"controller.tau=>setkeyvalid.[]",670)
(666,"user.keychecked[true].[]",670)
(666,"controller.setkeyinvalid[].[]",671)
(667,"user.keychecked[true].[]",672)
(668,"controller.setkeyinvalid[].[]",674)
(669,"user.keychecked[true].[]",674)
(670,"controller.setkeyinvalid[].[]",676)
(671,"user.keychecked[true].[]",676)
(672,"time +=9",673)
(673,"door.spiedon[].[]",761)
(674,"time +=9",675)
(675,"door.spiedon[].[]",724)
(676,"time +=10",677)
(677,"controller.checkcode[3].[]",771)
(678,"controller.tau=>setkeyvalid.[]",682)
(679,"user.keychecked[true].[]",682)
(679,"controller.setkeyinvalid[].[]",685)
(680,"controller.tau=>setkeyvalid.[]",686)
(681,"user.keychecked[true].[]",686)
(681,"controller.setkeyinvalid[].[]",687)
(682,"controller.setkeyinvalid[].[]",690)
(683,"controller.tau=>setkeyvalid.[]",688)
(684,"user.keychecked[true].[]",688)
(684,"controller.setkeyinvalid[].[]",689)
(685,"user.keychecked[true].[]",690)
(686,"controller.setkeyinvalid[].[]",692)
(687,"user.keychecked[true].[]",692)
(688,"controller.setkeyinvalid[].[]",694)
(689,"user.keychecked[true].[]",694)
(690,"time +=10",691)
(691,"controller.checkcode[3].[]",786)
(692,"time +=7",693)
(693,"door.spiedon[].[]",746)
(694,"time +=7",695)
(695,"door.spiedon[].[]",725)
(696,"controller.tau=>setkeyvalid.[]",699)
(697,"user.keychecked[true].[]",699)
(697,"controller.setkeyinvalid[].[]",701)
(698,"controller.lockeduser[].[]",702)
(699,"controller.setkeyinvalid[].[]",703)
(700,"controller.lockeduser[].[]",705)
(701,"user.keychecked[true].[]",703)
(702,"controller.setunarmed[].[]",706)
(703,"time +=4",704)
(704,"door.spiedon[].[]",754)
(705,"controller.setunarmed[].[]",707)
(706,"door.unlockdoor[].[]",708)
(707,"door.unlockdoor[].[]",710)
(708,"time +=4",709)
(709,"door.spiedon[].[]",736)
(710,"time +=5",711)
(711,"controller.setdoorstatus[true, false].[]",766)
(712,"controller.tau=>setkeyvalid.[]",716)
(713,"user.keychecked[true].[]",716)
(713,"controller.setkeyinvalid[].[]",717)
(714,"controller.tau=>setkeyvalid.[]",718)
(715,"user.keychecked[true].[]",718)
(715,"controller.setkeyinvalid[].[]",719)
(716,"controller.setkeyinvalid[].[]",720)
(717,"user.keychecked[true].[]",720)
(718,"controller.setkeyinvalid[].[]",722)
(719,"user.keychecked[true].[]",722)
(720,"time +=2",721)
(721,"door.spiedon[].[]",753)
(722,"time +=2",723)
(723,"door.spiedon[].[]",726)
(724,"intruder.spyingdoor[false].[]",727)
(725,"intruder.spyingdoor[false].[]",729)
(726,"intruder.spyingdoor[false].[]",731)
(727,"time +=1",728)
(728,"controller.checkcode[3].[]",770)
(729,"time +=3",730)
(730,"controller.checkcode[3].[]",785)
(731,"time +=8",732)
(732,"controller.checkcode[3].[]",822)
(733,"controller.tau=>setkeyvalid.[]",737)
(733,"door.spiedon[].[]",738)
(734,"user.keychecked[true].[]",737)
(734,"controller.setkeyinvalid[].[]",763)
(734,"door.spiedon[].[]",739)
(735,"user.keychecked[true].[]",738)
(735,"controller.tau=>setkeyvalid.[]",739)
(735,"intruder.spyingdoor[false].[]",740)
(736,"intruder.spyingdoor[false].[]",741)
(737,"controller.setkeyinvalid[].[]",762)
(737,"door.spiedon[].[]",743)
(738,"controller.tau=>setkeyvalid.[]",743)
(738,"intruder.spyingdoor[false].[]",744)
(739,"user.keychecked[true].[]",743)
(739,"controller.setkeyinvalid[].[]",756)
(739,"intruder.spyingdoor[false].[]",745)
(740,"user.keychecked[true].[]",744)
(740,"controller.tau=>setkeyvalid.[]",745)
(741,"time +=1",742)
(742,"controller.setdoorstatus[true, false].[]",768)
(743,"controller.setkeyinvalid[].[]",755)
(743,"intruder.spyingdoor[false].[]",747)
(744,"controller.tau=>setkeyvalid.[]",747)
(745,"user.keychecked[true].[]",747)
(745,"controller.setkeyinvalid[].[]",748)
(746,"intruder.spyingdoor[false].[]",749)
(747,"controller.setkeyinvalid[].[]",751)
(748,"user.keychecked[true].[]",751)
(749,"time +=3",750)
(750,"controller.checkcode[3].[]",795)
(751,"time +=10",752)
(752,"controller.checkcode[3].[]",834)
(753,"intruder.spyingdoor[false].[]",757)
(754,"intruder.spyingdoor[false].[]",759)
(755,"intruder.spyingdoor[false].[]",751)
(756,"user.keychecked[true].[]",755)
(756,"intruder.spyingdoor[false].[]",748)
(757,"time +=8",758)
(758,"controller.checkcode[3].[]",823)
(759,"time +=6",760)
(760,"controller.checkcode[3].[]",809)
(761,"intruder.spyingdoor[false].[]",764)
(762,"door.spiedon[].[]",755)
(763,"user.keychecked[true].[]",762)
(763,"door.spiedon[].[]",756)
(764,"time +=1",765)
(765,"controller.checkcode[3].[]",780)
(766,"time +=5",767)
(767,"user.codechecked[true].[]",800)
(768,"time +=5",769)
(769,"user.codechecked[true].[]",810)
(770,"controller.lockeduser[].[]",772)
(771,"controller.lockeduser[].[]",773)
(772,"controller.setunarmed[].[]",774)
(773,"controller.setunarmed[].[]",775)
(774,"door.unlockdoor[].[]",776)
(775,"door.unlockdoor[].[]",778)
(776,"time +=5",777)
(777,"controller.setdoorstatus[true, false].[]",804)
(778,"time +=5",779)
(779,"controller.setdoorstatus[true, false].[]",801)
(780,"controller.lockeduser[].[]",781)
(781,"controller.setunarmed[].[]",782)
(782,"door.unlockdoor[].[]",783)
(783,"time +=5",784)
(784,"controller.setdoorstatus[true, false].[]",807)
(785,"controller.lockeduser[].[]",787)
(786,"controller.lockeduser[].[]",788)
(787,"controller.setunarmed[].[]",789)
(788,"controller.setunarmed[].[]",790)
(789,"door.unlockdoor[].[]",791)
(790,"door.unlockdoor[].[]",793)
(791,"time +=5",792)
(792,"controller.setdoorstatus[true, false].[]",832)
(793,"time +=5",794)
(794,"controller.setdoorstatus[true, false].[]",818)
(795,"controller.lockeduser[].[]",796)
(796,"controller.setunarmed[].[]",797)
(797,"door.unlockdoor[].[]",798)
(798,"time +=5",799)
(799,"controller.setdoorstatus[true, false].[]",820)
(800,"door.getlockstatus[].[]",803)
(801,"time +=5",802)
(802,"user.codechecked[true].[]",841)
(803,"user.setstatus[false].[]",806)
(804,"time +=5",805)
(805,"user.codechecked[true].[]",848)
(806,"time +=20",594)
(807,"time +=5",808)
(808,"user.codechecked[true].[]",842)
(809,"controller.lockeduser[].[]",811)
(810,"door.getlockstatus[].[]",812)
(811,"controller.setunarmed[].[]",813)
(812,"user.setstatus[false].[]",814)
(813,"door.unlockdoor[].[]",816)
(814,"time +=20",815)
(815,"user.enterkey[].[]",885)
(815,"user.enterkey[].[_8]",887)
(815,"user.enterkey[].[_10]",889)
(816,"time +=5",817)
(817,"controller.setdoorstatus[true, false].[]",839)
(818,"time +=5",819)
(819,"user.codechecked[true].[]",852)
(820,"time +=5",821)
(821,"user.codechecked[true].[]",859)
(822,"controller.lockeduser[].[]",824)
(823,"controller.lockeduser[].[]",825)
(824,"controller.setunarmed[].[]",826)
(825,"controller.setunarmed[].[]",827)
(826,"door.unlockdoor[].[]",828)
(827,"door.unlockdoor[].[]",830)
(828,"time +=5",829)
(829,"controller.setdoorstatus[true, false].[]",863)
(830,"time +=5",831)
(831,"controller.setdoorstatus[true, false].[]",860)
(832,"time +=5",833)
(833,"user.codechecked[true].[]",853)
(834,"controller.lockeduser[].[]",835)
(835,"controller.setunarmed[].[]",836)
(836,"door.unlockdoor[].[]",837)
(837,"time +=5",838)
(838,"controller.setdoorstatus[true, false].[]",867)
(839,"time +=5",840)
(840,"user.codechecked[true].[]",869)
(841,"door.getlockstatus[].[]",843)
(842,"door.getlockstatus[].[]",844)
(843,"user.setstatus[false].[]",845)
(844,"user.setstatus[false].[]",846)
(845,"time +=20",616)
(846,"time +=19",847)
(847,"door.spiedon[].[]",894)
(848,"door.getlockstatus[].[]",849)
(849,"user.setstatus[false].[]",850)
(850,"time +=19",851)
(851,"door.spiedon[].[]",912)
(852,"door.getlockstatus[].[]",854)
(853,"door.getlockstatus[].[]",855)
(854,"user.setstatus[false].[]",856)
(855,"user.setstatus[false].[]",857)
(856,"time +=20",635)
(857,"time +=17",858)
(858,"door.spiedon[].[]",919)
(859,"door.getlockstatus[].[]",862)
(860,"time +=5",861)
(861,"user.codechecked[true].[]",873)
(862,"user.setstatus[false].[]",865)
(863,"time +=5",864)
(864,"user.codechecked[true].[]",874)
(865,"time +=17",866)
(866,"door.spiedon[].[]",913)
(867,"time +=5",868)
(868,"user.codechecked[true].[]",881)
(869,"door.getlockstatus[].[]",870)
(870,"user.setstatus[false].[]",871)
(871,"time +=14",872)
(872,"door.spiedon[].[]",896)
(873,"door.getlockstatus[].[]",875)
(874,"door.getlockstatus[].[]",876)
(875,"user.setstatus[false].[]",877)
(876,"user.setstatus[false].[]",879)
(877,"time +=12",878)
(878,"door.spiedon[].[]",907)
(879,"time +=12",880)
(880,"door.spiedon[].[]",924)
(881,"door.getlockstatus[].[]",882)
(882,"user.setstatus[false].[]",883)
(883,"time +=10",884)
(884,"door.spiedon[].[]",918)
(885,"time +=3",886)
(886,"controller.checkkey[2].[]",891)
(887,"time +=4",888)
(888,"door.spiedon[].[]",895)
(889,"time +=4",890)
(890,"door.spiedon[].[]",906)
(891,"controller.setkeyvalid[].[]",892)
(892,"time +=1",893)
(893,"door.spiedon[].[]",897)
(894,"intruder.spyingdoor[false].[]",898)
(895,"intruder.spyingdoor[false].[]",900)
(896,"intruder.spyingdoor[false].[]",902)
(897,"intruder.spyingdoor[false].[]",904)
(898,"time +=1",899)
(899,"user.enterkey[].[]",927)
(899,"user.enterkey[].[_8]",929)
(899,"user.enterkey[].[_10]",931)
(900,"time +=4",901)
(901,"controller.checkkey[2].[]",940)
(902,"time +=6",903)
(903,"user.enterkey[].[_3]",945)
(903,"user.enterkey[].[]",947)
(903,"user.enterkey[].[_10]",949)
(904,"time +=9",905)
(905,"user.keychecked[true].[]",963)
(905,"controller.tau=>setkeyvalid.[]",964)
(906,"intruder.spyingdoor[false].[]",908)
(907,"intruder.spyingdoor[false].[]",910)
(908,"time +=6",909)
(909,"controller.checkkey[2].[]",952)
(910,"time +=8",911)
(911,"user.enterkey[].[_3]",957)
(911,"user.enterkey[].[]",959)
(911,"user.enterkey[].[_10]",961)
(912,"intruder.spyingdoor[false].[]",914)
(913,"intruder.spyingdoor[false].[]",916)
(914,"time +=1",915)
(915,"user.enterkey[].[_3]",927)
(915,"user.enterkey[].[]",929)
(915,"user.enterkey[].[_10]",931)
(916,"time +=3",917)
(917,"user.enterkey[].[]",933)
(917,"user.enterkey[].[_8]",935)
(917,"user.enterkey[].[_10]",937)
(918,"intruder.spyingdoor[false].[]",920)
(919,"intruder.spyingdoor[false].[]",922)
(920,"time +=10",921)
(921,"user.enterkey[].[_3]",5556)
(921,"user.enterkey[].[_8]",5557)
(921,"user.enterkey[].[]",5558)
(922,"time +=3",923)
(923,"user.enterkey[].[_3]",933)
(923,"user.enterkey[].[_8]",935)
(923,"user.enterkey[].[]",937)
(924,"intruder.spyingdoor[false].[]",925)
(925,"time +=8",926)
(926,"user.enterkey[].[_3]",957)
(926,"user.enterkey[].[_8]",959)
(926,"user.enterkey[].[]",961)
(927,"time +=3",928)
(928,"controller.checkkey[2].[]",939)
(929,"time +=8",930)
(930,"controller.checkkey[2].[]",966)
(931,"time +=10",932)
(932,"controller.checkkey[2].[]",981)
(933,"time +=3",934)
(934,"controller.checkkey[2].[]",951)
(935,"time +=8",936)
(936,"controller.checkkey[2].[]",976)
(937,"time +=10",938)
(938,"controller.checkkey[2].[]",984)
(939,"controller.setkeyvalid[].[]",941)
(940,"controller.setkeyvalid[].[]",943)
(941,"time +=10",942)
(942,"user.keychecked[true].[]",988)
(942,"controller.tau=>setkeyvalid.[]",989)
(943,"time +=10",944)
(944,"user.keychecked[true].[]",990)
(944,"controller.tau=>setkeyvalid.[]",991)
(945,"time +=3",946)
(946,"controller.checkkey[2].[]",965)
(947,"time +=8",948)
(948,"controller.checkkey[2].[]",987)
(949,"time +=10",950)
(950,"controller.checkkey[2].[]",1005)
(951,"controller.setkeyvalid[].[]",953)
(952,"controller.setkeyvalid[].[]",955)
(953,"time +=10",954)
(954,"user.keychecked[true].[]",1002)
(954,"controller.tau=>setkeyvalid.[]",1003)
(955,"time +=10",956)
(956,"user.keychecked[true].[]",1007)
(956,"controller.tau=>setkeyvalid.[]",1008)
(957,"time +=3",958)
(958,"controller.checkkey[2].[]",975)
(959,"time +=8",960)
(960,"controller.checkkey[2].[]",1004)
(961,"time +=10",962)
(962,"controller.checkkey[2].[]",1020)
(963,"controller.tau=>setkeyvalid.[]",967)
(964,"user.keychecked[true].[]",967)
(964,"controller.setkeyinvalid[].[]",968)
(965,"controller.setkeyvalid[].[]",969)
(966,"controller.setkeyvalid[].[]",971)
(967,"controller.setkeyinvalid[].[]",973)
(968,"user.keychecked[true].[]",973)
(969,"time +=10",970)
(970,"user.keychecked[true].[]",1023)
(970,"controller.tau=>setkeyvalid.[]",1024)
(971,"time +=10",972)
(972,"user.keychecked[true].[]",1025)
(972,"controller.tau=>setkeyvalid.[]",1026)
(973,"time +=10",974)
(974,"controller.checkcode[3].[]",1028)
(975,"controller.setkeyvalid[].[]",977)
(976,"controller.setkeyvalid[].[]",979)
(977,"time +=10",978)
(978,"user.keychecked[true].[]",1042)
(978,"controller.tau=>setkeyvalid.[]",1043)
(979,"time +=10",980)
(980,"user.keychecked[true].[]",1045)
(980,"controller.tau=>setkeyvalid.[]",1046)
(981,"controller.setkeyvalid[].[]",982)
(982,"time +=10",983)
(983,"user.keychecked[true].[]",1040)
(983,"controller.tau=>setkeyvalid.[]",1041)
(984,"controller.setkeyvalid[].[]",985)
(985,"time +=10",986)
(986,"user.keychecked[true].[]",1058)
(986,"controller.tau=>setkeyvalid.[]",1059)
(987,"controller.setkeyvalid[].[]",992)
(988,"controller.tau=>setkeyvalid.[]",994)
(989,"user.keychecked[true].[]",994)
(989,"controller.setkeyinvalid[].[]",995)
(990,"controller.tau=>setkeyvalid.[]",996)
(991,"user.keychecked[true].[]",996)
(991,"controller.setkeyinvalid[].[]",997)
(992,"time +=10",993)
(993,"user.keychecked[true].[]",1064)
(993,"controller.tau=>setkeyvalid.[]",1065)
(994,"controller.setkeyinvalid[].[]",998)
(995,"user.keychecked[true].[]",998)
(996,"controller.setkeyinvalid[].[]",1000)
(997,"user.keychecked[true].[]",1000)
(998,"time +=10",999)
(999,"controller.checkcode[3].[]",1068)
(1000,"time +=10",1001)
(1001,"controller.checkcode[3].[]",1066)
(1002,"controller.tau=>setkeyvalid.[]",1006)
(1003,"user.keychecked[true].[]",1006)
(1003,"controller.setkeyinvalid[].[]",1009)
(1004,"controller.setkeyvalid[].[]",1010)
(1005,"controller.setkeyvalid[].[]",1012)
(1006,"controller.setkeyinvalid[].[]",1014)
(1007,"controller.tau=>setkeyvalid.[]",1016)
(1008,"user.keychecked[true].[]",1016)
(1008,"controller.setkeyinvalid[].[]",1017)
(1009,"user.keychecked[true].[]",1014)
(1010,"time +=10",1011)
(1011,"user.keychecked[true].[]",1080)
(1011,"controller.tau=>setkeyvalid.[]",1081)
(1012,"time +=10",1013)
(1013,"user.keychecked[true].[]",1084)
(1013,"controller.tau=>setkeyvalid.[]",1085)
(1014,"time +=10",1015)
(1015,"controller.checkcode[3].[]",1086)
(1016,"controller.setkeyinvalid[].[]",1018)
(1017,"user.keychecked[true].[]",1018)
(1018,"time +=10",1019)
(1019,"controller.checkcode[3].[]",1082)
(1020,"controller.setkeyvalid[].[]",1021)
(1021,"time +=10",1022)
(1022,"user.keychecked[true].[]",1102)
(1022,"controller.tau=>setkeyvalid.[]",1103)
(1023,"controller.tau=>setkeyvalid.[]",1027)
(1024,"user.keychecked[true].[]",1027)
(1024,"controller.setkeyinvalid[].[]",1029)
(1025,"controller.tau=>setkeyvalid.[]",1030)
(1026,"user.keychecked[true].[]",1030)
(1026,"controller.setkeyinvalid[].[]",1031)
(1027,"controller.setkeyinvalid[].[]",1032)
(1028,"controller.lockeduser[].[]",1034)
(1029,"user.keychecked[true].[]",1032)
(1030,"controller.setkeyinvalid[].[]",1035)
(1031,"user.keychecked[true].[]",1035)
(1032,"time +=10",1033)
(1033,"controller.checkcode[3].[]",1108)
(1034,"controller.setarmed[].[]",1037)
(1035,"time +=10",1036)
(1036,"controller.checkcode[3].[]",1117)
(1037,"door.lockdoor[].[]",1038)
(1038,"time +=10",1039)
(1039,"user.codechecked[true].[]",1109)
(1040,"controller.tau=>setkeyvalid.[]",1044)
(1041,"user.keychecked[true].[]",1044)
(1041,"controller.setkeyinvalid[].[]",1047)
(1042,"controller.tau=>setkeyvalid.[]",1048)
(1043,"user.keychecked[true].[]",1048)
(1043,"controller.setkeyinvalid[].[]",1049)
(1044,"controller.setkeyinvalid[].[]",1052)
(1045,"controller.tau=>setkeyvalid.[]",1050)
(1046,"user.keychecked[true].[]",1050)
(1046,"controller.setkeyinvalid[].[]",1051)
(1047,"user.keychecked[true].[]",1052)
(1048,"controller.setkeyinvalid[].[]",1054)
(1049,"user.keychecked[true].[]",1054)
(1050,"controller.setkeyinvalid[].[]",1056)
(1051,"user.keychecked[true].[]",1056)
(1052,"time +=9",1053)
(1053,"door.spiedon[].[]",1125)
(1054,"time +=9",1055)
(1055,"door.spiedon[].[]",1146)
(1056,"time +=9",1057)
(1057,"door.spiedon[].[]",1158)
(1058,"controller.tau=>setkeyvalid.[]",1060)
(1059,"user.keychecked[true].[]",1060)
(1059,"controller.setkeyinvalid[].[]",1061)
(1060,"controller.setkeyinvalid[].[]",1062)
(1061,"user.keychecked[true].[]",1062)
(1062,"time +=7",1063)
(1063,"door.spiedon[].[]",1139)
(1064,"controller.tau=>setkeyvalid.[]",1067)
(1065,"user.keychecked[true].[]",1067)
(1065,"controller.setkeyinvalid[].[]",1069)
(1066,"controller.lockeduser[].[]",1070)
(1067,"controller.setkeyinvalid[].[]",1071)
(1068,"controller.lockeduser[].[]",1073)
(1069,"user.keychecked[true].[]",1071)
(1070,"controller.setarmed[].[]",1074)
(1071,"time +=6",1072)
(1072,"door.spiedon[].[]",1153)
(1073,"controller.setarmed[].[]",1075)
(1074,"door.lockdoor[].[]",1076)
(1075,"door.lockdoor[].[]",1078)
(1076,"time +=6",1077)
(1077,"door.spiedon[].[]",1137)
(1078,"time +=6",1079)
(1079,"door.spiedon[].[]",1122)
(1080,"controller.tau=>setkeyvalid.[]",1083)
(1081,"user.keychecked[true].[]",1083)
(1081,"controller.setkeyinvalid[].[]",1087)
(1082,"controller.lockeduser[].[]",1088)
(1083,"controller.setkeyinvalid[].[]",1089)
(1084,"controller.tau=>setkeyvalid.[]",1091)
(1085,"user.keychecked[true].[]",1091)
(1085,"controller.setkeyinvalid[].[]",1092)
(1086,"controller.lockeduser[].[]",1093)
(1087,"user.keychecked[true].[]",1089)
(1088,"controller.setarmed[].[]",1094)
(1089,"time +=4",1090)
(1090,"door.spiedon[].[]",1164)
(1091,"controller.setkeyinvalid[].[]",1095)
(1092,"user.keychecked[true].[]",1095)
(1093,"controller.setarmed[].[]",1097)
(1094,"door.lockdoor[].[]",1098)
(1095,"time +=4",1096)
(1096,"door.spiedon[].[]",1159)
(1097,"door.lockdoor[].[]",1100)
(1098,"time +=4",1099)
(1099,"door.spiedon[].[]",1147)
(1100,"time +=4",1101)
(1101,"door.spiedon[].[]",1138)
(1102,"controller.tau=>setkeyvalid.[]",1104)
(1103,"user.keychecked[true].[]",1104)
(1103,"controller.setkeyinvalid[].[]",1105)
(1104,"controller.setkeyinvalid[].[]",1106)
(1105,"user.keychecked[true].[]",1106)
(1106,"time +=2",1107)
(1107,"door.spiedon[].[]",1123)
(1108,"controller.lockeduser[].[]",1110)
(1109,"door.getlockstatus[].[]",1111)
(1110,"controller.setarmed[].[]",1112)
(1111,"user.setstatus[false].[]",1113)
(1112,"door.lockdoor[].[]",1115)
(1113,"time +=1",1114)
(1114,"door.spiedon[].[]",1152)
(1115,"time +=1",1116)
(1116,"door.spiedon[].[]",1124)
(1117,"controller.lockeduser[].[]",1118)
(1118,"controller.setarmed[].[]",1119)
(1119,"door.lockdoor[].[]",1120)
(1120,"time +=1",1121)
(1121,"door.spiedon[].[]",1126)
(1122,"intruder.spyingdoor[false].[]",1127)
(1123,"intruder.spyingdoor[false].[]",1129)
(1124,"intruder.spyingdoor[false].[]",1131)
(1125,"intruder.spyingdoor[false].[]",1133)
(1126,"intruder.spyingdoor[false].[]",1135)
(1127,"time +=4",1128)
(1128,"user.codechecked[true].[]",1187)
(1129,"time +=8",1130)
(1130,"controller.checkcode[3].[]",1218)
(1131,"time +=9",1132)
(1132,"user.codechecked[true].[]",1223)
(1133,"time +=1",1134)
(1134,"controller.checkcode[3].[]",1167)
(1135,"time +=9",1136)
(1136,"user.codechecked[true].[]",1224)
(1137,"intruder.spyingdoor[false].[]",1140)
(1138,"intruder.spyingdoor[false].[]",1142)
(1139,"intruder.spyingdoor[false].[]",1144)
(1140,"time +=4",1141)
(1141,"user.codechecked[true].[]",1188)
(1142,"time +=6",1143)
(1143,"user.codechecked[true].[]",1210)
(1144,"time +=3",1145)
(1145,"controller.checkcode[3].[]",1182)
(1146,"intruder.spyingdoor[false].[]",1148)
(1147,"intruder.spyingdoor[false].[]",1150)
(1148,"time +=1",1149)
(1149,"controller.checkcode[3].[]",1168)
(1150,"time +=6",1151)
(1151,"user.codechecked[true].[]",1211)
(1152,"intruder.spyingdoor[false].[]",1154)
(1153,"intruder.spyingdoor[false].[]",1156)
(1154,"time +=19",1155)
(1155,"user.enterkey[].[]",1263)
(1155,"user.enterkey[].[_8]",1265)
(1155,"user.enterkey[].[_10]",1267)
(1156,"time +=4",1157)
(1157,"controller.checkcode[3].[]",1195)
(1158,"intruder.spyingdoor[false].[]",1160)
(1159,"intruder.spyingdoor[false].[]",1162)
(1160,"time +=1",1161)
(1161,"controller.checkcode[3].[]",1177)
(1162,"time +=6",1163)
(1163,"controller.checkcode[3].[]",1200)
(1164,"intruder.spyingdoor[false].[]",1165)
(1165,"time +=6",1166)
(1166,"controller.checkcode[3].[]",1201)
(1167,"controller.lockeduser[].[]",1169)
(1168,"controller.lockeduser[].[]",1170)
(1169,"controller.setarmed[].[]",1171)
(1170,"controller.setarmed[].[]",1172)
(1171,"door.lockdoor[].[]",1173)
(1172,"door.lockdoor[].[]",1175)
(1173,"time +=10",1174)
(1174,"user.codechecked[true].[]",1239)
(1175,"time +=10",1176)
(1176,"user.codechecked[true].[]",1232)
(1177,"controller.lockeduser[].[]",1178)
(1178,"controller.setarmed[].[]",1179)
(1179,"door.lockdoor[].[]",1180)
(1180,"time +=10",1181)
(1181,"user.codechecked[true].[]",1231)
(1182,"controller.lockeduser[].[]",1183)
(1183,"controller.setarmed[].[]",1184)
(1184,"door.lockdoor[].[]",1185)
(1185,"time +=10",1186)
(1186,"user.codechecked[true].[]",1243)
(1187,"door.getlockstatus[].[]",1189)
(1188,"door.getlockstatus[].[]",1190)
(1189,"user.setstatus[false].[]",1191)
(1190,"user.setstatus[false].[]",1193)
(1191,"time +=20",1192)
(1192,"user.enterkey[].[]",1272)
(1192,"user.enterkey[].[_8]",1274)
(1192,"user.enterkey[].[_10]",1276)
(1193,"time +=20",1194)
(1194,"user.enterkey[].[_3]",1272)
(1194,"user.enterkey[].[]",1274)
(1194,"user.enterkey[].[_10]",1276)
(1195,"controller.lockeduser[].[]",1196)
(1196,"controller.setarmed[].[]",1197)
(1197,"door.lockdoor[].[]",1198)
(1198,"time +=10",1199)
(1199,"user.codechecked[true].[]",1247)
(1200,"controller.lockeduser[].[]",1202)
(1201,"controller.lockeduser[].[]",1203)
(1202,"controller.setarmed[].[]",1204)
(1203,"controller.setarmed[].[]",1205)
(1204,"door.lockdoor[].[]",1206)
(1205,"door.lockdoor[].[]",1208)
(1206,"time +=10",1207)
(1207,"user.codechecked[true].[]",1252)
(1208,"time +=10",1209)
(1209,"user.codechecked[true].[]",1251)
(1210,"door.getlockstatus[].[]",1212)
(1211,"door.getlockstatus[].[]",1213)
(1212,"user.setstatus[false].[]",1214)
(1213,"user.setstatus[false].[]",1216)
(1214,"time +=20",1215)
(1215,"user.enterkey[].[]",1278)
(1215,"user.enterkey[].[_8]",1280)
(1215,"user.enterkey[].[_10]",1282)
(1216,"time +=20",1217)
(1217,"user.enterkey[].[_3]",1278)
(1217,"user.enterkey[].[_8]",1280)
(1217,"user.enterkey[].[]",1282)
(1218,"controller.lockeduser[].[]",1219)
(1219,"controller.setarmed[].[]",1220)
(1220,"door.lockdoor[].[]",1221)
(1221,"time +=10",1222)
(1222,"user.codechecked[true].[]",1259)
(1223,"door.getlockstatus[].[]",1225)
(1224,"door.getlockstatus[].[]",1226)
(1225,"user.setstatus[false].[]",1227)
(1226,"user.setstatus[false].[]",1229)
(1227,"time +=20",1228)
(1228,"user.enterkey[].[]",1290)
(1228,"user.enterkey[].[_8]",1292)
(1228,"user.enterkey[].[_10]",1294)
(1229,"time +=20",1230)
(1230,"user.enterkey[].[_3]",1290)
(1230,"user.enterkey[].[]",1292)
(1230,"user.enterkey[].[_10]",1294)
(1231,"door.getlockstatus[].[]",1233)
(1232,"door.getlockstatus[].[]",1234)
(1233,"user.setstatus[false].[]",1235)
(1234,"user.setstatus[false].[]",1237)
(1235,"time +=19",1236)
(1236,"door.spiedon[].[]",1302)
(1237,"time +=19",1238)
(1238,"door.spiedon[].[]",1329)
(1239,"door.getlockstatus[].[]",1240)
(1240,"user.setstatus[false].[]",1241)
(1241,"time +=19",1242)
(1242,"door.spiedon[].[]",1317)
(1243,"door.getlockstatus[].[]",1244)
(1244,"user.setstatus[false].[]",1245)
(1245,"time +=17",1246)
(1246,"door.spiedon[].[]",1351)
(1247,"door.getlockstatus[].[]",1248)
(1248,"user.setstatus[false].[]",1249)
(1249,"time +=16",1250)
(1250,"door.spiedon[].[]",1350)
(1251,"door.getlockstatus[].[]",1253)
(1252,"door.getlockstatus[].[]",1254)
(1253,"user.setstatus[false].[]",1255)
(1254,"user.setstatus[false].[]",1257)
(1255,"time +=14",1256)
(1256,"door.spiedon[].[]",1318)
(1257,"time +=14",1258)
(1258,"door.spiedon[].[]",1330)
(1259,"door.getlockstatus[].[]",1260)
(1260,"user.setstatus[false].[]",1261)
(1261,"time +=12",1262)
(1262,"door.spiedon[].[]",1320)
(1263,"time +=3",1264)
(1264,"controller.checkkey[2].[]",1269)
(1265,"time +=8",1266)
(1266,"controller.checkkey[2].[]",1284)
(1267,"time +=10",1268)
(1268,"controller.checkkey[2].[]",1297)
(1269,"controller.setkeyvalid[].[]",1270)
(1270,"time +=8",1271)
(1271,"door.spiedon[].[]",1359)
(1272,"time +=3",1273)
(1273,"controller.checkkey[2].[]",1285)
(1274,"time +=6",1275)
(1275,"door.spiedon[].[]",1303)
(1276,"time +=6",1277)
(1277,"door.spiedon[].[]",1319)
(1278,"time +=3",1279)
(1279,"controller.checkkey[2].[]",1296)
(1280,"time +=4",1281)
(1281,"door.spiedon[].[]",1341)
(1282,"time +=4",1283)
(1283,"door.spiedon[].[]",1331)
(1284,"controller.setkeyvalid[].[]",1286)
(1285,"controller.setkeyvalid[].[]",1288)
(1286,"time +=3",1287)
(1287,"door.spiedon[].[]",1304)
(1288,"time +=3",1289)
(1289,"door.spiedon[].[]",1352)
(1290,"time +=1",1291)
(1291,"door.spiedon[].[]",1342)
(1292,"time +=1",1293)
(1293,"door.spiedon[].[]",1332)
(1294,"time +=1",1295)
(1295,"door.spiedon[].[]",1343)
(1296,"controller.setkeyvalid[].[]",1298)
(1297,"controller.setkeyvalid[].[]",1300)
(1298,"time +=1",1299)
(1299,"door.spiedon[].[]",1305)
(1300,"time +=1",1301)
(1301,"door.spiedon[].[]",1306)
(1302,"intruder.spyingdoor[false].[]",1307)
(1303,"intruder.spyingdoor[false].[]",1309)
(1304,"intruder.spyingdoor[false].[]",1311)
(1305,"intruder.spyingdoor[false].[]",1313)
(1306,"intruder.spyingdoor[false].[]",1315)
(1307,"time +=1",1308)
(1308,"user.enterkey[].[_3]",1362)
(1308,"user.enterkey[].[]",1364)
(1308,"user.enterkey[].[_10]",1366)
(1309,"time +=2",1310)
(1310,"controller.checkkey[2].[]",1368)
(1311,"time +=7",1312)
(1312,"user.keychecked[true].[]",1404)
(1312,"controller.tau=>setkeyvalid.[]",1405)
(1313,"time +=9",1314)
(1314,"user.keychecked[true].[]",1425)
(1314,"controller.tau=>setkeyvalid.[]",1426)
(1315,"time +=9",1316)
(1316,"user.keychecked[true].[]",1423)
(1316,"controller.tau=>setkeyvalid.[]",1424)
(1317,"intruder.spyingdoor[false].[]",1321)
(1318,"intruder.spyingdoor[false].[]",1323)
(1319,"intruder.spyingdoor[false].[]",1325)
(1320,"intruder.spyingdoor[false].[]",1327)
(1321,"time +=1",1322)
(1322,"user.enterkey[].[_3]",1362)
(1322,"user.enterkey[].[_8]",1364)
(1322,"user.enterkey[].[]",1366)
(1323,"time +=6",1324)
(1324,"user.enterkey[].[_3]",1395)
(1324,"user.enterkey[].[]",1397)
(1324,"user.enterkey[].[_10]",1399)
(1325,"time +=4",1326)
(1326,"controller.checkkey[2].[]",1381)
(1327,"time +=8",1328)
(1328,"user.enterkey[].[_3]",5562)
(1328,"user.enterkey[].[_8]",5563)
(1328,"user.enterkey[].[]",5564)
(1329,"intruder.spyingdoor[false].[]",1333)
(1330,"intruder.spyingdoor[false].[]",1335)
(1331,"intruder.spyingdoor[false].[]",1337)
(1332,"intruder.spyingdoor[false].[]",1339)
(1333,"time +=1",1334)
(1334,"user.enterkey[].[]",1362)
(1334,"user.enterkey[].[_8]",1364)
(1334,"user.enterkey[].[_10]",1366)
(1335,"time +=6",1336)
(1336,"user.enterkey[].[_3]",1395)
(1336,"user.enterkey[].[_8]",1397)
(1336,"user.enterkey[].[]",1399)
(1337,"time +=6",1338)
(1338,"controller.checkkey[2].[]",1401)
(1339,"time +=7",1340)
(1340,"controller.checkkey[2].[]",1419)
(1341,"intruder.spyingdoor[false].[]",1344)
(1342,"intruder.spyingdoor[false].[]",1346)
(1343,"intruder.spyingdoor[false].[]",1348)
(1344,"time +=4",1345)
(1345,"controller.checkkey[2].[]",1382)
(1346,"time +=2",1347)
(1347,"controller.checkkey[2].[]",1369)
(1348,"time +=9",1349)
(1349,"controller.checkkey[2].[]",1440)
(1350,"intruder.spyingdoor[false].[]",1353)
(1351,"intruder.spyingdoor[false].[]",1355)
(1352,"intruder.spyingdoor[false].[]",1357)
(1353,"time +=4",1354)
(1354,"user.enterkey[].[_3]",1383)
(1354,"user.enterkey[].[]",1385)
(1354,"user.enterkey[].[_10]",1387)
(1355,"time +=3",1356)
(1356,"user.enterkey[].[_3]",5559)
(1356,"user.enterkey[].[_8]",5560)
(1356,"user.enterkey[].[]",5561)
(1357,"time +=7",1358)
(1358,"user.keychecked[true].[]",1406)
(1358,"controller.tau=>setkeyvalid.[]",1407)
(1359,"intruder.spyingdoor[false].[]",1360)
(1360,"time +=2",1361)
(1361,"user.keychecked[true].[]",1370)
(1361,"controller.tau=>setkeyvalid.[]",1371)
(1362,"time +=3",1363)
(1363,"controller.checkkey[2].[]",1380)
(1364,"time +=8",1365)
(1365,"controller.checkkey[2].[]",1422)
(1366,"time +=10",1367)
(1367,"controller.checkkey[2].[]",1443)
(1368,"controller.setkeyvalid[].[]",1372)
(1369,"controller.setkeyvalid[].[]",1374)
(1370,"controller.tau=>setkeyvalid.[]",1376)
(1371,"user.keychecked[true].[]",1376)
(1371,"controller.setkeyinvalid[].[]",1377)
(1372,"time +=10",1373)
(1373,"user.keychecked[true].[]",1447)
(1373,"controller.tau=>setkeyvalid.[]",1448)
(1374,"time +=10",1375)
(1375,"user.keychecked[true].[]",1449)
(1375,"controller.tau=>setkeyvalid.[]",1450)
(1376,"controller.setkeyinvalid[].[]",1378)
(1377,"user.keychecked[true].[]",1378)
(1378,"time +=10",1379)
(1379,"controller.checkcode[3].[]",1446)
(1380,"controller.setkeyvalid[].[]",1389)
(1381,"controller.setkeyvalid[].[]",1391)
(1382,"controller.setkeyvalid[].[]",1393)
(1383,"time +=3",1384)
(1384,"controller.checkkey[2].[]",1408)
(1385,"time +=8",1386)
(1386,"controller.checkkey[2].[]",1451)
(1387,"time +=10",1388)
(1388,"controller.checkkey[2].[]",1469)
(1389,"time +=10",1390)
(1390,"user.keychecked[true].[]",1480)
(1390,"controller.tau=>setkeyvalid.[]",1481)
(1391,"time +=10",1392)
(1392,"user.keychecked[true].[]",1466)
(1392,"controller.tau=>setkeyvalid.[]",1467)
(1393,"time +=10",1394)
(1394,"user.keychecked[true].[]",1478)
(1394,"controller.tau=>setkeyvalid.[]",1479)
(1395,"time +=3",1396)
(1396,"controller.checkkey[2].[]",1427)
(1397,"time +=8",1398)
(1398,"controller.checkkey[2].[]",1468)
(1399,"time +=10",1400)
(1400,"controller.checkkey[2].[]",1492)
(1401,"controller.setkeyvalid[].[]",1402)
(1402,"time +=10",1403)
(1403,"user.keychecked[true].[]",1490)
(1403,"controller.tau=>setkeyvalid.[]",1491)
(1404,"controller.tau=>setkeyvalid.[]",1415)
(1405,"user.keychecked[true].[]",1415)
(1405,"controller.setkeyinvalid[].[]",1416)
(1406,"controller.tau=>setkeyvalid.[]",1409)
(1407,"user.keychecked[true].[]",1409)
(1407,"controller.setkeyinvalid[].[]",1410)
(1408,"controller.setkeyvalid[].[]",1411)
(1409,"controller.setkeyinvalid[].[]",1413)
(1410,"user.keychecked[true].[]",1413)
(1411,"time +=10",1412)
(1412,"user.keychecked[true].[]",1501)
(1412,"controller.tau=>setkeyvalid.[]",1502)
(1413,"time +=10",1414)
(1414,"controller.checkcode[3].[]",1513)
(1415,"controller.setkeyinvalid[].[]",1417)
(1416,"user.keychecked[true].[]",1417)
(1417,"time +=10",1418)
(1418,"controller.checkcode[3].[]",1514)
(1419,"controller.setkeyvalid[].[]",1420)
(1420,"time +=10",1421)
(1421,"user.keychecked[true].[]",1499)
(1421,"controller.tau=>setkeyvalid.[]",1500)
(1422,"controller.setkeyvalid[].[]",1428)
(1423,"controller.tau=>setkeyvalid.[]",1430)
(1424,"user.keychecked[true].[]",1430)
(1424,"controller.setkeyinvalid[].[]",1431)
(1425,"controller.tau=>setkeyvalid.[]",1432)
(1426,"user.keychecked[true].[]",1432)
(1426,"controller.setkeyinvalid[].[]",1437)
(1427,"controller.setkeyvalid[].[]",1438)
(1428,"time +=10",1429)
(1429,"user.keychecked[true].[]",1528)
(1429,"controller.tau=>setkeyvalid.[]",1529)
(1430,"controller.setkeyinvalid[].[]",1433)
(1431,"user.keychecked[true].[]",1433)
(1432,"controller.setkeyinvalid[].[]",1435)
(1433,"time +=10",1434)
(1434,"controller.checkcode[3].[]",1546)
(1435,"time +=10",1436)
(1436,"controller.checkcode[3].[]",1523)
(1437,"user.keychecked[true].[]",1435)
(1438,"time +=10",1439)
(1439,"user.keychecked[true].[]",1524)
(1439,"controller.tau=>setkeyvalid.[]",1525)
(1440,"controller.setkeyvalid[].[]",1441)
(1441,"time +=10",1442)
(1442,"user.keychecked[true].[]",1526)
(1442,"controller.tau=>setkeyvalid.[]",1527)
(1443,"controller.setkeyvalid[].[]",1444)
(1444,"time +=10",1445)
(1445,"user.keychecked[true].[]",1551)
(1445,"controller.tau=>setkeyvalid.[]",1552)
(1446,"controller.lockeduser[].[]",1452)
(1447,"controller.tau=>setkeyvalid.[]",1453)
(1448,"user.keychecked[true].[]",1453)
(1448,"controller.setkeyinvalid[].[]",1454)
(1449,"controller.tau=>setkeyvalid.[]",1455)
(1450,"user.keychecked[true].[]",1455)
(1450,"controller.setkeyinvalid[].[]",1460)
(1451,"controller.setkeyvalid[].[]",1461)
(1452,"controller.setunarmed[].[]",1463)
(1453,"controller.setkeyinvalid[].[]",1456)
(1454,"user.keychecked[true].[]",1456)
(1455,"controller.setkeyinvalid[].[]",1458)
(1456,"time +=10",1457)
(1457,"controller.checkcode[3].[]",1563)
(1458,"time +=10",1459)
(1459,"controller.checkcode[3].[]",1564)
(1460,"user.keychecked[true].[]",1458)
(1461,"time +=10",1462)
(1462,"user.keychecked[true].[]",1561)
(1462,"controller.tau=>setkeyvalid.[]",1562)
(1463,"door.unlockdoor[].[]",1464)
(1464,"time +=5",1465)
(1465,"controller.setdoorstatus[true, false].[]",1503)
(1466,"controller.tau=>setkeyvalid.[]",1470)
(1467,"user.keychecked[true].[]",1470)
(1467,"controller.setkeyinvalid[].[]",1471)
(1468,"controller.setkeyvalid[].[]",1472)
(1469,"controller.setkeyvalid[].[]",1474)
(1470,"controller.setkeyinvalid[].[]",1476)
(1471,"user.keychecked[true].[]",1476)
(1472,"time +=10",1473)
(1473,"user.keychecked[true].[]",1600)
(1473,"controller.tau=>setkeyvalid.[]",1601)
(1474,"time +=10",1475)
(1475,"user.keychecked[true].[]",1598)
(1475,"controller.tau=>setkeyvalid.[]",1599)
(1476,"time +=10",1477)
(1477,"controller.checkcode[3].[]",1589)
(1478,"controller.tau=>setkeyvalid.[]",1482)
(1479,"user.keychecked[true].[]",1482)
(1479,"controller.setkeyinvalid[].[]",1483)
(1480,"controller.tau=>setkeyvalid.[]",1484)
(1481,"user.keychecked[true].[]",1484)
(1481,"controller.setkeyinvalid[].[]",1485)
(1482,"controller.setkeyinvalid[].[]",1486)
(1483,"user.keychecked[true].[]",1486)
(1484,"controller.setkeyinvalid[].[]",1488)
(1485,"user.keychecked[true].[]",1488)
(1486,"time +=10",1487)
(1487,"controller.checkcode[3].[]",1581)
(1488,"time +=10",1489)
(1489,"controller.checkcode[3].[]",1584)
(1490,"controller.tau=>setkeyvalid.[]",1493)
(1491,"user.keychecked[true].[]",1493)
(1491,"controller.setkeyinvalid[].[]",1494)
(1492,"controller.setkeyvalid[].[]",1495)
(1493,"controller.setkeyinvalid[].[]",1497)
(1494,"user.keychecked[true].[]",1497)
(1495,"time +=10",1496)
(1496,"user.keychecked[true].[]",1612)
(1496,"controller.tau=>setkeyvalid.[]",1613)
(1497,"time +=10",1498)
(1498,"controller.checkcode[3].[]",1614)
(1499,"controller.tau=>setkeyvalid.[]",1505)
(1500,"user.keychecked[true].[]",1505)
(1500,"controller.setkeyinvalid[].[]",1506)
(1501,"controller.tau=>setkeyvalid.[]",1507)
(1502,"user.keychecked[true].[]",1507)
(1502,"controller.setkeyinvalid[].[]",1508)
(1503,"time +=5",1504)
(1504,"user.codechecked[true].[]",1573)
(1505,"controller.setkeyinvalid[].[]",1509)
(1506,"user.keychecked[true].[]",1509)
(1507,"controller.setkeyinvalid[].[]",1511)
(1508,"user.keychecked[true].[]",1511)
(1509,"time +=10",1510)
(1510,"controller.checkcode[3].[]",1625)
(1511,"time +=10",1512)
(1512,"controller.checkcode[3].[]",1630)
(1513,"controller.lockeduser[].[]",1515)
(1514,"controller.lockeduser[].[]",1516)
(1515,"controller.setunarmed[].[]",1517)
(1516,"controller.setunarmed[].[]",1518)
(1517,"door.unlockdoor[].[]",1519)
(1518,"door.unlockdoor[].[]",1521)
(1519,"time +=5",1520)
(1520,"controller.setdoorstatus[true, false].[]",1557)
(1521,"time +=5",1522)
(1522,"controller.setdoorstatus[true, false].[]",1559)
(1523,"controller.lockeduser[].[]",1530)
(1524,"controller.tau=>setkeyvalid.[]",1538)
(1525,"user.keychecked[true].[]",1538)
(1525,"controller.setkeyinvalid[].[]",1539)
(1526,"controller.tau=>setkeyvalid.[]",1540)
(1527,"user.keychecked[true].[]",1540)
(1527,"controller.setkeyinvalid[].[]",1545)
(1528,"controller.tau=>setkeyvalid.[]",1531)
(1529,"user.keychecked[true].[]",1531)
(1529,"controller.setkeyinvalid[].[]",1532)
(1530,"controller.setunarmed[].[]",1533)
(1531,"controller.setkeyinvalid[].[]",1534)
(1532,"user.keychecked[true].[]",1534)
(1533,"door.unlockdoor[].[]",1536)
(1534,"time +=10",1535)
(1535,"controller.checkcode[3].[]",1661)
(1536,"time +=5",1537)
(1537,"controller.setdoorstatus[true, false].[]",1585)
(1538,"controller.setkeyinvalid[].[]",1541)
(1539,"user.keychecked[true].[]",1541)
(1540,"controller.setkeyinvalid[].[]",1543)
(1541,"time +=10",1542)
(1542,"controller.checkcode[3].[]",1645)
(1543,"time +=10",1544)
(1544,"controller.checkcode[3].[]",1646)
(1545,"user.keychecked[true].[]",1543)
(1546,"controller.lockeduser[].[]",1547)
(1547,"controller.setunarmed[].[]",1548)
(1548,"door.unlockdoor[].[]",1549)
(1549,"time +=5",1550)
(1550,"controller.setdoorstatus[true, false].[]",1582)
(1551,"controller.tau=>setkeyvalid.[]",1553)
(1552,"user.keychecked[true].[]",1553)
(1552,"controller.setkeyinvalid[].[]",1554)
(1553,"controller.setkeyinvalid[].[]",1555)
(1554,"user.keychecked[true].[]",1555)
(1555,"time +=9",1556)
(1556,"door.spiedon[].[]",1690)
(1557,"time +=5",1558)
(1558,"user.codechecked[true].[]",1628)
(1559,"time +=5",1560)
(1560,"user.codechecked[true].[]",1639)
(1561,"controller.tau=>setkeyvalid.[]",1565)
(1562,"user.keychecked[true].[]",1565)
(1562,"controller.setkeyinvalid[].[]",1566)
(1563,"controller.lockeduser[].[]",1567)
(1564,"controller.lockeduser[].[]",1568)
(1565,"controller.setkeyinvalid[].[]",1569)
(1566,"user.keychecked[true].[]",1569)
(1567,"controller.setunarmed[].[]",1571)
(1568,"controller.setunarmed[].[]",1572)
(1569,"time +=8",1570)
(1570,"door.spiedon[].[]",1716)
(1571,"door.unlockdoor[].[]",1574)
(1572,"door.unlockdoor[].[]",1576)
(1573,"door.getlockstatus[].[]",1578)
(1574,"time +=5",1575)
(1575,"controller.setdoorstatus[true, false].[]",1623)
(1576,"time +=5",1577)
(1577,"controller.setdoorstatus[true, false].[]",1626)
(1578,"user.setstatus[false].[]",1579)
(1579,"time +=8",1580)
(1580,"door.spiedon[].[]",1674)
(1581,"controller.lockeduser[].[]",1587)
(1582,"time +=5",1583)
(1583,"user.codechecked[true].[]",1649)
(1584,"controller.lockeduser[].[]",1588)
(1585,"time +=5",1586)
(1586,"user.codechecked[true].[]",1667)
(1587,"controller.setunarmed[].[]",1590)
(1588,"controller.setunarmed[].[]",1591)
(1589,"controller.lockeduser[].[]",1592)
(1590,"door.unlockdoor[].[]",1593)
(1591,"door.unlockdoor[].[]",1595)
(1592,"controller.setunarmed[].[]",1597)
(1593,"time +=5",1594)
(1594,"controller.setdoorstatus[true, false].[]",1664)
(1595,"time +=5",1596)
(1596,"controller.setdoorstatus[true, false].[]",1662)
(1597,"door.unlockdoor[].[]",1602)
(1598,"controller.tau=>setkeyvalid.[]",1604)
(1599,"user.keychecked[true].[]",1604)
(1599,"controller.setkeyinvalid[].[]",1605)
(1600,"controller.tau=>setkeyvalid.[]",1606)
(1601,"user.keychecked[true].[]",1606)
(1601,"controller.setkeyinvalid[].[]",1607)
(1602,"time +=5",1603)
(1603,"controller.setdoorstatus[true, false].[]",1647)
(1604,"controller.setkeyinvalid[].[]",1608)
(1605,"user.keychecked[true].[]",1608)
(1606,"controller.setkeyinvalid[].[]",1610)
(1607,"user.keychecked[true].[]",1610)
(1608,"time +=6",1609)
(1609,"door.spiedon[].[]",1689)
(1610,"time +=6",1611)
(1611,"door.spiedon[].[]",1692)
(1612,"controller.tau=>setkeyvalid.[]",1615)
(1613,"user.keychecked[true].[]",1615)
(1613,"controller.setkeyinvalid[].[]",1616)
(1614,"controller.lockeduser[].[]",1617)
(1615,"controller.setkeyinvalid[].[]",1618)
(1616,"user.keychecked[true].[]",1618)
(1617,"controller.setunarmed[].[]",1620)
(1618,"time +=4",1619)
(1619,"door.spiedon[].[]",1703)
(1620,"door.unlockdoor[].[]",1621)
(1621,"time +=4",1622)
(1622,"door.spiedon[].[]",1675)
(1623,"time +=3",1624)
(1624,"door.spiedon[].[]",1676)
(1625,"controller.lockeduser[].[]",1629)
(1626,"time +=3",1627)
(1627,"door.spiedon[].[]",1726)
(1628,"door.getlockstatus[].[]",1631)
(1629,"controller.setunarmed[].[]",1632)
(1630,"controller.lockeduser[].[]",1633)
(1631,"user.setstatus[false].[]",1634)
(1632,"door.unlockdoor[].[]",1636)
(1633,"controller.setunarmed[].[]",1638)
(1634,"time +=3",1635)
(1635,"door.spiedon[].[]",1725)
(1636,"time +=3",1637)
(1637,"door.spiedon[].[]",1704)
(1638,"door.unlockdoor[].[]",1640)
(1639,"door.getlockstatus[].[]",1642)
(1640,"time +=3",1641)
(1641,"door.spiedon[].[]",1691)
(1642,"user.setstatus[false].[]",1643)
(1643,"time +=3",1644)
(1644,"door.spiedon[].[]",1705)
(1645,"controller.lockeduser[].[]",1650)
(1646,"controller.lockeduser[].[]",1651)
(1647,"time +=1",1648)
(1648,"door.spiedon[].[]",1701)
(1649,"door.getlockstatus[].[]",1652)
(1650,"controller.setunarmed[].[]",1653)
(1651,"controller.setunarmed[].[]",1654)
(1652,"user.setstatus[false].[]",1655)
(1653,"door.unlockdoor[].[]",1657)
(1654,"door.unlockdoor[].[]",1659)
(1655,"time +=1",1656)
(1656,"door.spiedon[].[]",1717)
(1657,"time +=1",1658)
(1658,"door.spiedon[].[]",1734)
(1659,"time +=1",1660)
(1660,"door.spiedon[].[]",1727)
(1661,"controller.lockeduser[].[]",1666)
(1662,"time +=1",1663)
(1663,"door.spiedon[].[]",1718)
(1664,"time +=1",1665)
(1665,"door.spiedon[].[]",1702)
(1666,"controller.setunarmed[].[]",1668)
(1667,"door.getlockstatus[].[]",1669)
(1668,"door.unlockdoor[].[]",1670)
(1669,"user.setstatus[false].[]",1672)
(1670,"time +=1",1671)
(1671,"door.spiedon[].[]",1677)
(1672,"time +=1",1673)
(1673,"door.spiedon[].[]",1678)
(1674,"intruder.spyingdoor[false].[]",1679)
(1675,"intruder.spyingdoor[false].[]",1681)
(1676,"intruder.spyingdoor[false].[]",1683)
(1677,"intruder.spyingdoor[false].[]",1685)
(1678,"intruder.spyingdoor[false].[]",1687)
(1679,"time +=12",1680)
(1680,"user.enterkey[].[]",1832)
(1680,"user.enterkey[].[_8]",1834)
(1680,"user.enterkey[].[_10]",1836)
(1681,"time +=1",1682)
(1682,"controller.setdoorstatus[true, false].[]",1738)
(1683,"time +=2",1684)
(1684,"user.codechecked[true].[]",1745)
(1685,"time +=4",1686)
(1686,"controller.setdoorstatus[true, false].[]",1761)
(1687,"time +=19",1688)
(1688,"user.enterkey[].[]",1863)
(1688,"user.enterkey[].[_8]",1865)
(1688,"user.enterkey[].[_10]",1867)
(1689,"intruder.spyingdoor[false].[]",1693)
(1690,"intruder.spyingdoor[false].[]",1695)
(1691,"intruder.spyingdoor[false].[]",1697)
(1692,"intruder.spyingdoor[false].[]",1699)
(1693,"time +=4",1694)
(1694,"controller.checkcode[3].[]",1763)
(1695,"time +=1",1696)
(1696,"controller.checkcode[3].[]",1737)
(1697,"time +=2",1698)
(1698,"controller.setdoorstatus[true, false].[]",1746)
(1699,"time +=4",1700)
(1700,"controller.checkcode[3].[]",1780)
(1701,"intruder.spyingdoor[false].[]",1706)
(1702,"intruder.spyingdoor[false].[]",1708)
(1703,"intruder.spyingdoor[false].[]",1710)
(1704,"intruder.spyingdoor[false].[]",1712)
(1705,"intruder.spyingdoor[false].[]",1714)
(1706,"time +=4",1707)
(1707,"user.codechecked[true].[]",1764)
(1708,"time +=4",1709)
(1709,"user.codechecked[true].[]",1769)
(1710,"time +=6",1711)
(1711,"controller.checkcode[3].[]",1792)
(1712,"time +=2",1713)
(1713,"controller.setdoorstatus[true, false].[]",1748)
(1714,"time +=17",1715)
(1715,"user.enterkey[].[_3]",1857)
(1715,"user.enterkey[].[]",1859)
(1715,"user.enterkey[].[_10]",1861)
(1716,"intruder.spyingdoor[false].[]",1719)
(1717,"intruder.spyingdoor[false].[]",1721)
(1718,"intruder.spyingdoor[false].[]",1723)
(1719,"time +=2",1720)
(1720,"controller.checkcode[3].[]",1752)
(1721,"time +=19",1722)
(1722,"user.enterkey[].[_3]",1863)
(1722,"user.enterkey[].[_8]",1865)
(1722,"user.enterkey[].[]",1867)
(1723,"time +=4",1724)
(1724,"user.codechecked[true].[]",1781)
(1725,"intruder.spyingdoor[false].[]",1728)
(1726,"intruder.spyingdoor[false].[]",1730)
(1727,"intruder.spyingdoor[false].[]",1732)
(1728,"time +=17",1729)
(1729,"user.enterkey[].[]",1857)
(1729,"user.enterkey[].[_8]",1859)
(1729,"user.enterkey[].[_10]",1861)
(1730,"time +=2",1731)
(1731,"user.codechecked[true].[]",1744)
(1732,"time +=4",1733)
(1733,"controller.setdoorstatus[true, false].[]",1767)
(1734,"intruder.spyingdoor[false].[]",1735)
(1735,"time +=4",1736)
(1736,"controller.setdoorstatus[true, false].[]",1765)
(1737,"controller.lockeduser[].[]",1740)
(1738,"time +=5",1739)
(1739,"user.codechecked[true].[]",1789)
(1740,"controller.setunarmed[].[]",1741)
(1741,"door.unlockdoor[].[]",1742)
(1742,"time +=5",1743)
(1743,"controller.setdoorstatus[true, false].[]",1790)
(1744,"door.getlockstatus[].[]",1750)
(1745,"door.getlockstatus[].[]",1751)
(1746,"time +=5",1747)
(1747,"user.codechecked[true].[]",1802)
(1748,"time +=5",1749)
(1749,"user.codechecked[true].[]",1803)
(1750,"user.setstatus[false].[]",1753)
(1751,"user.setstatus[false].[]",1755)
(1752,"controller.lockeduser[].[]",1757)
(1753,"time +=20",1754)
(1754,"user.enterkey[].[]",1875)
(1754,"user.enterkey[].[_8]",1877)
(1754,"user.enterkey[].[_10]",1879)
(1755,"time +=20",1756)
(1756,"user.enterkey[].[_3]",1875)
(1756,"user.enterkey[].[]",1877)
(1756,"user.enterkey[].[_10]",1879)
(1757,"controller.setunarmed[].[]",1758)
(1758,"door.unlockdoor[].[]",1759)
(1759,"time +=5",1760)
(1760,"controller.setdoorstatus[true, false].[]",1800)
(1761,"time +=5",1762)
(1762,"user.codechecked[true].[]",1810)
(1763,"controller.lockeduser[].[]",1770)
(1764,"door.getlockstatus[].[]",1771)
(1765,"time +=5",1766)
(1766,"user.codechecked[true].[]",1814)
(1767,"time +=5",1768)
(1768,"user.codechecked[true].[]",1813)
(1769,"door.getlockstatus[].[]",1772)
(1770,"controller.setunarmed[].[]",1773)
(1771,"user.setstatus[false].[]",1774)
(1772,"user.setstatus[false].[]",1776)
(1773,"door.unlockdoor[].[]",1778)
(1774,"time +=20",1775)
(1775,"user.enterkey[].[_3]",1887)
(1775,"user.enterkey[].[_8]",1889)
(1775,"user.enterkey[].[]",1891)
(1776,"time +=20",1777)
(1777,"user.enterkey[].[_3]",1887)
(1777,"user.enterkey[].[]",1889)
(1777,"user.enterkey[].[_10]",1891)
(1778,"time +=5",1779)
(1779,"controller.setdoorstatus[true, false].[]",1824)
(1780,"controller.lockeduser[].[]",1782)
(1781,"door.getlockstatus[].[]",1783)
(1782,"controller.setunarmed[].[]",1784)
(1783,"user.setstatus[false].[]",1785)
(1784,"door.unlockdoor[].[]",1787)
(1785,"time +=20",1786)
(1786,"user.enterkey[].[]",1887)
(1786,"user.enterkey[].[_8]",1889)
(1786,"user.enterkey[].[_10]",1891)
(1787,"time +=5",1788)
(1788,"controller.setdoorstatus[true, false].[]",1811)
(1789,"door.getlockstatus[].[]",1793)
(1790,"time +=5",1791)
(1791,"user.codechecked[true].[]",1826)
(1792,"controller.lockeduser[].[]",1794)
(1793,"user.setstatus[false].[]",1795)
(1794,"controller.setunarmed[].[]",1797)
(1795,"time +=20",1796)
(1796,"user.enterkey[].[_3]",5565)
(1796,"user.enterkey[].[_8]",5566)
(1796,"user.enterkey[].[]",5567)
(1797,"door.unlockdoor[].[]",1798)
(1798,"time +=5",1799)
(1799,"controller.setdoorstatus[true, false].[]",1827)
(1800,"time +=5",1801)
(1801,"user.codechecked[true].[]",1838)
(1802,"door.getlockstatus[].[]",1804)
(1803,"door.getlockstatus[].[]",1805)
(1804,"user.setstatus[false].[]",1806)
(1805,"user.setstatus[false].[]",1808)
(1806,"time +=20",1807)
(1807,"user.enterkey[].[]",1905)
(1807,"user.enterkey[].[_8]",1907)
(1807,"user.enterkey[].[_10]",1909)
(1808,"time +=20",1809)
(1809,"user.enterkey[].[_3]",1905)
(1809,"user.enterkey[].[]",1907)
(1809,"user.enterkey[].[_10]",1909)
(1810,"door.getlockstatus[].[]",1815)
(1811,"time +=5",1812)
(1812,"user.codechecked[true].[]",1842)
(1813,"door.getlockstatus[].[]",1816)
(1814,"door.getlockstatus[].[]",1817)
(1815,"user.setstatus[false].[]",1818)
(1816,"user.setstatus[false].[]",1820)
(1817,"user.setstatus[false].[]",1822)
(1818,"time +=20",1819)
(1819,"user.enterkey[].[_3]",1921)
(1819,"user.enterkey[].[]",1923)
(1819,"user.enterkey[].[_10]",1925)
(1820,"time +=20",1821)
(1821,"user.enterkey[].[_3]",1921)
(1821,"user.enterkey[].[_8]",1923)
(1821,"user.enterkey[].[]",1925)
(1822,"time +=20",1823)
(1823,"user.enterkey[].[]",1921)
(1823,"user.enterkey[].[_8]",1923)
(1823,"user.enterkey[].[_10]",1925)
(1824,"time +=5",1825)
(1825,"user.codechecked[true].[]",1843)
(1826,"door.getlockstatus[].[]",1829)
(1827,"time +=5",1828)
(1828,"user.codechecked[true].[]",1853)
(1829,"user.setstatus[false].[]",1830)
(1830,"time +=19",1831)
(1831,"door.spiedon[].[]",2017)
(1832,"time +=3",1833)
(1833,"controller.checkkey[2].[]",1850)
(1834,"time +=8",1835)
(1835,"controller.checkkey[2].[]",1869)
(1836,"time +=10",1837)
(1837,"controller.checkkey[2].[]",1884)
(1838,"door.getlockstatus[].[]",1839)
(1839,"user.setstatus[false].[]",1840)
(1840,"time +=18",1841)
(1841,"door.spiedon[].[]",2010)
(1842,"door.getlockstatus[].[]",1844)
(1843,"door.getlockstatus[].[]",1845)
(1844,"user.setstatus[false].[]",1846)
(1845,"user.setstatus[false].[]",1848)
(1846,"time +=16",1847)
(1847,"door.spiedon[].[]",2046)
(1848,"time +=16",1849)
(1849,"door.spiedon[].[]",1998)
(1850,"controller.setkeyvalid[].[]",1851)
(1851,"time +=10",1852)
(1852,"user.keychecked[true].[]",1899)
(1852,"controller.tau=>setkeyvalid.[]",1900)
(1853,"door.getlockstatus[].[]",1854)
(1854,"user.setstatus[false].[]",1855)
(1855,"time +=14",1856)
(1856,"door.spiedon[].[]",2022)
(1857,"time +=3",1858)
(1858,"controller.checkkey[2].[]",1870)
(1859,"time +=8",1860)
(1860,"controller.checkkey[2].[]",1893)
(1861,"time +=10",1862)
(1862,"controller.checkkey[2].[]",1911)
(1863,"time +=3",1864)
(1864,"controller.checkkey[2].[]",1881)
(1865,"time +=8",1866)
(1866,"controller.checkkey[2].[]",1917)
(1867,"time +=10",1868)
(1868,"controller.checkkey[2].[]",1920)
(1869,"controller.setkeyvalid[].[]",1871)
(1870,"controller.setkeyvalid[].[]",1873)
(1871,"time +=10",1872)
(1872,"user.keychecked[true].[]",1947)
(1872,"controller.tau=>setkeyvalid.[]",1948)
(1872,"door.spiedon[].[]",1949)
(1873,"time +=10",1874)
(1874,"user.keychecked[true].[]",1973)
(1874,"controller.tau=>setkeyvalid.[]",1974)
(1874,"door.spiedon[].[]",1975)
(1875,"time +=3",1876)
(1876,"controller.checkkey[2].[]",1894)
(1877,"time +=8",1878)
(1878,"controller.checkkey[2].[]",2034)
(1878,"door.spiedon[].[]",2035)
(1879,"time +=8",1880)
(1880,"door.spiedon[].[]",1999)
(1881,"controller.setkeyvalid[].[]",1882)
(1882,"time +=8",1883)
(1883,"door.spiedon[].[]",1931)
(1884,"controller.setkeyvalid[].[]",1885)
(1885,"time +=8",1886)
(1886,"door.spiedon[].[]",2036)
(1887,"time +=3",1888)
(1888,"controller.checkkey[2].[]",1912)
(1889,"time +=6",1890)
(1890,"door.spiedon[].[]",1946)
(1891,"time +=6",1892)
(1892,"door.spiedon[].[]",2029)
(1893,"controller.setkeyvalid[].[]",1895)
(1894,"controller.setkeyvalid[].[]",1897)
(1895,"time +=5",1896)
(1896,"door.spiedon[].[]",2011)
(1897,"time +=5",1898)
(1898,"door.spiedon[].[]",1944)
(1899,"controller.tau=>setkeyvalid.[]",1901)
(1900,"user.keychecked[true].[]",1901)
(1900,"controller.setkeyinvalid[].[]",1902)
(1901,"controller.setkeyinvalid[].[]",1903)
(1902,"user.keychecked[true].[]",1903)
(1903,"time +=5",1904)
(1904,"door.spiedon[].[]",1945)
(1905,"time +=3",1906)
(1906,"controller.checkkey[2].[]",1971)
(1906,"door.spiedon[].[]",1972)
(1907,"time +=3",1908)
(1908,"door.spiedon[].[]",1930)
(1909,"time +=3",1910)
(1910,"door.spiedon[].[]",1929)
(1911,"controller.setkeyvalid[].[]",1913)
(1912,"controller.setkeyvalid[].[]",1915)
(1913,"time +=3",1914)
(1914,"door.spiedon[].[]",2016)
(1915,"time +=3",1916)
(1916,"door.spiedon[].[]",2004)
(1917,"controller.setkeyvalid[].[]",1918)
(1918,"time +=3",1919)
(1919,"door.spiedon[].[]",2023)
(1920,"controller.setkeyvalid[].[]",1927)
(1921,"time +=1",1922)
(1922,"door.spiedon[].[]",1933)
(1923,"time +=1",1924)
(1924,"door.spiedon[].[]",1932)
(1925,"time +=1",1926)
(1926,"door.spiedon[].[]",2028)
(1927,"time +=1",1928)
(1928,"door.spiedon[].[]",2005)
(1929,"intruder.spyingdoor[false].[]",1934)
(1930,"intruder.spyingdoor[false].[]",1936)
(1931,"intruder.spyingdoor[false].[]",1938)
(1932,"intruder.spyingdoor[false].[]",1940)
(1933,"intruder.spyingdoor[false].[]",1942)
(1934,"time +=7",1935)
(1935,"controller.checkkey[2].[]",2108)
(1936,"time +=5",1937)
(1937,"controller.checkkey[2].[]",2087)
(1938,"time +=2",1939)
(1939,"user.keychecked[true].[]",2052)
(1939,"controller.tau=>setkeyvalid.[]",2053)
(1940,"time +=7",1941)
(1941,"controller.checkkey[2].[]",2109)
(1942,"time +=2",1943)
(1943,"controller.checkkey[2].[]",2073)
(1944,"intruder.spyingdoor[false].[]",1950)
(1945,"intruder.spyingdoor[false].[]",1952)
(1946,"intruder.spyingdoor[false].[]",1957)
(1947,"controller.tau=>setkeyvalid.[]",1959)
(1947,"door.spiedon[].[]",1954)
(1948,"user.keychecked[true].[]",1959)
(1948,"controller.setkeyinvalid[].[]",1970)
(1948,"door.spiedon[].[]",1955)
(1949,"user.keychecked[true].[]",1954)
(1949,"controller.tau=>setkeyvalid.[]",1955)
(1949,"intruder.spyingdoor[false].[]",1956)
(1950,"time +=5",1951)
(1951,"user.keychecked[true].[]",2085)
(1951,"controller.tau=>setkeyvalid.[]",2086)
(1952,"time +=5",1953)
(1953,"controller.checkcode[3].[]",2097)
(1954,"controller.tau=>setkeyvalid.[]",1960)
(1954,"intruder.spyingdoor[false].[]",1961)
(1955,"user.keychecked[true].[]",1960)
(1955,"controller.setkeyinvalid[].[]",1963)
(1955,"intruder.spyingdoor[false].[]",1962)
(1956,"user.keychecked[true].[]",1961)
(1956,"controller.tau=>setkeyvalid.[]",1962)
(1957,"time +=2",1958)
(1958,"controller.checkkey[2].[]",2051)
(1959,"controller.setkeyinvalid[].[]",1964)
(1959,"door.spiedon[].[]",1960)
(1960,"controller.setkeyinvalid[].[]",1965)
(1960,"intruder.spyingdoor[false].[]",1966)
(1961,"controller.tau=>setkeyvalid.[]",1966)
(1962,"user.keychecked[true].[]",1966)
(1962,"controller.setkeyinvalid[].[]",1967)
(1963,"user.keychecked[true].[]",1965)
(1963,"intruder.spyingdoor[false].[]",1967)
(1964,"door.spiedon[].[]",1965)
(1965,"intruder.spyingdoor[false].[]",1968)
(1966,"controller.setkeyinvalid[].[]",1968)
(1967,"user.keychecked[true].[]",1968)
(1968,"time +=10",1969)
(1969,"controller.checkcode[3].[]",2146)
(1970,"user.keychecked[true].[]",1964)
(1970,"door.spiedon[].[]",1963)
(1971,"controller.setkeyvalid[].[]",1997)
(1971,"door.spiedon[].[]",1976)
(1972,"controller.checkkey[2].[]",1976)
(1972,"intruder.spyingdoor[false].[]",1977)
(1973,"controller.tau=>setkeyvalid.[]",1978)
(1973,"door.spiedon[].[]",1979)
(1974,"user.keychecked[true].[]",1978)
(1974,"controller.setkeyinvalid[].[]",1982)
(1974,"door.spiedon[].[]",1980)
(1975,"user.keychecked[true].[]",1979)
(1975,"controller.tau=>setkeyvalid.[]",1980)
(1975,"intruder.spyingdoor[false].[]",1981)
(1976,"controller.setkeyvalid[].[]",1996)
(1976,"intruder.spyingdoor[false].[]",1983)
(1977,"controller.checkkey[2].[]",1983)
(1978,"controller.setkeyinvalid[].[]",1984)
(1978,"door.spiedon[].[]",1985)
(1979,"controller.tau=>setkeyvalid.[]",1985)
(1979,"intruder.spyingdoor[false].[]",1986)
(1980,"user.keychecked[true].[]",1985)
(1980,"controller.setkeyinvalid[].[]",1987)
(1980,"intruder.spyingdoor[false].[]",1988)
(1981,"user.keychecked[true].[]",1986)
(1981,"controller.tau=>setkeyvalid.[]",1988)
(1982,"user.keychecked[true].[]",1984)
(1982,"door.spiedon[].[]",1987)
(1983,"controller.setkeyvalid[].[]",1989)
(1984,"door.spiedon[].[]",1991)
(1985,"controller.setkeyinvalid[].[]",1991)
(1985,"intruder.spyingdoor[false].[]",1992)
(1986,"controller.tau=>setkeyvalid.[]",1992)
(1987,"user.keychecked[true].[]",1991)
(1987,"intruder.spyingdoor[false].[]",1993)
(1988,"user.keychecked[true].[]",1992)
(1988,"controller.setkeyinvalid[].[]",1993)
(1989,"time +=10",1990)
(1990,"user.keychecked[true].[]",2157)
(1990,"controller.tau=>setkeyvalid.[]",2158)
(1991,"intruder.spyingdoor[false].[]",1994)
(1992,"controller.setkeyinvalid[].[]",1994)
(1993,"user.keychecked[true].[]",1994)
(1994,"time +=10",1995)
(1995,"controller.checkcode[3].[]",2144)
(1996,"intruder.spyingdoor[false].[]",1989)
(1997,"door.spiedon[].[]",1996)
(1998,"intruder.spyingdoor[false].[]",2000)
(1999,"intruder.spyingdoor[false].[]",2002)
(2000,"time +=4",2001)
(2001,"user.enterkey[].[_3]",2076)
(2001,"user.enterkey[].[_8]",2078)
(2001,"user.enterkey[].[]",2080)
(2002,"time +=2",2003)
(2003,"controller.checkkey[2].[]",2064)
(2004,"intruder.spyingdoor[false].[]",2006)
(2005,"intruder.spyingdoor[false].[]",2008)
(2006,"time +=7",2007)
(2007,"user.keychecked[true].[]",2117)
(2007,"controller.tau=>setkeyvalid.[]",2118)
(2008,"time +=9",2009)
(2009,"user.keychecked[true].[]",2135)
(2009,"controller.tau=>setkeyvalid.[]",2136)
(2010,"intruder.spyingdoor[false].[]",2012)
(2011,"intruder.spyingdoor[false].[]",2014)
(2012,"time +=2",2013)
(2013,"user.enterkey[].[_3]",2065)
(2013,"user.enterkey[].[]",2067)
(2013,"user.enterkey[].[_10]",2069)
(2014,"time +=5",2015)
(2015,"user.keychecked[true].[]",2098)
(2015,"controller.tau=>setkeyvalid.[]",2099)
(2016,"intruder.spyingdoor[false].[]",2018)
(2017,"intruder.spyingdoor[false].[]",2020)
(2018,"time +=7",2019)
(2019,"user.keychecked[true].[]",2119)
(2019,"controller.tau=>setkeyvalid.[]",2120)
(2020,"time +=1",2021)
(2021,"user.enterkey[].[_3]",5568)
(2021,"user.enterkey[].[_8]",5569)
(2021,"user.enterkey[].[]",5570)
(2022,"intruder.spyingdoor[false].[]",2024)
(2023,"intruder.spyingdoor[false].[]",2026)
(2024,"time +=6",2025)
(2025,"user.enterkey[].[_3]",5571)
(2025,"user.enterkey[].[_8]",5572)
(2025,"user.enterkey[].[]",5573)
(2026,"time +=7",2027)
(2027,"user.keychecked[true].[]",2129)
(2027,"controller.tau=>setkeyvalid.[]",2130)
(2028,"intruder.spyingdoor[false].[]",2030)
(2029,"intruder.spyingdoor[false].[]",2032)
(2030,"time +=9",2031)
(2031,"controller.checkkey[2].[]",2137)
(2032,"time +=4",2033)
(2033,"controller.checkkey[2].[]",2082)
(2034,"controller.setkeyvalid[].[]",2037)
(2034,"door.spiedon[].[]",2038)
(2035,"controller.checkkey[2].[]",2038)
(2035,"intruder.spyingdoor[false].[]",2039)
(2036,"intruder.spyingdoor[false].[]",2040)
(2037,"door.spiedon[].[]",2042)
(2038,"controller.setkeyvalid[].[]",2042)
(2038,"intruder.spyingdoor[false].[]",2043)
(2039,"controller.checkkey[2].[]",2043)
(2040,"time +=2",2041)
(2041,"user.keychecked[true].[]",2049)
(2041,"controller.tau=>setkeyvalid.[]",2050)
(2042,"intruder.spyingdoor[false].[]",2044)
(2043,"controller.setkeyvalid[].[]",2044)
(2044,"time +=10",2045)
(2045,"user.keychecked[true].[]",2159)
(2045,"controller.tau=>setkeyvalid.[]",2160)
(2046,"intruder.spyingdoor[false].[]",2047)
(2047,"time +=4",2048)
(2048,"user.enterkey[].[_3]",2076)
(2048,"user.enterkey[].[]",2078)
(2048,"user.enterkey[].[_10]",2080)
(2049,"controller.tau=>setkeyvalid.[]",2054)
(2050,"user.keychecked[true].[]",2054)
(2050,"controller.setkeyinvalid[].[]",2055)
(2051,"controller.setkeyvalid[].[]",2056)
(2052,"controller.tau=>setkeyvalid.[]",2058)
(2053,"user.keychecked[true].[]",2058)
(2053,"controller.setkeyinvalid[].[]",2059)
(2054,"controller.setkeyinvalid[].[]",2060)
(2055,"user.keychecked[true].[]",2060)
(2056,"time +=10",2057)
(2057,"user.keychecked[true].[]",2172)
(2057,"controller.tau=>setkeyvalid.[]",2173)
(2058,"controller.setkeyinvalid[].[]",2062)
(2059,"user.keychecked[true].[]",2062)
(2060,"time +=10",2061)
(2061,"controller.checkcode[3].[]",2189)
(2062,"time +=10",2063)
(2063,"controller.checkcode[3].[]",2185)
(2064,"controller.setkeyvalid[].[]",2071)
(2065,"time +=3",2066)
(2066,"controller.checkkey[2].[]",2088)
(2067,"time +=8",2068)
(2068,"controller.checkkey[2].[]",2145)
(2069,"time +=10",2070)
(2070,"controller.checkkey[2].[]",2184)
(2071,"time +=10",2072)
(2072,"user.keychecked[true].[]",2169)
(2072,"controller.tau=>setkeyvalid.[]",2170)
(2073,"controller.setkeyvalid[].[]",2074)
(2074,"time +=10",2075)
(2075,"user.keychecked[true].[]",2195)
(2075,"controller.tau=>setkeyvalid.[]",2196)
(2076,"time +=3",2077)
(2077,"controller.checkkey[2].[]",2110)
(2078,"time +=8",2079)
(2079,"controller.checkkey[2].[]",2171)
(2080,"time +=10",2081)
(2081,"controller.checkkey[2].[]",2205)
(2082,"controller.setkeyvalid[].[]",2083)
(2083,"time +=10",2084)
(2084,"user.keychecked[true].[]",2203)
(2084,"controller.tau=>setkeyvalid.[]",2204)
(2085,"controller.tau=>setkeyvalid.[]",2089)
(2086,"user.keychecked[true].[]",2089)
(2086,"controller.setkeyinvalid[].[]",2090)
(2087,"controller.setkeyvalid[].[]",2091)
(2088,"controller.setkeyvalid[].[]",2093)
(2089,"controller.setkeyinvalid[].[]",2095)
(2090,"user.keychecked[true].[]",2095)
(2091,"time +=10",2092)
(2092,"user.keychecked[true].[]",2212)
(2092,"controller.tau=>setkeyvalid.[]",2213)
(2093,"time +=10",2094)
(2094,"user.keychecked[true].[]",2223)
(2094,"controller.tau=>setkeyvalid.[]",2224)
(2095,"time +=10",2096)
(2096,"controller.checkcode[3].[]",2233)
(2097,"controller.lockeduser[].[]",2100)
(2098,"controller.tau=>setkeyvalid.[]",2101)
(2099,"user.keychecked[true].[]",2101)
(2099,"controller.setkeyinvalid[].[]",2102)
(2100,"controller.setarmed[].[]",2103)
(2101,"controller.setkeyinvalid[].[]",2104)
(2102,"user.keychecked[true].[]",2104)
(2103,"door.lockdoor[].[]",2106)
(2104,"time +=10",2105)
(2105,"controller.checkcode[3].[]",2222)
(2106,"time +=10",2107)
(2107,"user.codechecked[true].[]",2214)
(2108,"controller.setkeyvalid[].[]",2111)
(2109,"controller.setkeyvalid[].[]",2113)
(2110,"controller.setkeyvalid[].[]",2115)
(2111,"time +=10",2112)
(2112,"user.keychecked[true].[]",2238)
(2112,"controller.tau=>setkeyvalid.[]",2239)
(2113,"time +=10",2114)
(2114,"user.keychecked[true].[]",2257)
(2114,"controller.tau=>setkeyvalid.[]",2258)
(2115,"time +=10",2116)
(2116,"user.keychecked[true].[]",2265)
(2116,"controller.tau=>setkeyvalid.[]",2266)
(2117,"controller.tau=>setkeyvalid.[]",2121)
(2118,"user.keychecked[true].[]",2121)
(2118,"controller.setkeyinvalid[].[]",2122)
(2119,"controller.tau=>setkeyvalid.[]",2123)
(2120,"user.keychecked[true].[]",2123)
(2120,"controller.setkeyinvalid[].[]",2124)
(2121,"controller.setkeyinvalid[].[]",2125)
(2122,"user.keychecked[true].[]",2125)
(2123,"controller.setkeyinvalid[].[]",2127)
(2124,"user.keychecked[true].[]",2127)
(2125,"time +=10",2126)
(2126,"controller.checkcode[3].[]",2251)
(2127,"time +=10",2128)
(2128,"controller.checkcode[3].[]",2240)
(2129,"controller.tau=>setkeyvalid.[]",2131)
(2130,"user.keychecked[true].[]",2131)
(2130,"controller.setkeyinvalid[].[]",2132)
(2131,"controller.setkeyinvalid[].[]",2133)
(2132,"user.keychecked[true].[]",2133)
(2133,"time +=10",2134)
(2134,"controller.checkcode[3].[]",2247)
(2135,"controller.tau=>setkeyvalid.[]",2138)
(2136,"user.keychecked[true].[]",2138)
(2136,"controller.setkeyinvalid[].[]",2139)
(2137,"controller.setkeyvalid[].[]",2140)
(2138,"controller.setkeyinvalid[].[]",2142)
(2139,"user.keychecked[true].[]",2142)
(2140,"time +=10",2141)
(2141,"user.keychecked[true].[]",2272)
(2141,"controller.tau=>setkeyvalid.[]",2273)
(2142,"time +=10",2143)
(2143,"controller.checkcode[3].[]",2271)
(2144,"controller.lockeduser[].[]",2147)
(2145,"controller.setkeyvalid[].[]",2148)
(2146,"controller.lockeduser[].[]",2150)
(2147,"controller.setarmed[].[]",2151)
(2148,"time +=10",2149)
(2149,"user.keychecked[true].[]",2282)
(2149,"controller.tau=>setkeyvalid.[]",2283)
(2150,"controller.setarmed[].[]",2152)
(2151,"door.lockdoor[].[]",2153)
(2152,"door.lockdoor[].[]",2155)
(2153,"time +=10",2154)
(2154,"user.codechecked[true].[]",2299)
(2155,"time +=10",2156)
(2156,"user.codechecked[true].[]",2298)
(2157,"controller.tau=>setkeyvalid.[]",2161)
(2158,"user.keychecked[true].[]",2161)
(2158,"controller.setkeyinvalid[].[]",2162)
(2159,"controller.tau=>setkeyvalid.[]",2163)
(2160,"user.keychecked[true].[]",2163)
(2160,"controller.setkeyinvalid[].[]",2164)
(2161,"controller.setkeyinvalid[].[]",2165)
(2162,"user.keychecked[true].[]",2165)
(2163,"controller.setkeyinvalid[].[]",2167)
(2164,"user.keychecked[true].[]",2167)
(2165,"time +=10",2166)
(2166,"controller.checkcode[3].[]",2284)
(2167,"time +=10",2168)
(2168,"controller.checkcode[3].[]",2285)
(2169,"controller.tau=>setkeyvalid.[]",2174)
(2170,"user.keychecked[true].[]",2174)
(2170,"controller.setkeyinvalid[].[]",2175)
(2171,"controller.setkeyvalid[].[]",2176)
(2172,"controller.tau=>setkeyvalid.[]",2178)
(2173,"user.keychecked[true].[]",2178)
(2173,"controller.setkeyinvalid[].[]",2179)
(2174,"controller.setkeyinvalid[].[]",2180)
(2175,"user.keychecked[true].[]",2180)
(2176,"time +=10",2177)
(2177,"user.keychecked[true].[]",2325)
(2177,"controller.tau=>setkeyvalid.[]",2326)
(2178,"controller.setkeyinvalid[].[]",2182)
(2179,"user.keychecked[true].[]",2182)
(2180,"time +=10",2181)
(2181,"controller.checkcode[3].[]",2324)
(2182,"time +=10",2183)
(2183,"controller.checkcode[3].[]",2307)
(2184,"controller.setkeyvalid[].[]",2186)
(2185,"controller.lockeduser[].[]",2188)
(2186,"time +=10",2187)
(2187,"user.keychecked[true].[]",2335)
(2187,"controller.tau=>setkeyvalid.[]",2336)
(2188,"controller.setarmed[].[]",2190)
(2189,"controller.lockeduser[].[]",2191)
(2190,"door.lockdoor[].[]",2192)
(2191,"controller.setarmed[].[]",2194)
(2192,"time +=10",2193)
(2193,"user.codechecked[true].[]",2317)
(2194,"door.lockdoor[].[]",2197)
(2195,"controller.tau=>setkeyvalid.[]",2199)
(2196,"user.keychecked[true].[]",2199)
(2196,"controller.setkeyinvalid[].[]",2200)
(2197,"time +=10",2198)
(2198,"user.codechecked[true].[]",2316)
(2199,"controller.setkeyinvalid[].[]",2201)
(2200,"user.keychecked[true].[]",2201)
(2201,"time +=10",2202)
(2202,"controller.checkcode[3].[]",2306)
(2203,"controller.tau=>setkeyvalid.[]",2206)
(2204,"user.keychecked[true].[]",2206)
(2204,"controller.setkeyinvalid[].[]",2207)
(2205,"controller.setkeyvalid[].[]",2208)
(2206,"controller.setkeyinvalid[].[]",2210)
(2207,"user.keychecked[true].[]",2210)
(2208,"time +=10",2209)
(2209,"user.keychecked[true].[]",2341)
(2209,"controller.tau=>setkeyvalid.[]",2342)
(2210,"time +=10",2211)
(2211,"controller.checkcode[3].[]",2343)
(2212,"controller.tau=>setkeyvalid.[]",2215)
(2213,"user.keychecked[true].[]",2215)
(2213,"controller.setkeyinvalid[].[]",2216)
(2214,"door.getlockstatus[].[]",2217)
(2215,"controller.setkeyinvalid[].[]",2218)
(2216,"user.keychecked[true].[]",2218)
(2217,"user.setstatus[false].[]",2220)
(2218,"time +=10",2219)
(2219,"controller.checkcode[3].[]",2361)
(2220,"time +=15",2221)
(2221,"door.spiedon[].[]",2486)
(2222,"controller.lockeduser[].[]",2225)
(2223,"controller.tau=>setkeyvalid.[]",2226)
(2224,"user.keychecked[true].[]",2226)
(2224,"controller.setkeyinvalid[].[]",2227)
(2225,"controller.setarmed[].[]",2228)
(2226,"controller.setkeyinvalid[].[]",2229)
(2227,"user.keychecked[true].[]",2229)
(2228,"door.lockdoor[].[]",2231)
(2229,"time +=10",2230)
(2230,"controller.checkcode[3].[]",2360)
(2231,"time +=10",2232)
(2232,"user.codechecked[true].[]",2352)
(2233,"controller.lockeduser[].[]",2234)
(2234,"controller.setarmed[].[]",2235)
(2235,"door.lockdoor[].[]",2236)
(2236,"time +=10",2237)
(2237,"user.codechecked[true].[]",2353)
(2238,"controller.tau=>setkeyvalid.[]",2241)
(2239,"user.keychecked[true].[]",2241)
(2239,"controller.setkeyinvalid[].[]",2242)
(2240,"controller.lockeduser[].[]",2243)
(2241,"controller.setkeyinvalid[].[]",2244)
(2242,"user.keychecked[true].[]",2244)
(2243,"controller.setarmed[].[]",2246)
(2244,"time +=10",2245)
(2245,"controller.checkcode[3].[]",2389)
(2246,"door.lockdoor[].[]",2248)
(2247,"controller.lockeduser[].[]",2250)
(2248,"time +=10",2249)
(2249,"user.codechecked[true].[]",2388)
(2250,"controller.setarmed[].[]",2252)
(2251,"controller.lockeduser[].[]",2253)
(2252,"door.lockdoor[].[]",2254)
(2253,"controller.setarmed[].[]",2256)
(2254,"time +=10",2255)
(2255,"user.codechecked[true].[]",2380)
(2256,"door.lockdoor[].[]",2259)
(2257,"controller.tau=>setkeyvalid.[]",2261)
(2258,"user.keychecked[true].[]",2261)
(2258,"controller.setkeyinvalid[].[]",2262)
(2259,"time +=10",2260)
(2260,"user.codechecked[true].[]",2371)
(2261,"controller.setkeyinvalid[].[]",2263)
(2262,"user.keychecked[true].[]",2263)
(2263,"time +=10",2264)
(2264,"controller.checkcode[3].[]",2379)
(2265,"controller.tau=>setkeyvalid.[]",2267)
(2266,"user.keychecked[true].[]",2267)
(2266,"controller.setkeyinvalid[].[]",2268)
(2267,"controller.setkeyinvalid[].[]",2269)
(2268,"user.keychecked[true].[]",2269)
(2269,"time +=10",2270)
(2270,"controller.checkcode[3].[]",2370)
(2271,"controller.lockeduser[].[]",2274)
(2272,"controller.tau=>setkeyvalid.[]",2275)
(2273,"user.keychecked[true].[]",2275)
(2273,"controller.setkeyinvalid[].[]",2276)
(2274,"controller.setarmed[].[]",2277)
(2275,"controller.setkeyinvalid[].[]",2278)
(2276,"user.keychecked[true].[]",2278)
(2277,"door.lockdoor[].[]",2280)
(2278,"time +=10",2279)
(2279,"controller.checkcode[3].[]",2398)
(2280,"time +=10",2281)
(2281,"user.codechecked[true].[]",2397)
(2282,"controller.tau=>setkeyvalid.[]",2286)
(2283,"user.keychecked[true].[]",2286)
(2283,"controller.setkeyinvalid[].[]",2287)
(2284,"controller.lockeduser[].[]",2288)
(2285,"controller.lockeduser[].[]",2289)
(2286,"controller.setkeyinvalid[].[]",2290)
(2287,"user.keychecked[true].[]",2290)
(2288,"controller.setarmed[].[]",2292)
(2289,"controller.setarmed[].[]",2293)
(2290,"time +=10",2291)
(2291,"controller.checkcode[3].[]",2421)
(2291,"door.spiedon[].[]",2422)
(2292,"door.lockdoor[].[]",2294)
(2293,"door.lockdoor[].[]",2296)
(2294,"time +=10",2295)
(2295,"user.codechecked[true].[]",2464)
(2295,"door.spiedon[].[]",2465)
(2296,"time +=10",2297)
(2297,"user.codechecked[true].[]",2484)
(2297,"door.spiedon[].[]",2485)
(2298,"door.getlockstatus[].[]",2300)
(2299,"door.getlockstatus[].[]",2301)
(2300,"user.setstatus[false].[]",2302)
(2301,"user.setstatus[false].[]",2304)
(2302,"time +=10",2303)
(2303,"door.spiedon[].[]",2444)
(2304,"time +=10",2305)
(2305,"door.spiedon[].[]",2423)
(2306,"controller.lockeduser[].[]",2308)
(2307,"controller.lockeduser[].[]",2309)
(2308,"controller.setarmed[].[]",2310)
(2309,"controller.setarmed[].[]",2311)
(2310,"door.lockdoor[].[]",2312)
(2311,"door.lockdoor[].[]",2314)
(2312,"time +=8",2313)
(2313,"door.spiedon[].[]",2478)
(2314,"time +=8",2315)
(2315,"door.spiedon[].[]",2452)
(2316,"door.getlockstatus[].[]",2318)
(2317,"door.getlockstatus[].[]",2319)
(2318,"user.setstatus[false].[]",2320)
(2319,"user.setstatus[false].[]",2322)
(2320,"time +=8",2321)
(2321,"door.spiedon[].[]",2505)
(2322,"time +=8",2323)
(2323,"door.spiedon[].[]",2506)
(2324,"controller.lockeduser[].[]",2327)
(2325,"controller.tau=>setkeyvalid.[]",2328)
(2326,"user.keychecked[true].[]",2328)
(2326,"controller.setkeyinvalid[].[]",2329)
(2327,"controller.setarmed[].[]",2330)
(2328,"controller.setkeyinvalid[].[]",2331)
(2329,"user.keychecked[true].[]",2331)
(2330,"door.lockdoor[].[]",2333)
(2331,"time +=8",2332)
(2332,"door.spiedon[].[]",2479)
(2333,"time +=8",2334)
(2334,"door.spiedon[].[]",2451)
(2335,"controller.tau=>setkeyvalid.[]",2337)
(2336,"user.keychecked[true].[]",2337)
(2336,"controller.setkeyinvalid[].[]",2338)
(2337,"controller.setkeyinvalid[].[]",2339)
(2338,"user.keychecked[true].[]",2339)
(2339,"time +=8",2340)
(2340,"door.spiedon[].[]",2406)
(2341,"controller.tau=>setkeyvalid.[]",2344)
(2342,"user.keychecked[true].[]",2344)
(2342,"controller.setkeyinvalid[].[]",2345)
(2343,"controller.lockeduser[].[]",2346)
(2344,"controller.setkeyinvalid[].[]",2347)
(2345,"user.keychecked[true].[]",2347)
(2346,"controller.setarmed[].[]",2349)
(2347,"time +=6",2348)
(2348,"door.spiedon[].[]",2407)
(2349,"door.lockdoor[].[]",2350)
(2350,"time +=6",2351)
(2351,"door.spiedon[].[]",2457)
(2352,"door.getlockstatus[].[]",2354)
(2353,"door.getlockstatus[].[]",2355)
(2354,"user.setstatus[false].[]",2356)
(2355,"user.setstatus[false].[]",2358)
(2356,"time +=5",2357)
(2357,"door.spiedon[].[]",2499)
(2358,"time +=5",2359)
(2359,"door.spiedon[].[]",2458)
(2360,"controller.lockeduser[].[]",2362)
(2361,"controller.lockeduser[].[]",2363)
(2362,"controller.setarmed[].[]",2364)
(2363,"controller.setarmed[].[]",2365)
(2364,"door.lockdoor[].[]",2366)
(2365,"door.lockdoor[].[]",2368)
(2366,"time +=5",2367)
(2367,"door.spiedon[].[]",2433)
(2368,"time +=5",2369)
(2369,"door.spiedon[].[]",2445)
(2370,"controller.lockeduser[].[]",2372)
(2371,"door.getlockstatus[].[]",2373)
(2372,"controller.setarmed[].[]",2374)
(2373,"user.setstatus[false].[]",2375)
(2374,"door.lockdoor[].[]",2377)
(2375,"time +=3",2376)
(2376,"door.spiedon[].[]",2512)
(2377,"time +=3",2378)
(2378,"door.spiedon[].[]",2511)
(2379,"controller.lockeduser[].[]",2381)
(2380,"door.getlockstatus[].[]",2382)
(2381,"controller.setarmed[].[]",2383)
(2382,"user.setstatus[false].[]",2384)
(2383,"door.lockdoor[].[]",2386)
(2384,"time +=3",2385)
(2385,"door.spiedon[].[]",2500)
(2386,"time +=3",2387)
(2387,"door.spiedon[].[]",2463)
(2388,"door.getlockstatus[].[]",2390)
(2389,"controller.lockeduser[].[]",2391)
(2390,"user.setstatus[false].[]",2392)
(2391,"controller.setarmed[].[]",2394)
(2392,"time +=3",2393)
(2393,"door.spiedon[].[]",2424)
(2394,"door.lockdoor[].[]",2395)
(2395,"time +=3",2396)
(2396,"door.spiedon[].[]",2409)
(2397,"door.getlockstatus[].[]",2399)
(2398,"controller.lockeduser[].[]",2400)
(2399,"user.setstatus[false].[]",2401)
(2400,"controller.setarmed[].[]",2403)
(2401,"time +=1",2402)
(2402,"door.spiedon[].[]",2408)
(2403,"door.lockdoor[].[]",2404)
(2404,"time +=1",2405)
(2405,"door.spiedon[].[]",2410)
(2406,"intruder.spyingdoor[false].[]",2411)
(2407,"intruder.spyingdoor[false].[]",2413)
(2408,"intruder.spyingdoor[false].[]",2415)
(2409,"intruder.spyingdoor[false].[]",2417)
(2410,"intruder.spyingdoor[false].[]",2419)
(2411,"time +=2",2412)
(2412,"controller.checkcode[3].[]",2517)
(2413,"time +=4",2414)
(2414,"controller.checkcode[3].[]",2539)
(2415,"time +=19",2416)
(2416,"user.enterkey[].[_3]",5580)
(2416,"user.enterkey[].[_8]",5581)
(2416,"user.enterkey[].[]",5582)
(2417,"time +=7",2418)
(2418,"user.codechecked[true].[]",2563)
(2419,"time +=9",2420)
(2420,"user.codechecked[true].[]",2577)
(2421,"controller.lockeduser[].[]",2440)
(2421,"door.spiedon[].[]",2425)
(2422,"controller.checkcode[3].[]",2425)
(2422,"intruder.spyingdoor[false].[]",2426)
(2423,"intruder.spyingdoor[false].[]",2427)
(2424,"intruder.spyingdoor[false].[]",2429)
(2425,"controller.lockeduser[].[]",2431)
(2425,"intruder.spyingdoor[false].[]",2432)
(2426,"controller.checkcode[3].[]",2432)
(2427,"time +=10",2428)
(2428,"user.enterkey[].[]",5574)
(2428,"user.enterkey[].[_8]",5575)
(2428,"user.enterkey[].[_10]",5576)
(2429,"time +=17",2430)
(2430,"user.enterkey[].[_3]",2618)
(2430,"user.enterkey[].[_8]",2620)
(2430,"user.enterkey[].[]",2622)
(2431,"controller.setarmed[].[]",2434)
(2431,"intruder.spyingdoor[false].[]",2435)
(2432,"controller.lockeduser[].[]",2435)
(2433,"intruder.spyingdoor[false].[]",2436)
(2434,"intruder.spyingdoor[false].[]",2438)
(2434,"door.lockdoor[].[]",2439)
(2435,"controller.setarmed[].[]",2438)
(2436,"time +=5",2437)
(2437,"user.codechecked[true].[]",2554)
(2438,"door.lockdoor[].[]",2441)
(2439,"intruder.spyingdoor[false].[]",2441)
(2440,"controller.setarmed[].[]",2443)
(2440,"door.spiedon[].[]",2431)
(2441,"time +=10",2442)
(2442,"user.codechecked[true].[]",2581)
(2443,"door.lockdoor[].[]",2446)
(2443,"door.spiedon[].[]",2434)
(2444,"intruder.spyingdoor[false].[]",2447)
(2445,"intruder.spyingdoor[false].[]",2449)
(2446,"door.spiedon[].[]",2439)
(2447,"time +=10",2448)
(2448,"user.enterkey[].[_3]",5577)
(2448,"user.enterkey[].[]",5578)
(2448,"user.enterkey[].[_10]",5579)
(2449,"time +=5",2450)
(2450,"user.codechecked[true].[]",2555)
(2451,"intruder.spyingdoor[false].[]",2453)
(2452,"intruder.spyingdoor[false].[]",2455)
(2453,"time +=2",2454)
(2454,"user.codechecked[true].[]",2518)
(2455,"time +=2",2456)
(2456,"user.codechecked[true].[]",2519)
(2457,"intruder.spyingdoor[false].[]",2459)
(2458,"intruder.spyingdoor[false].[]",2461)
(2459,"time +=4",2460)
(2460,"user.codechecked[true].[]",2540)
(2461,"time +=15",2462)
(2462,"user.enterkey[].[]",2612)
(2462,"user.enterkey[].[_8]",2614)
(2462,"user.enterkey[].[_10]",2616)
(2463,"intruder.spyingdoor[false].[]",2466)
(2464,"door.getlockstatus[].[]",2468)
(2464,"door.spiedon[].[]",2469)
(2465,"user.codechecked[true].[]",2469)
(2465,"intruder.spyingdoor[false].[]",2470)
(2466,"time +=7",2467)
(2467,"user.codechecked[true].[]",2570)
(2468,"user.setstatus[false].[]",2471)
(2468,"door.spiedon[].[]",2472)
(2469,"intruder.spyingdoor[false].[]",2473)
(2469,"door.getlockstatus[].[]",2472)
(2470,"user.codechecked[true].[]",2473)
(2471,"door.spiedon[].[]",2474)
(2472,"user.setstatus[false].[]",2474)
(2472,"intruder.spyingdoor[false].[]",2475)
(2473,"door.getlockstatus[].[]",2475)
(2474,"intruder.spyingdoor[false].[]",2476)
(2475,"user.setstatus[false].[]",2476)
(2476,"time +=20",2477)
(2477,"user.enterkey[].[]",2639)
(2477,"user.enterkey[].[_8]",2641)
(2477,"user.enterkey[].[_10]",2643)
(2478,"intruder.spyingdoor[false].[]",2480)
(2479,"intruder.spyingdoor[false].[]",2482)
(2480,"time +=2",2481)
(2481,"user.codechecked[true].[]",2530)
(2482,"time +=2",2483)
(2483,"controller.checkcode[3].[]",2531)
(2484,"door.getlockstatus[].[]",2487)
(2484,"door.spiedon[].[]",2488)
(2485,"user.codechecked[true].[]",2488)
(2485,"intruder.spyingdoor[false].[]",2489)
(2486,"intruder.spyingdoor[false].[]",2490)
(2487,"user.setstatus[false].[]",2492)
(2487,"door.spiedon[].[]",2493)
(2488,"intruder.spyingdoor[false].[]",2494)
(2488,"door.getlockstatus[].[]",2493)
(2489,"user.codechecked[true].[]",2494)
(2490,"time +=5",2491)
(2491,"user.enterkey[].[]",2548)
(2491,"user.enterkey[].[_8]",2550)
(2491,"user.enterkey[].[_10]",2552)
(2492,"door.spiedon[].[]",2495)
(2493,"user.setstatus[false].[]",2495)
(2493,"intruder.spyingdoor[false].[]",2496)
(2494,"door.getlockstatus[].[]",2496)
(2495,"intruder.spyingdoor[false].[]",2497)
(2496,"user.setstatus[false].[]",2497)
(2497,"time +=20",2498)
(2498,"user.enterkey[].[_3]",2639)
(2498,"user.enterkey[].[]",2641)
(2498,"user.enterkey[].[_10]",2643)
(2499,"intruder.spyingdoor[false].[]",2501)
(2500,"intruder.spyingdoor[false].[]",2503)
(2501,"time +=15",2502)
(2502,"user.enterkey[].[_3]",2612)
(2502,"user.enterkey[].[]",2614)
(2502,"user.enterkey[].[_10]",2616)
(2503,"time +=17",2504)
(2504,"user.enterkey[].[_3]",2618)
(2504,"user.enterkey[].[]",2620)
(2504,"user.enterkey[].[_10]",2622)
(2505,"intruder.spyingdoor[false].[]",2507)
(2506,"intruder.spyingdoor[false].[]",2509)
(2507,"time +=12",2508)
(2508,"user.enterkey[].[_3]",2593)
(2508,"user.enterkey[].[_8]",2595)
(2508,"user.enterkey[].[]",2597)
(2509,"time +=12",2510)
(2510,"user.enterkey[].[]",2593)
(2510,"user.enterkey[].[_8]",2595)
(2510,"user.enterkey[].[_10]",2597)
(2511,"intruder.spyingdoor[false].[]",2513)
(2512,"intruder.spyingdoor[false].[]",2515)
(2513,"time +=7",2514)
(2514,"user.codechecked[true].[]",2562)
(2515,"time +=17",2516)
(2516,"user.enterkey[].[]",2618)
(2516,"user.enterkey[].[_8]",2620)
(2516,"user.enterkey[].[_10]",2622)
(2517,"controller.lockeduser[].[]",2520)
(2518,"door.getlockstatus[].[]",2521)
(2519,"door.getlockstatus[].[]",2522)
(2520,"controller.setarmed[].[]",2523)
(2521,"user.setstatus[false].[]",2524)
(2522,"user.setstatus[false].[]",2526)
(2523,"door.lockdoor[].[]",2528)
(2524,"time +=20",2525)
(2525,"user.enterkey[].[_3]",2645)
(2525,"user.enterkey[].[_8]",2647)
(2525,"user.enterkey[].[]",2649)
(2526,"time +=20",2527)
(2527,"user.enterkey[].[_3]",2645)
(2527,"user.enterkey[].[]",2647)
(2527,"user.enterkey[].[_10]",2649)
(2528,"time +=10",2529)
(2529,"user.codechecked[true].[]",2585)
(2530,"door.getlockstatus[].[]",2532)
(2531,"controller.lockeduser[].[]",2533)
(2532,"user.setstatus[false].[]",2534)
(2533,"controller.setarmed[].[]",2536)
(2534,"time +=20",2535)
(2535,"user.enterkey[].[]",2645)
(2535,"user.enterkey[].[_8]",2647)
(2535,"user.enterkey[].[_10]",2649)
(2536,"door.lockdoor[].[]",2537)
(2537,"time +=10",2538)
(2538,"user.codechecked[true].[]",2586)
(2539,"controller.lockeduser[].[]",2541)
(2540,"door.getlockstatus[].[]",2542)
(2541,"controller.setarmed[].[]",2543)
(2542,"user.setstatus[false].[]",2544)
(2543,"door.lockdoor[].[]",2546)
(2544,"time +=20",2545)
(2545,"user.enterkey[].[_3]",5583)
(2545,"user.enterkey[].[_8]",5584)
(2545,"user.enterkey[].[]",5585)
(2546,"time +=10",2547)
(2547,"user.codechecked[true].[]",2602)
(2548,"time +=3",2549)
(2549,"controller.checkkey[2].[]",2574)
(2550,"time +=8",2551)
(2551,"controller.checkkey[2].[]",2599)
(2552,"time +=10",2553)
(2553,"controller.checkkey[2].[]",2606)
(2554,"door.getlockstatus[].[]",2556)
(2555,"door.getlockstatus[].[]",2557)
(2556,"user.setstatus[false].[]",2558)
(2557,"user.setstatus[false].[]",2560)
(2558,"time +=20",2559)
(2559,"user.enterkey[].[]",2672)
(2559,"user.enterkey[].[_8]",2674)
(2559,"user.enterkey[].[_10]",2676)
(2560,"time +=20",2561)
(2561,"user.enterkey[].[_3]",2672)
(2561,"user.enterkey[].[]",2674)
(2561,"user.enterkey[].[_10]",2676)
(2562,"door.getlockstatus[].[]",2564)
(2563,"door.getlockstatus[].[]",2565)
(2564,"user.setstatus[false].[]",2566)
(2565,"user.setstatus[false].[]",2568)
(2566,"time +=20",2567)
(2567,"user.enterkey[].[]",2693)
(2567,"user.enterkey[].[_8]",2695)
(2567,"user.enterkey[].[_10]",2697)
(2568,"time +=20",2569)
(2569,"user.enterkey[].[_3]",2693)
(2569,"user.enterkey[].[_8]",2695)
(2569,"user.enterkey[].[]",2697)
(2570,"door.getlockstatus[].[]",2571)
(2571,"user.setstatus[false].[]",2572)
(2572,"time +=20",2573)
(2573,"user.enterkey[].[_3]",2693)
(2573,"user.enterkey[].[]",2695)
(2573,"user.enterkey[].[_10]",2697)
(2574,"controller.setkeyvalid[].[]",2575)
(2575,"time +=10",2576)
(2576,"user.keychecked[true].[]",2624)
(2576,"controller.tau=>setkeyvalid.[]",2625)
(2577,"door.getlockstatus[].[]",2578)
(2578,"user.setstatus[false].[]",2579)
(2579,"time +=20",2580)
(2580,"user.enterkey[].[_3]",5586)
(2580,"user.enterkey[].[_8]",5587)
(2580,"user.enterkey[].[]",5588)
(2581,"door.getlockstatus[].[]",2582)
(2582,"user.setstatus[false].[]",2583)
(2583,"time +=20",2584)
(2584,"user.enterkey[].[_3]",2824)
(2584,"user.enterkey[].[]",2825)
(2584,"user.enterkey[].[_10]",2826)
(2584,"door.spiedon[].[]",2827)
(2585,"door.getlockstatus[].[]",2587)
(2586,"door.getlockstatus[].[]",2588)
(2587,"user.setstatus[false].[]",2589)
(2588,"user.setstatus[false].[]",2591)
(2589,"time +=18",2590)
(2590,"door.spiedon[].[]",2828)
(2591,"time +=18",2592)
(2592,"door.spiedon[].[]",2780)
(2593,"time +=3",2594)
(2594,"controller.checkkey[2].[]",2607)
(2595,"time +=8",2596)
(2596,"controller.checkkey[2].[]",2633)
(2597,"time +=10",2598)
(2598,"controller.checkkey[2].[]",2651)
(2599,"controller.setkeyvalid[].[]",2600)
(2600,"time +=10",2601)
(2601,"user.keychecked[true].[]",2655)
(2601,"controller.tau=>setkeyvalid.[]",2656)
(2602,"door.getlockstatus[].[]",2603)
(2603,"user.setstatus[false].[]",2604)
(2604,"time +=16",2605)
(2605,"door.spiedon[].[]",2736)
(2606,"controller.setkeyvalid[].[]",2608)
(2607,"controller.setkeyvalid[].[]",2610)
(2608,"time +=10",2609)
(2609,"user.keychecked[true].[]",2684)
(2609,"controller.tau=>setkeyvalid.[]",2685)
(2610,"time +=10",2611)
(2611,"user.keychecked[true].[]",2678)
(2611,"controller.tau=>setkeyvalid.[]",2679)
(2612,"time +=3",2613)
(2613,"controller.checkkey[2].[]",2626)
(2614,"time +=8",2615)
(2615,"controller.checkkey[2].[]",2663)
(2616,"time +=10",2617)
(2617,"controller.checkkey[2].[]",2686)
(2618,"time +=3",2619)
(2619,"controller.checkkey[2].[]",2634)
(2620,"time +=8",2621)
(2621,"controller.checkkey[2].[]",2666)
(2622,"time +=10",2623)
(2623,"controller.checkkey[2].[]",2699)
(2624,"controller.tau=>setkeyvalid.[]",2627)
(2625,"user.keychecked[true].[]",2627)
(2625,"controller.setkeyinvalid[].[]",2628)
(2626,"controller.setkeyvalid[].[]",2629)
(2627,"controller.setkeyinvalid[].[]",2631)
(2628,"user.keychecked[true].[]",2631)
(2629,"time +=10",2630)
(2630,"user.keychecked[true].[]",2702)
(2630,"controller.tau=>setkeyvalid.[]",2703)
(2631,"time +=10",2632)
(2632,"controller.checkcode[3].[]",2714)
(2633,"controller.setkeyvalid[].[]",2635)
(2634,"controller.setkeyvalid[].[]",2637)
(2635,"time +=10",2636)
(2636,"user.keychecked[true].[]",2842)
(2636,"controller.tau=>setkeyvalid.[]",2843)
(2636,"door.spiedon[].[]",2844)
(2637,"time +=10",2638)
(2638,"user.keychecked[true].[]",2792)
(2638,"controller.tau=>setkeyvalid.[]",2793)
(2638,"door.spiedon[].[]",2794)
(2639,"time +=3",2640)
(2640,"controller.checkkey[2].[]",2654)
(2641,"time +=8",2642)
(2642,"controller.checkkey[2].[]",2705)
(2643,"time +=10",2644)
(2644,"controller.checkkey[2].[]",2751)
(2644,"door.spiedon[].[]",2752)
(2645,"time +=3",2646)
(2646,"controller.checkkey[2].[]",2667)
(2647,"time +=8",2648)
(2648,"controller.checkkey[2].[]",2812)
(2648,"door.spiedon[].[]",2813)
(2649,"time +=8",2650)
(2650,"door.spiedon[].[]",2750)
(2651,"controller.setkeyvalid[].[]",2652)
(2652,"time +=8",2653)
(2653,"door.spiedon[].[]",2767)
(2654,"controller.setkeyvalid[].[]",2657)
(2655,"controller.tau=>setkeyvalid.[]",2659)
(2656,"user.keychecked[true].[]",2659)
(2656,"controller.setkeyinvalid[].[]",2660)
(2657,"time +=7",2658)
(2658,"door.spiedon[].[]",2719)
(2659,"controller.setkeyinvalid[].[]",2661)
(2660,"user.keychecked[true].[]",2661)
(2661,"time +=7",2662)
(2662,"door.spiedon[].[]",2791)
(2663,"controller.setkeyvalid[].[]",2664)
(2664,"time +=7",2665)
(2665,"door.spiedon[].[]",2721)
(2666,"controller.setkeyvalid[].[]",2668)
(2667,"controller.setkeyvalid[].[]",2670)
(2668,"time +=5",2669)
(2669,"door.spiedon[].[]",2785)
(2670,"time +=5",2671)
(2671,"door.spiedon[].[]",2768)
(2672,"time +=3",2673)
(2673,"controller.checkkey[2].[]",2704)
(2674,"time +=5",2675)
(2675,"door.spiedon[].[]",2786)
(2676,"time +=5",2677)
(2677,"door.spiedon[].[]",2841)
(2678,"controller.tau=>setkeyvalid.[]",2680)
(2679,"user.keychecked[true].[]",2680)
(2679,"controller.setkeyinvalid[].[]",2681)
(2680,"controller.setkeyinvalid[].[]",2682)
(2681,"user.keychecked[true].[]",2682)
(2682,"time +=5",2683)
(2683,"door.spiedon[].[]",2814)
(2684,"controller.tau=>setkeyvalid.[]",2687)
(2685,"user.keychecked[true].[]",2687)
(2685,"controller.setkeyinvalid[].[]",2688)
(2686,"controller.setkeyvalid[].[]",2689)
(2687,"controller.setkeyinvalid[].[]",2691)
(2688,"user.keychecked[true].[]",2691)
(2689,"time +=5",2690)
(2690,"door.spiedon[].[]",2723)
(2691,"time +=5",2692)
(2692,"door.spiedon[].[]",2760)
(2693,"time +=3",2694)
(2694,"controller.checkkey[2].[]",2734)
(2694,"door.spiedon[].[]",2735)
(2695,"time +=3",2696)
(2696,"door.spiedon[].[]",2774)
(2697,"time +=3",2698)
(2698,"door.spiedon[].[]",2773)
(2699,"controller.setkeyvalid[].[]",2700)
(2700,"time +=3",2701)
(2701,"door.spiedon[].[]",2737)
(2702,"controller.tau=>setkeyvalid.[]",2706)
(2703,"user.keychecked[true].[]",2706)
(2703,"controller.setkeyinvalid[].[]",2707)
(2704,"controller.setkeyvalid[].[]",2708)
(2705,"controller.setkeyvalid[].[]",2710)
(2706,"controller.setkeyinvalid[].[]",2712)
(2707,"user.keychecked[true].[]",2712)
(2708,"time +=2",2709)
(2709,"door.spiedon[].[]",2720)
(2710,"time +=2",2711)
(2711,"door.spiedon[].[]",2749)
(2712,"time +=2",2713)
(2713,"door.spiedon[].[]",2779)
(2714,"controller.lockeduser[].[]",2715)
(2715,"controller.setunarmed[].[]",2716)
(2716,"door.unlockdoor[].[]",2717)
(2717,"time +=2",2718)
(2718,"door.spiedon[].[]",2722)
(2719,"intruder.spyingdoor[false].[]",2724)
(2720,"intruder.spyingdoor[false].[]",2726)
(2721,"intruder.spyingdoor[false].[]",2728)
(2722,"intruder.spyingdoor[false].[]",2730)
(2723,"intruder.spyingdoor[false].[]",2732)
(2724,"time +=3",2725)
(2725,"user.keychecked[true].[]",2886)
(2725,"controller.tau=>setkeyvalid.[]",2887)
(2726,"time +=8",2727)
(2727,"user.keychecked[true].[]",2950)
(2727,"controller.tau=>setkeyvalid.[]",2951)
(2728,"time +=3",2729)
(2729,"user.keychecked[true].[]",2880)
(2729,"controller.tau=>setkeyvalid.[]",2881)
(2730,"time +=3",2731)
(2731,"controller.setdoorstatus[true, false].[]",2878)
(2732,"time +=5",2733)
(2733,"user.keychecked[true].[]",2910)
(2733,"controller.tau=>setkeyvalid.[]",2911)
(2734,"controller.setkeyvalid[].[]",2738)
(2734,"door.spiedon[].[]",2739)
(2735,"controller.checkkey[2].[]",2739)
(2735,"intruder.spyingdoor[false].[]",2740)
(2736,"intruder.spyingdoor[false].[]",2741)
(2737,"intruder.spyingdoor[false].[]",2743)
(2738,"door.spiedon[].[]",2745)
(2739,"controller.setkeyvalid[].[]",2745)
(2739,"intruder.spyingdoor[false].[]",2746)
(2740,"controller.checkkey[2].[]",2746)
(2741,"time +=4",2742)
(2742,"user.enterkey[].[_3]",5589)
(2742,"user.enterkey[].[_8]",5590)
(2742,"user.enterkey[].[]",5591)
(2743,"time +=7",2744)
(2744,"user.keychecked[true].[]",2939)
(2744,"controller.tau=>setkeyvalid.[]",2940)
(2745,"intruder.spyingdoor[false].[]",2747)
(2746,"controller.setkeyvalid[].[]",2747)
(2747,"time +=10",2748)
(2748,"user.keychecked[true].[]",2979)
(2748,"controller.tau=>setkeyvalid.[]",2980)
(2749,"intruder.spyingdoor[false].[]",2753)
(2750,"intruder.spyingdoor[false].[]",2755)
(2751,"controller.setkeyvalid[].[]",2757)
(2751,"door.spiedon[].[]",2758)
(2752,"controller.checkkey[2].[]",2758)
(2752,"intruder.spyingdoor[false].[]",2759)
(2753,"time +=8",2754)
(2754,"user.keychecked[true].[]",2961)
(2754,"controller.tau=>setkeyvalid.[]",2962)
(2755,"time +=2",2756)
(2756,"controller.checkkey[2].[]",2868)
(2757,"door.spiedon[].[]",2761)
(2758,"controller.setkeyvalid[].[]",2761)
(2758,"intruder.spyingdoor[false].[]",2762)
(2759,"controller.checkkey[2].[]",2762)
(2760,"intruder.spyingdoor[false].[]",2763)
(2761,"intruder.spyingdoor[false].[]",2765)
(2762,"controller.setkeyvalid[].[]",2765)
(2763,"time +=5",2764)
(2764,"controller.checkcode[3].[]",2913)
(2765,"time +=10",2766)
(2766,"user.keychecked[true].[]",2990)
(2766,"controller.tau=>setkeyvalid.[]",2991)
(2767,"intruder.spyingdoor[false].[]",2769)
(2768,"intruder.spyingdoor[false].[]",2771)
(2769,"time +=2",2770)
(2770,"user.keychecked[true].[]",2869)
(2770,"controller.tau=>setkeyvalid.[]",2870)
(2771,"time +=5",2772)
(2772,"user.keychecked[true].[]",2922)
(2772,"controller.tau=>setkeyvalid.[]",2923)
(2773,"intruder.spyingdoor[false].[]",2775)
(2774,"intruder.spyingdoor[false].[]",2777)
(2775,"time +=7",2776)
(2776,"controller.checkkey[2].[]",2941)
(2777,"time +=5",2778)
(2778,"controller.checkkey[2].[]",2930)
(2779,"intruder.spyingdoor[false].[]",2781)
(2780,"intruder.spyingdoor[false].[]",2783)
(2781,"time +=8",2782)
(2782,"controller.checkcode[3].[]",2963)
(2783,"time +=2",2784)
(2784,"user.enterkey[].[_3]",2862)
(2784,"user.enterkey[].[]",2864)
(2784,"user.enterkey[].[_10]",2866)
(2785,"intruder.spyingdoor[false].[]",2787)
(2786,"intruder.spyingdoor[false].[]",2789)
(2787,"time +=5",2788)
(2788,"user.keychecked[true].[]",2931)
(2788,"controller.tau=>setkeyvalid.[]",2932)
(2789,"time +=3",2790)
(2790,"controller.checkkey[2].[]",2885)
(2791,"intruder.spyingdoor[false].[]",2795)
(2792,"controller.tau=>setkeyvalid.[]",2797)
(2792,"door.spiedon[].[]",2798)
(2793,"user.keychecked[true].[]",2797)
(2793,"controller.setkeyinvalid[].[]",2799)
(2793,"door.spiedon[].[]",2800)
(2794,"user.keychecked[true].[]",2798)
(2794,"controller.tau=>setkeyvalid.[]",2800)
(2794,"intruder.spyingdoor[false].[]",2801)
(2795,"time +=3",2796)
(2796,"controller.checkcode[3].[]",2877)
(2797,"controller.setkeyinvalid[].[]",2802)
(2797,"door.spiedon[].[]",2803)
(2798,"controller.tau=>setkeyvalid.[]",2803)
(2798,"intruder.spyingdoor[false].[]",2804)
(2799,"user.keychecked[true].[]",2802)
(2799,"door.spiedon[].[]",2805)
(2800,"user.keychecked[true].[]",2803)
(2800,"controller.setkeyinvalid[].[]",2805)
(2800,"intruder.spyingdoor[false].[]",2806)
(2801,"user.keychecked[true].[]",2804)
(2801,"controller.tau=>setkeyvalid.[]",2806)
(2802,"door.spiedon[].[]",2807)
(2803,"controller.setkeyinvalid[].[]",2807)
(2803,"intruder.spyingdoor[false].[]",2808)
(2804,"controller.tau=>setkeyvalid.[]",2808)
(2805,"user.keychecked[true].[]",2807)
(2805,"intruder.spyingdoor[false].[]",2809)
(2806,"user.keychecked[true].[]",2808)
(2806,"controller.setkeyinvalid[].[]",2809)
(2807,"intruder.spyingdoor[false].[]",2810)
(2808,"controller.setkeyinvalid[].[]",2810)
(2809,"user.keychecked[true].[]",2810)
(2810,"time +=10",2811)
(2811,"controller.checkcode[3].[]",2998)
(2812,"controller.setkeyvalid[].[]",2815)
(2812,"door.spiedon[].[]",2816)
(2813,"controller.checkkey[2].[]",2816)
(2813,"intruder.spyingdoor[false].[]",2817)
(2814,"intruder.spyingdoor[false].[]",2818)
(2815,"door.spiedon[].[]",2820)
(2816,"controller.setkeyvalid[].[]",2820)
(2816,"intruder.spyingdoor[false].[]",2821)
(2817,"controller.checkkey[2].[]",2821)
(2818,"time +=5",2819)
(2819,"controller.checkcode[3].[]",2903)
(2820,"intruder.spyingdoor[false].[]",2822)
(2821,"controller.setkeyvalid[].[]",2822)
(2822,"time +=10",2823)
(2823,"user.keychecked[true].[]",2976)
(2823,"controller.tau=>setkeyvalid.[]",2977)
(2824,"door.spiedon[].[]",2829)
(2825,"door.spiedon[].[]",2830)
(2826,"door.spiedon[].[]",2831)
(2827,"user.enterkey[].[_3]",2829)
(2827,"user.enterkey[].[]",2830)
(2827,"user.enterkey[].[_10]",2831)
(2827,"intruder.spyingdoor[false].[]",2832)
(2828,"intruder.spyingdoor[false].[]",2833)
(2829,"intruder.spyingdoor[false].[]",2835)
(2830,"intruder.spyingdoor[false].[]",2837)
(2831,"intruder.spyingdoor[false].[]",2839)
(2832,"user.enterkey[].[_3]",2835)
(2832,"user.enterkey[].[]",2837)
(2832,"user.enterkey[].[_10]",2839)
(2833,"time +=2",2834)
(2834,"user.enterkey[].[_3]",2862)
(2834,"user.enterkey[].[_8]",2864)
(2834,"user.enterkey[].[]",2866)
(2835,"time +=3",2836)
(2836,"controller.checkkey[2].[]",2884)
(2837,"time +=8",2838)
(2838,"controller.checkkey[2].[]",2949)
(2839,"time +=10",2840)
(2840,"controller.checkkey[2].[]",2997)
(2841,"intruder.spyingdoor[false].[]",2845)
(2842,"controller.tau=>setkeyvalid.[]",2847)
(2842,"door.spiedon[].[]",2848)
(2843,"user.keychecked[true].[]",2847)
(2843,"controller.setkeyinvalid[].[]",2849)
(2843,"door.spiedon[].[]",2850)
(2844,"user.keychecked[true].[]",2848)
(2844,"controller.tau=>setkeyvalid.[]",2850)
(2844,"intruder.spyingdoor[false].[]",2851)
(2845,"time +=5",2846)
(2846,"controller.checkkey[2].[]",2904)
(2847,"controller.setkeyinvalid[].[]",2852)
(2847,"door.spiedon[].[]",2853)
(2848,"controller.tau=>setkeyvalid.[]",2853)
(2848,"intruder.spyingdoor[false].[]",2854)
(2849,"user.keychecked[true].[]",2852)
(2849,"door.spiedon[].[]",2855)
(2850,"user.keychecked[true].[]",2853)
(2850,"controller.setkeyinvalid[].[]",2855)
(2850,"intruder.spyingdoor[false].[]",2856)
(2851,"user.keychecked[true].[]",2854)
(2851,"controller.tau=>setkeyvalid.[]",2856)
(2852,"door.spiedon[].[]",2857)
(2853,"controller.setkeyinvalid[].[]",2857)
(2853,"intruder.spyingdoor[false].[]",2858)
(2854,"controller.tau=>setkeyvalid.[]",2858)
(2855,"user.keychecked[true].[]",2857)
(2855,"intruder.spyingdoor[false].[]",2859)
(2856,"user.keychecked[true].[]",2858)
(2856,"controller.setkeyinvalid[].[]",2859)
(2857,"intruder.spyingdoor[false].[]",2860)
(2858,"controller.setkeyinvalid[].[]",2860)
(2859,"user.keychecked[true].[]",2860)
(2860,"time +=10",2861)
(2861,"controller.checkcode[3].[]",2996)
(2862,"time +=3",2863)
(2863,"controller.checkkey[2].[]",2902)
(2864,"time +=8",2865)
(2865,"controller.checkkey[2].[]",2978)
(2866,"time +=10",2867)
(2867,"controller.checkkey[2].[]",3021)
(2868,"controller.setkeyvalid[].[]",2871)
(2869,"controller.tau=>setkeyvalid.[]",2873)
(2870,"user.keychecked[true].[]",2873)
(2870,"controller.setkeyinvalid[].[]",2874)
(2871,"time +=10",2872)
(2872,"user.keychecked[true].[]",3012)
(2872,"controller.tau=>setkeyvalid.[]",3013)
(2873,"controller.setkeyinvalid[].[]",2875)
(2874,"user.keychecked[true].[]",2875)
(2875,"time +=10",2876)
(2876,"controller.checkcode[3].[]",3014)
(2877,"controller.lockeduser[].[]",2882)
(2878,"time +=5",2879)
(2879,"user.codechecked[true].[]",2948)
(2880,"controller.tau=>setkeyvalid.[]",2883)
(2881,"user.keychecked[true].[]",2883)
(2881,"controller.setkeyinvalid[].[]",2888)
(2882,"controller.setunarmed[].[]",2889)
(2883,"controller.setkeyinvalid[].[]",2890)
(2884,"controller.setkeyvalid[].[]",2892)
(2885,"controller.setkeyvalid[].[]",2894)
(2886,"controller.tau=>setkeyvalid.[]",2896)
(2887,"user.keychecked[true].[]",2896)
(2887,"controller.setkeyinvalid[].[]",2897)
(2888,"user.keychecked[true].[]",2890)
(2889,"door.unlockdoor[].[]",2898)
(2890,"time +=10",2891)
(2891,"controller.checkcode[3].[]",3043)
(2892,"time +=10",2893)
(2893,"user.keychecked[true].[]",3034)
(2893,"controller.tau=>setkeyvalid.[]",3035)
(2894,"time +=10",2895)
(2895,"user.keychecked[true].[]",3044)
(2895,"controller.tau=>setkeyvalid.[]",3045)
(2896,"controller.setkeyinvalid[].[]",2900)
(2897,"user.keychecked[true].[]",2900)
(2898,"time +=5",2899)
(2899,"controller.setdoorstatus[true, false].[]",2970)
(2900,"time +=10",2901)
(2901,"controller.checkcode[3].[]",3030)
(2902,"controller.setkeyvalid[].[]",2905)
(2903,"controller.lockeduser[].[]",2907)
(2904,"controller.setkeyvalid[].[]",2908)
(2905,"time +=10",2906)
(2906,"user.keychecked[true].[]",3058)
(2906,"controller.tau=>setkeyvalid.[]",3059)
(2907,"controller.setunarmed[].[]",2912)
(2908,"time +=10",2909)
(2909,"user.keychecked[true].[]",3073)
(2909,"controller.tau=>setkeyvalid.[]",3074)
(2910,"controller.tau=>setkeyvalid.[]",2914)
(2911,"user.keychecked[true].[]",2914)
(2911,"controller.setkeyinvalid[].[]",2915)
(2912,"door.unlockdoor[].[]",2916)
(2913,"controller.lockeduser[].[]",2918)
(2914,"controller.setkeyinvalid[].[]",2919)
(2915,"user.keychecked[true].[]",2919)
(2916,"time +=5",2917)
(2917,"controller.setdoorstatus[true, false].[]",2974)
(2918,"controller.setunarmed[].[]",2921)
(2919,"time +=10",2920)
(2920,"controller.checkcode[3].[]",3072)
(2921,"door.unlockdoor[].[]",2924)
(2922,"controller.tau=>setkeyvalid.[]",2926)
(2923,"user.keychecked[true].[]",2926)
(2923,"controller.setkeyinvalid[].[]",2927)
(2924,"time +=5",2925)
(2925,"controller.setdoorstatus[true, false].[]",2992)
(2926,"controller.setkeyinvalid[].[]",2928)
(2927,"user.keychecked[true].[]",2928)
(2928,"time +=10",2929)
(2929,"controller.checkcode[3].[]",3056)
(2930,"controller.setkeyvalid[].[]",2933)
(2931,"controller.tau=>setkeyvalid.[]",2935)
(2932,"user.keychecked[true].[]",2935)
(2932,"controller.setkeyinvalid[].[]",2936)
(2933,"time +=10",2934)
(2934,"user.keychecked[true].[]",3087)
(2934,"controller.tau=>setkeyvalid.[]",3088)
(2935,"controller.setkeyinvalid[].[]",2937)
(2936,"user.keychecked[true].[]",2937)
(2937,"time +=10",2938)
(2938,"controller.checkcode[3].[]",3057)
(2939,"controller.tau=>setkeyvalid.[]",2942)
(2940,"user.keychecked[true].[]",2942)
(2940,"controller.setkeyinvalid[].[]",2943)
(2941,"controller.setkeyvalid[].[]",2944)
(2942,"controller.setkeyinvalid[].[]",2946)
(2943,"user.keychecked[true].[]",2946)
(2944,"time +=10",2945)
(2945,"user.keychecked[true].[]",3099)
(2945,"controller.tau=>setkeyvalid.[]",3100)
(2946,"time +=10",2947)
(2947,"controller.checkcode[3].[]",3101)
(2948,"door.getlockstatus[].[]",2952)
(2949,"controller.setkeyvalid[].[]",2953)
(2950,"controller.tau=>setkeyvalid.[]",2955)
(2951,"user.keychecked[true].[]",2955)
(2951,"controller.setkeyinvalid[].[]",2956)
(2952,"user.setstatus[false].[]",2957)
(2953,"time +=10",2954)
(2954,"user.keychecked[true].[]",3130)
(2954,"controller.tau=>setkeyvalid.[]",3131)
(2955,"controller.setkeyinvalid[].[]",2959)
(2956,"user.keychecked[true].[]",2959)
(2957,"time +=20",2958)
(2958,"user.enterkey[].[]",3262)
(2958,"user.enterkey[].[_8]",3264)
(2958,"user.enterkey[].[_10]",3266)
(2959,"time +=10",2960)
(2960,"controller.checkcode[3].[]",3116)
(2961,"controller.tau=>setkeyvalid.[]",2964)
(2962,"user.keychecked[true].[]",2964)
(2962,"controller.setkeyinvalid[].[]",2965)
(2963,"controller.lockeduser[].[]",2966)
(2964,"controller.setkeyinvalid[].[]",2967)
(2965,"user.keychecked[true].[]",2967)
(2966,"controller.setunarmed[].[]",2969)
(2967,"time +=10",2968)
(2968,"controller.checkcode[3].[]",3120)
(2969,"door.unlockdoor[].[]",2972)
(2970,"time +=5",2971)
(2971,"user.codechecked[true].[]",3026)
(2972,"time +=5",2973)
(2973,"controller.setdoorstatus[true, false].[]",3027)
(2974,"time +=5",2975)
(2975,"user.codechecked[true].[]",3075)
(2976,"controller.tau=>setkeyvalid.[]",2981)
(2977,"user.keychecked[true].[]",2981)
(2977,"controller.setkeyinvalid[].[]",2982)
(2978,"controller.setkeyvalid[].[]",2983)
(2979,"controller.tau=>setkeyvalid.[]",2985)
(2980,"user.keychecked[true].[]",2985)
(2980,"controller.setkeyinvalid[].[]",2999)
(2981,"controller.setkeyinvalid[].[]",2986)
(2982,"user.keychecked[true].[]",2986)
(2983,"time +=10",2984)
(2984,"user.keychecked[true].[]",3144)
(2984,"controller.tau=>setkeyvalid.[]",3145)
(2985,"controller.setkeyinvalid[].[]",2988)
(2986,"time +=10",2987)
(2987,"controller.checkcode[3].[]",3156)
(2988,"time +=10",2989)
(2989,"controller.checkcode[3].[]",3157)
(2990,"controller.tau=>setkeyvalid.[]",2994)
(2991,"user.keychecked[true].[]",2994)
(2991,"controller.setkeyinvalid[].[]",2995)
(2992,"time +=5",2993)
(2993,"user.codechecked[true].[]",3095)
(2994,"controller.setkeyinvalid[].[]",3000)
(2995,"user.keychecked[true].[]",3000)
(2996,"controller.lockeduser[].[]",3002)
(2997,"controller.setkeyvalid[].[]",3003)
(2998,"controller.lockeduser[].[]",3006)
(2999,"user.keychecked[true].[]",2988)
(3000,"time +=10",3001)
(3001,"controller.checkcode[3].[]",3168)
(3002,"controller.setunarmed[].[]",3005)
(3003,"time +=10",3004)
(3004,"user.keychecked[true].[]",3166)
(3004,"controller.tau=>setkeyvalid.[]",3167)
(3005,"door.unlockdoor[].[]",3007)
(3006,"controller.setunarmed[].[]",3009)
(3007,"time +=5",3008)
(3008,"controller.setdoorstatus[true, false].[]",3089)
(3009,"door.unlockdoor[].[]",3010)
(3010,"time +=5",3011)
(3011,"controller.setdoorstatus[true, false].[]",3054)
(3012,"controller.tau=>setkeyvalid.[]",3015)
(3013,"user.keychecked[true].[]",3015)
(3013,"controller.setkeyinvalid[].[]",3016)
(3014,"controller.lockeduser[].[]",3017)
(3015,"controller.setkeyinvalid[].[]",3018)
(3016,"user.keychecked[true].[]",3018)
(3017,"controller.setunarmed[].[]",3020)
(3018,"time +=10",3019)
(3019,"controller.checkcode[3].[]",3181)
(3020,"door.unlockdoor[].[]",3022)
(3021,"controller.setkeyvalid[].[]",3024)
(3022,"time +=5",3023)
(3023,"controller.setdoorstatus[true, false].[]",3102)
(3024,"time +=10",3025)
(3025,"user.keychecked[true].[]",3185)
(3025,"controller.tau=>setkeyvalid.[]",3186)
(3026,"door.getlockstatus[].[]",3029)
(3027,"time +=5",3028)
(3028,"user.codechecked[true].[]",3112)
(3029,"user.setstatus[false].[]",3031)
(3030,"controller.lockeduser[].[]",3033)
(3031,"time +=17",3032)
(3032,"door.spiedon[].[]",3389)
(3033,"controller.setunarmed[].[]",3036)
(3034,"controller.tau=>setkeyvalid.[]",3037)
(3035,"user.keychecked[true].[]",3037)
(3035,"controller.setkeyinvalid[].[]",3038)
(3036,"door.unlockdoor[].[]",3039)
(3037,"controller.setkeyinvalid[].[]",3041)
(3038,"user.keychecked[true].[]",3041)
(3039,"time +=5",3040)
(3040,"controller.setdoorstatus[true, false].[]",3126)
(3041,"time +=10",3042)
(3042,"controller.checkcode[3].[]",3209)
(3043,"controller.lockeduser[].[]",3046)
(3044,"controller.tau=>setkeyvalid.[]",3047)
(3045,"user.keychecked[true].[]",3047)
(3045,"controller.setkeyinvalid[].[]",3048)
(3046,"controller.setunarmed[].[]",3049)
(3047,"controller.setkeyinvalid[].[]",3050)
(3048,"user.keychecked[true].[]",3050)
(3049,"door.unlockdoor[].[]",3052)
(3050,"time +=10",3051)
(3051,"controller.checkcode[3].[]",3194)
(3052,"time +=5",3053)
(3053,"controller.setdoorstatus[true, false].[]",3113)
(3054,"time +=5",3055)
(3055,"user.codechecked[true].[]",3138)
(3056,"controller.lockeduser[].[]",3060)
(3057,"controller.lockeduser[].[]",3061)
(3058,"controller.tau=>setkeyvalid.[]",3062)
(3059,"user.keychecked[true].[]",3062)
(3059,"controller.setkeyinvalid[].[]",3063)
(3060,"controller.setunarmed[].[]",3064)
(3061,"controller.setunarmed[].[]",3065)
(3062,"controller.setkeyinvalid[].[]",3066)
(3063,"user.keychecked[true].[]",3066)
(3064,"door.unlockdoor[].[]",3068)
(3065,"door.unlockdoor[].[]",3070)
(3066,"time +=10",3067)
(3067,"controller.checkcode[3].[]",3228)
(3068,"time +=5",3069)
(3069,"controller.setdoorstatus[true, false].[]",3152)
(3070,"time +=5",3071)
(3071,"controller.setdoorstatus[true, false].[]",3140)
(3072,"controller.lockeduser[].[]",3076)
(3073,"controller.tau=>setkeyvalid.[]",3077)
(3074,"user.keychecked[true].[]",3077)
(3074,"controller.setkeyinvalid[].[]",3078)
(3075,"door.getlockstatus[].[]",3079)
(3076,"controller.setunarmed[].[]",3080)
(3077,"controller.setkeyinvalid[].[]",3081)
(3078,"user.keychecked[true].[]",3081)
(3079,"user.setstatus[false].[]",3083)
(3080,"door.unlockdoor[].[]",3085)
(3081,"time +=10",3082)
(3082,"controller.checkcode[3].[]",3244)
(3083,"time +=15",3084)
(3084,"door.spiedon[].[]",3354)
(3085,"time +=5",3086)
(3086,"controller.setdoorstatus[true, false].[]",3136)
(3087,"controller.tau=>setkeyvalid.[]",3091)
(3088,"user.keychecked[true].[]",3091)
(3088,"controller.setkeyinvalid[].[]",3092)
(3089,"time +=5",3090)
(3090,"user.codechecked[true].[]",3139)
(3091,"controller.setkeyinvalid[].[]",3093)
(3092,"user.keychecked[true].[]",3093)
(3093,"time +=10",3094)
(3094,"controller.checkcode[3].[]",3232)
(3095,"door.getlockstatus[].[]",3096)
(3096,"user.setstatus[false].[]",3097)
(3097,"time +=15",3098)
(3098,"door.spiedon[].[]",3320)
(3099,"controller.tau=>setkeyvalid.[]",3104)
(3100,"user.keychecked[true].[]",3104)
(3100,"controller.setkeyinvalid[].[]",3105)
(3101,"controller.lockeduser[].[]",3106)
(3102,"time +=5",3103)
(3103,"user.codechecked[true].[]",3177)
(3104,"controller.setkeyinvalid[].[]",3107)
(3105,"user.keychecked[true].[]",3107)
(3106,"controller.setunarmed[].[]",3109)
(3107,"time +=10",3108)
(3108,"controller.checkcode[3].[]",3251)
(3109,"door.unlockdoor[].[]",3110)
(3110,"time +=5",3111)
(3111,"controller.setdoorstatus[true, false].[]",3178)
(3112,"door.getlockstatus[].[]",3115)
(3113,"time +=5",3114)
(3114,"user.codechecked[true].[]",3198)
(3115,"user.setstatus[false].[]",3117)
(3116,"controller.lockeduser[].[]",3119)
(3117,"time +=12",3118)
(3118,"door.spiedon[].[]",3350)
(3119,"controller.setunarmed[].[]",3121)
(3120,"controller.lockeduser[].[]",3122)
(3121,"door.unlockdoor[].[]",3123)
(3122,"controller.setunarmed[].[]",3125)
(3123,"time +=5",3124)
(3124,"controller.setdoorstatus[true, false].[]",3206)
(3125,"door.unlockdoor[].[]",3128)
(3126,"time +=5",3127)
(3127,"user.codechecked[true].[]",3205)
(3128,"time +=5",3129)
(3129,"controller.setdoorstatus[true, false].[]",3195)
(3130,"controller.tau=>setkeyvalid.[]",3132)
(3131,"user.keychecked[true].[]",3132)
(3131,"controller.setkeyinvalid[].[]",3133)
(3132,"controller.setkeyinvalid[].[]",3134)
(3133,"user.keychecked[true].[]",3134)
(3134,"time +=10",3135)
(3135,"controller.checkcode[3].[]",3268)
(3136,"time +=5",3137)
(3137,"user.codechecked[true].[]",3219)
(3138,"door.getlockstatus[].[]",3142)
(3139,"door.getlockstatus[].[]",3143)
(3140,"time +=5",3141)
(3141,"user.codechecked[true].[]",3221)
(3142,"user.setstatus[false].[]",3146)
(3143,"user.setstatus[false].[]",3148)
(3144,"controller.tau=>setkeyvalid.[]",3150)
(3145,"user.keychecked[true].[]",3150)
(3145,"controller.setkeyinvalid[].[]",3151)
(3146,"time +=10",3147)
(3147,"door.spiedon[].[]",3418)
(3148,"time +=10",3149)
(3149,"door.spiedon[].[]",3326)
(3150,"controller.setkeyinvalid[].[]",3154)
(3151,"user.keychecked[true].[]",3154)
(3152,"time +=5",3153)
(3153,"user.codechecked[true].[]",3216)
(3154,"time +=10",3155)
(3155,"controller.checkcode[3].[]",3368)
(3155,"door.spiedon[].[]",3369)
(3156,"controller.lockeduser[].[]",3158)
(3157,"controller.lockeduser[].[]",3159)
(3158,"controller.setunarmed[].[]",3160)
(3159,"controller.setunarmed[].[]",3161)
(3160,"door.unlockdoor[].[]",3162)
(3161,"door.unlockdoor[].[]",3164)
(3162,"time +=5",3163)
(3163,"controller.setdoorstatus[true, false].[]",3242)
(3164,"time +=5",3165)
(3165,"controller.setdoorstatus[true, false].[]",3238)
(3166,"controller.tau=>setkeyvalid.[]",3169)
(3167,"user.keychecked[true].[]",3169)
(3167,"controller.setkeyinvalid[].[]",3170)
(3168,"controller.lockeduser[].[]",3171)
(3169,"controller.setkeyinvalid[].[]",3172)
(3170,"user.keychecked[true].[]",3172)
(3171,"controller.setunarmed[].[]",3174)
(3172,"time +=10",3173)
(3173,"controller.checkcode[3].[]",3307)
(3173,"door.spiedon[].[]",3308)
(3174,"door.unlockdoor[].[]",3175)
(3175,"time +=5",3176)
(3176,"controller.setdoorstatus[true, false].[]",3217)
(3177,"door.getlockstatus[].[]",3180)
(3178,"time +=5",3179)
(3179,"user.codechecked[true].[]",3252)
(3180,"user.setstatus[false].[]",3182)
(3181,"controller.lockeduser[].[]",3184)
(3182,"time +=8",3183)
(3183,"door.spiedon[].[]",3371)
(3184,"controller.setunarmed[].[]",3187)
(3185,"controller.tau=>setkeyvalid.[]",3188)
(3186,"user.keychecked[true].[]",3188)
(3186,"controller.setkeyinvalid[].[]",3189)
(3187,"door.unlockdoor[].[]",3190)
(3188,"controller.setkeyinvalid[].[]",3192)
(3189,"user.keychecked[true].[]",3192)
(3190,"time +=5",3191)
(3191,"controller.setdoorstatus[true, false].[]",3249)
(3192,"time +=8",3193)
(3193,"door.spiedon[].[]",3336)
(3194,"controller.lockeduser[].[]",3197)
(3195,"time +=5",3196)
(3196,"user.codechecked[true].[]",3269)
(3197,"controller.setunarmed[].[]",3199)
(3198,"door.getlockstatus[].[]",3200)
(3199,"door.unlockdoor[].[]",3201)
(3200,"user.setstatus[false].[]",3203)
(3201,"time +=5",3202)
(3202,"controller.setdoorstatus[true, false].[]",3271)
(3203,"time +=7",3204)
(3204,"door.spiedon[].[]",3412)
(3205,"door.getlockstatus[].[]",3208)
(3206,"time +=5",3207)
(3207,"user.codechecked[true].[]",3270)
(3208,"user.setstatus[false].[]",3210)
(3209,"controller.lockeduser[].[]",3212)
(3210,"time +=7",3211)
(3211,"door.spiedon[].[]",3339)
(3212,"controller.setunarmed[].[]",3213)
(3213,"door.unlockdoor[].[]",3214)
(3214,"time +=5",3215)
(3215,"controller.setdoorstatus[true, false].[]",3260)
(3216,"door.getlockstatus[].[]",3220)
(3217,"time +=5",3218)
(3218,"user.codechecked[true].[]",3337)
(3218,"door.spiedon[].[]",3338)
(3219,"door.getlockstatus[].[]",3222)
(3220,"user.setstatus[false].[]",3223)
(3221,"door.getlockstatus[].[]",3225)
(3222,"user.setstatus[false].[]",3226)
(3223,"time +=5",3224)
(3224,"door.spiedon[].[]",3321)
(3225,"user.setstatus[false].[]",3229)
(3226,"time +=5",3227)
(3227,"door.spiedon[].[]",3304)
(3228,"controller.lockeduser[].[]",3231)
(3229,"time +=5",3230)
(3230,"door.spiedon[].[]",3351)
(3231,"controller.setunarmed[].[]",3233)
(3232,"controller.lockeduser[].[]",3234)
(3233,"door.unlockdoor[].[]",3235)
(3234,"controller.setunarmed[].[]",3237)
(3235,"time +=5",3236)
(3236,"controller.setdoorstatus[true, false].[]",3390)
(3236,"door.spiedon[].[]",3391)
(3237,"door.unlockdoor[].[]",3240)
(3238,"time +=5",3239)
(3239,"user.codechecked[true].[]",3392)
(3239,"door.spiedon[].[]",3393)
(3240,"time +=5",3241)
(3241,"controller.setdoorstatus[true, false].[]",3419)
(3241,"door.spiedon[].[]",3420)
(3242,"time +=5",3243)
(3243,"user.codechecked[true].[]",3283)
(3243,"door.spiedon[].[]",3284)
(3244,"controller.lockeduser[].[]",3245)
(3245,"controller.setunarmed[].[]",3246)
(3246,"door.unlockdoor[].[]",3247)
(3247,"time +=5",3248)
(3248,"controller.setdoorstatus[true, false].[]",3305)
(3248,"door.spiedon[].[]",3306)
(3249,"time +=3",3250)
(3250,"door.spiedon[].[]",3370)
(3251,"controller.lockeduser[].[]",3253)
(3252,"door.getlockstatus[].[]",3254)
(3253,"controller.setunarmed[].[]",3255)
(3254,"user.setstatus[false].[]",3256)
(3255,"door.unlockdoor[].[]",3258)
(3256,"time +=3",3257)
(3257,"door.spiedon[].[]",3285)
(3258,"time +=3",3259)
(3259,"door.spiedon[].[]",3322)
(3260,"time +=2",3261)
(3261,"door.spiedon[].[]",3286)
(3262,"time +=2",3263)
(3263,"door.spiedon[].[]",3303)
(3264,"time +=2",3265)
(3265,"door.spiedon[].[]",3287)
(3266,"time +=2",3267)
(3267,"door.spiedon[].[]",3352)
(3268,"controller.lockeduser[].[]",3273)
(3269,"door.getlockstatus[].[]",3274)
(3270,"door.getlockstatus[].[]",3275)
(3271,"time +=2",3272)
(3272,"door.spiedon[].[]",3432)
(3273,"controller.setunarmed[].[]",3276)
(3274,"user.setstatus[false].[]",3277)
(3275,"user.setstatus[false].[]",3279)
(3276,"door.unlockdoor[].[]",3281)
(3277,"time +=2",3278)
(3278,"door.spiedon[].[]",3353)
(3279,"time +=2",3280)
(3280,"door.spiedon[].[]",3288)
(3281,"time +=2",3282)
(3282,"door.spiedon[].[]",3289)
(3283,"door.getlockstatus[].[]",3434)
(3283,"door.spiedon[].[]",3290)
(3284,"user.codechecked[true].[]",3290)
(3284,"intruder.spyingdoor[false].[]",3291)
(3285,"intruder.spyingdoor[false].[]",3292)
(3286,"intruder.spyingdoor[false].[]",3294)
(3287,"intruder.spyingdoor[false].[]",3296)
(3288,"intruder.spyingdoor[false].[]",3298)
(3289,"intruder.spyingdoor[false].[]",3300)
(3290,"intruder.spyingdoor[false].[]",3302)
(3290,"door.getlockstatus[].[]",3433)
(3291,"user.codechecked[true].[]",3302)
(3292,"time +=17",3293)
(3293,"user.enterkey[].[_3]",5607)
(3293,"user.enterkey[].[_8]",5608)
(3293,"user.enterkey[].[]",5609)
(3294,"time +=3",3295)
(3295,"user.codechecked[true].[]",3453)
(3296,"time +=6",3297)
(3297,"controller.checkkey[2].[]",3485)
(3298,"time +=18",3299)
(3299,"user.enterkey[].[]",3560)
(3299,"user.enterkey[].[_8]",3562)
(3299,"user.enterkey[].[_10]",3564)
(3300,"time +=3",3301)
(3301,"controller.setdoorstatus[true, false].[]",3454)
(3302,"door.getlockstatus[].[]",3309)
(3303,"intruder.spyingdoor[false].[]",3310)
(3304,"intruder.spyingdoor[false].[]",3312)
(3305,"door.spiedon[].[]",3314)
(3306,"controller.setdoorstatus[true, false].[]",3314)
(3306,"intruder.spyingdoor[false].[]",3315)
(3307,"controller.lockeduser[].[]",3422)
(3307,"door.spiedon[].[]",3316)
(3308,"controller.checkcode[3].[]",3316)
(3308,"intruder.spyingdoor[false].[]",3317)
(3309,"user.setstatus[false].[]",3318)
(3310,"time +=1",3311)
(3311,"controller.checkkey[2].[]",3439)
(3312,"time +=15",3313)
(3313,"user.enterkey[].[_3]",3531)
(3313,"user.enterkey[].[_8]",3533)
(3313,"user.enterkey[].[]",3535)
(3314,"intruder.spyingdoor[false].[]",3323)
(3315,"controller.setdoorstatus[true, false].[]",3323)
(3316,"controller.lockeduser[].[]",3417)
(3316,"intruder.spyingdoor[false].[]",3325)
(3317,"controller.checkcode[3].[]",3325)
(3318,"time +=20",3319)
(3319,"user.enterkey[].[_3]",3570)
(3319,"user.enterkey[].[]",3572)
(3319,"user.enterkey[].[_10]",3574)
(3320,"intruder.spyingdoor[false].[]",3327)
(3321,"intruder.spyingdoor[false].[]",3329)
(3322,"intruder.spyingdoor[false].[]",3331)
(3323,"time +=5",3324)
(3324,"user.codechecked[true].[]",3463)
(3325,"controller.lockeduser[].[]",3333)
(3326,"intruder.spyingdoor[false].[]",3334)
(3327,"time +=5",3328)
(3328,"user.enterkey[].[_3]",3464)
(3328,"user.enterkey[].[_8]",3466)
(3328,"user.enterkey[].[]",3468)
(3329,"time +=15",3330)
(3330,"user.enterkey[].[]",3531)
(3330,"user.enterkey[].[_8]",3533)
(3330,"user.enterkey[].[_10]",3535)
(3331,"time +=2",3332)
(3332,"controller.setdoorstatus[true, false].[]",3443)
(3333,"controller.setunarmed[].[]",3340)
(3334,"time +=10",3335)
(3335,"user.enterkey[].[_3]",5601)
(3335,"user.enterkey[].[]",5602)
(3335,"user.enterkey[].[_10]",5603)
(3336,"intruder.spyingdoor[false].[]",3341)
(3337,"door.getlockstatus[].[]",3411)
(3337,"door.spiedon[].[]",3343)
(3338,"user.codechecked[true].[]",3343)
(3338,"intruder.spyingdoor[false].[]",3344)
(3339,"intruder.spyingdoor[false].[]",3345)
(3340,"door.unlockdoor[].[]",3347)
(3341,"time +=2",3342)
(3342,"controller.checkcode[3].[]",3442)
(3343,"intruder.spyingdoor[false].[]",3349)
(3343,"door.getlockstatus[].[]",3410)
(3344,"user.codechecked[true].[]",3349)
(3345,"time +=13",3346)
(3346,"user.enterkey[].[]",3522)
(3346,"user.enterkey[].[_8]",3524)
(3346,"user.enterkey[].[_10]",3526)
(3347,"time +=5",3348)
(3348,"controller.setdoorstatus[true, false].[]",3475)
(3349,"door.getlockstatus[].[]",3355)
(3350,"intruder.spyingdoor[false].[]",3356)
(3351,"intruder.spyingdoor[false].[]",3358)
(3352,"intruder.spyingdoor[false].[]",3360)
(3353,"intruder.spyingdoor[false].[]",3362)
(3354,"intruder.spyingdoor[false].[]",3364)
(3355,"user.setstatus[false].[]",3366)
(3356,"time +=8",3357)
(3357,"user.enterkey[].[]",5595)
(3357,"user.enterkey[].[_8]",5596)
(3357,"user.enterkey[].[_10]",5597)
(3358,"time +=15",3359)
(3359,"user.enterkey[].[_3]",3531)
(3359,"user.enterkey[].[]",3533)
(3359,"user.enterkey[].[_10]",3535)
(3360,"time +=8",3361)
(3361,"controller.checkkey[2].[]",3495)
(3362,"time +=18",3363)
(3363,"user.enterkey[].[_3]",3560)
(3363,"user.enterkey[].[]",3562)
(3363,"user.enterkey[].[_10]",3564)
(3364,"time +=5",3365)
(3365,"user.enterkey[].[]",3464)
(3365,"user.enterkey[].[_8]",3466)
(3365,"user.enterkey[].[_10]",3468)
(3366,"time +=20",3367)
(3367,"user.enterkey[].[_3]",3570)
(3367,"user.enterkey[].[_8]",3572)
(3367,"user.enterkey[].[]",3574)
(3368,"controller.lockeduser[].[]",3372)
(3368,"door.spiedon[].[]",3373)
(3369,"controller.checkcode[3].[]",3373)
(3369,"intruder.spyingdoor[false].[]",3374)
(3370,"intruder.spyingdoor[false].[]",3375)
(3371,"intruder.spyingdoor[false].[]",3377)
(3372,"controller.setunarmed[].[]",3379)
(3372,"door.spiedon[].[]",3380)
(3373,"controller.lockeduser[].[]",3380)
(3373,"intruder.spyingdoor[false].[]",3381)
(3374,"controller.checkcode[3].[]",3381)
(3375,"time +=2",3376)
(3376,"user.codechecked[true].[]",3445)
(3377,"time +=12",3378)
(3378,"user.enterkey[].[_3]",5604)
(3378,"user.enterkey[].[_8]",5605)
(3378,"user.enterkey[].[]",5606)
(3379,"door.unlockdoor[].[]",3382)
(3379,"door.spiedon[].[]",3383)
(3380,"controller.setunarmed[].[]",3383)
(3380,"intruder.spyingdoor[false].[]",3384)
(3381,"controller.lockeduser[].[]",3384)
(3382,"door.spiedon[].[]",3385)
(3383,"intruder.spyingdoor[false].[]",3386)
(3383,"door.unlockdoor[].[]",3385)
(3384,"controller.setunarmed[].[]",3386)
(3385,"intruder.spyingdoor[false].[]",3387)
(3386,"door.unlockdoor[].[]",3387)
(3387,"time +=5",3388)
(3388,"controller.setdoorstatus[true, false].[]",3472)
(3389,"intruder.spyingdoor[false].[]",3394)
(3390,"door.spiedon[].[]",3396)
(3391,"controller.setdoorstatus[true, false].[]",3396)
(3391,"intruder.spyingdoor[false].[]",3397)
(3392,"door.getlockstatus[].[]",3398)
(3392,"door.spiedon[].[]",3399)
(3393,"user.codechecked[true].[]",3399)
(3393,"intruder.spyingdoor[false].[]",3400)
(3394,"time +=3",3395)
(3395,"user.enterkey[].[_3]",5592)
(3395,"user.enterkey[].[]",5593)
(3395,"user.enterkey[].[_10]",5594)
(3396,"intruder.spyingdoor[false].[]",3401)
(3397,"controller.setdoorstatus[true, false].[]",3401)
(3398,"user.setstatus[false].[]",3403)
(3398,"door.spiedon[].[]",3404)
(3399,"intruder.spyingdoor[false].[]",3405)
(3399,"door.getlockstatus[].[]",3404)
(3400,"user.codechecked[true].[]",3405)
(3401,"time +=5",3402)
(3402,"user.codechecked[true].[]",3471)
(3403,"door.spiedon[].[]",3406)
(3404,"user.setstatus[false].[]",3406)
(3404,"intruder.spyingdoor[false].[]",3407)
(3405,"door.getlockstatus[].[]",3407)
(3406,"intruder.spyingdoor[false].[]",3408)
(3407,"user.setstatus[false].[]",3408)
(3408,"time +=20",3409)
(3409,"user.enterkey[].[]",3570)
(3409,"user.enterkey[].[_8]",3572)
(3409,"user.enterkey[].[_10]",3574)
(3410,"user.setstatus[false].[]",3413)
(3410,"intruder.spyingdoor[false].[]",3355)
(3411,"user.setstatus[false].[]",3414)
(3411,"door.spiedon[].[]",3410)
(3412,"intruder.spyingdoor[false].[]",3415)
(3413,"intruder.spyingdoor[false].[]",3366)
(3414,"door.spiedon[].[]",3413)
(3415,"time +=13",3416)
(3416,"user.enterkey[].[_3]",3522)
(3416,"user.enterkey[].[]",3524)
(3416,"user.enterkey[].[_10]",3526)
(3417,"controller.setunarmed[].[]",3421)
(3417,"intruder.spyingdoor[false].[]",3333)
(3418,"intruder.spyingdoor[false].[]",3423)
(3419,"door.spiedon[].[]",3425)
(3420,"controller.setdoorstatus[true, false].[]",3425)
(3420,"intruder.spyingdoor[false].[]",3426)
(3421,"intruder.spyingdoor[false].[]",3340)
(3421,"door.unlockdoor[].[]",3427)
(3422,"controller.setunarmed[].[]",3428)
(3422,"door.spiedon[].[]",3417)
(3423,"time +=10",3424)
(3424,"user.enterkey[].[]",5598)
(3424,"user.enterkey[].[_8]",5599)
(3424,"user.enterkey[].[_10]",5600)
(3425,"intruder.spyingdoor[false].[]",3429)
(3426,"controller.setdoorstatus[true, false].[]",3429)
(3427,"intruder.spyingdoor[false].[]",3347)
(3428,"door.unlockdoor[].[]",3431)
(3428,"door.spiedon[].[]",3421)
(3429,"time +=5",3430)
(3430,"user.codechecked[true].[]",3474)
(3431,"door.spiedon[].[]",3427)
(3432,"intruder.spyingdoor[false].[]",3435)
(3433,"user.setstatus[false].[]",3437)
(3433,"intruder.spyingdoor[false].[]",3309)
(3434,"user.setstatus[false].[]",3438)
(3434,"door.spiedon[].[]",3433)
(3435,"time +=3",3436)
(3436,"user.codechecked[true].[]",3456)
(3437,"intruder.spyingdoor[false].[]",3318)
(3438,"door.spiedon[].[]",3437)
(3439,"controller.setkeyvalid[].[]",3440)
(3440,"time +=10",3441)
(3441,"user.keychecked[true].[]",3512)
(3441,"controller.tau=>setkeyvalid.[]",3513)
(3442,"controller.lockeduser[].[]",3446)
(3443,"time +=5",3444)
(3444,"user.codechecked[true].[]",3490)
(3445,"door.getlockstatus[].[]",3447)
(3446,"controller.setunarmed[].[]",3448)
(3447,"user.setstatus[false].[]",3449)
(3448,"door.unlockdoor[].[]",3451)
(3449,"time +=20",3450)
(3450,"user.enterkey[].[_3]",5610)
(3450,"user.enterkey[].[_8]",5611)
(3450,"user.enterkey[].[]",5612)
(3451,"time +=5",3452)
(3452,"controller.setdoorstatus[true, false].[]",3488)
(3453,"door.getlockstatus[].[]",3457)
(3454,"time +=5",3455)
(3455,"user.codechecked[true].[]",3496)
(3456,"door.getlockstatus[].[]",3458)
(3457,"user.setstatus[false].[]",3459)
(3458,"user.setstatus[false].[]",3461)
(3459,"time +=20",3460)
(3460,"user.enterkey[].[]",3587)
(3460,"user.enterkey[].[_8]",3589)
(3460,"user.enterkey[].[_10]",3591)
(3461,"time +=20",3462)
(3462,"user.enterkey[].[_3]",3587)
(3462,"user.enterkey[].[]",3589)
(3462,"user.enterkey[].[_10]",3591)
(3463,"door.getlockstatus[].[]",3470)
(3464,"time +=3",3465)
(3465,"controller.checkkey[2].[]",3494)
(3466,"time +=8",3467)
(3467,"controller.checkkey[2].[]",3528)
(3468,"time +=10",3469)
(3469,"controller.checkkey[2].[]",3537)
(3470,"user.setstatus[false].[]",3477)
(3471,"door.getlockstatus[].[]",3479)
(3472,"time +=5",3473)
(3473,"user.codechecked[true].[]",3505)
(3474,"door.getlockstatus[].[]",3480)
(3475,"time +=5",3476)
(3476,"user.codechecked[true].[]",3504)
(3477,"time +=20",3478)
(3478,"user.enterkey[].[_3]",3608)
(3478,"user.enterkey[].[_8]",3610)
(3478,"user.enterkey[].[]",3612)
(3479,"user.setstatus[false].[]",3481)
(3480,"user.setstatus[false].[]",3483)
(3481,"time +=20",3482)
(3482,"user.enterkey[].[]",3608)
(3482,"user.enterkey[].[_8]",3610)
(3482,"user.enterkey[].[_10]",3612)
(3483,"time +=20",3484)
(3484,"user.enterkey[].[_3]",3608)
(3484,"user.enterkey[].[]",3610)
(3484,"user.enterkey[].[_10]",3612)
(3485,"controller.setkeyvalid[].[]",3486)
(3486,"time +=10",3487)
(3487,"user.keychecked[true].[]",3541)
(3487,"controller.tau=>setkeyvalid.[]",3542)
(3488,"time +=5",3489)
(3489,"user.codechecked[true].[]",3518)
(3490,"door.getlockstatus[].[]",3491)
(3491,"user.setstatus[false].[]",3492)
(3492,"time +=20",3493)
(3493,"user.enterkey[].[_3]",5613)
(3493,"user.enterkey[].[_8]",5614)
(3493,"user.enterkey[].[]",5615)
(3494,"controller.setkeyvalid[].[]",3497)
(3495,"controller.setkeyvalid[].[]",3500)
(3496,"door.getlockstatus[].[]",3499)
(3497,"time +=10",3498)
(3498,"user.keychecked[true].[]",3558)
(3498,"controller.tau=>setkeyvalid.[]",3559)
(3499,"user.setstatus[false].[]",3502)
(3500,"time +=10",3501)
(3501,"user.keychecked[true].[]",3550)
(3501,"controller.tau=>setkeyvalid.[]",3551)
(3502,"time +=20",3503)
(3503,"user.enterkey[].[_3]",5616)
(3503,"user.enterkey[].[]",5617)
(3503,"user.enterkey[].[_10]",5618)
(3504,"door.getlockstatus[].[]",3506)
(3505,"door.getlockstatus[].[]",3507)
(3506,"user.setstatus[false].[]",3508)
(3507,"user.setstatus[false].[]",3510)
(3508,"time +=20",3509)
(3509,"user.enterkey[].[_3]",3694)
(3509,"user.enterkey[].[_8]",3695)
(3509,"user.enterkey[].[]",3696)
(3509,"door.spiedon[].[]",3742)
(3510,"time +=20",3511)
(3511,"user.enterkey[].[_3]",3694)
(3511,"user.enterkey[].[]",3695)
(3511,"user.enterkey[].[_10]",3696)
(3511,"door.spiedon[].[]",3697)
(3512,"controller.tau=>setkeyvalid.[]",3514)
(3513,"user.keychecked[true].[]",3514)
(3513,"controller.setkeyinvalid[].[]",3515)
(3514,"controller.setkeyinvalid[].[]",3516)
(3515,"user.keychecked[true].[]",3516)
(3516,"time +=10",3517)
(3517,"controller.checkcode[3].[]",3576)
(3518,"door.getlockstatus[].[]",3519)
(3519,"user.setstatus[false].[]",3520)
(3520,"time +=18",3521)
(3521,"door.spiedon[].[]",3748)
(3522,"time +=3",3523)
(3523,"controller.checkkey[2].[]",3540)
(3524,"time +=8",3525)
(3525,"controller.checkkey[2].[]",3578)
(3526,"time +=10",3527)
(3527,"controller.checkkey[2].[]",3602)
(3528,"controller.setkeyvalid[].[]",3529)
(3529,"time +=10",3530)
(3530,"user.keychecked[true].[]",3594)
(3530,"controller.tau=>setkeyvalid.[]",3595)
(3531,"time +=3",3532)
(3532,"controller.checkkey[2].[]",3549)
(3533,"time +=8",3534)
(3534,"controller.checkkey[2].[]",3603)
(3535,"time +=10",3536)
(3536,"controller.checkkey[2].[]",3616)
(3537,"controller.setkeyvalid[].[]",3538)
(3538,"time +=10",3539)
(3539,"user.keychecked[true].[]",3614)
(3539,"controller.tau=>setkeyvalid.[]",3615)
(3540,"controller.setkeyvalid[].[]",3543)
(3541,"controller.tau=>setkeyvalid.[]",3545)
(3542,"user.keychecked[true].[]",3545)
(3542,"controller.setkeyinvalid[].[]",3546)
(3543,"time +=10",3544)
(3544,"user.keychecked[true].[]",3624)
(3544,"controller.tau=>setkeyvalid.[]",3625)
(3545,"controller.setkeyinvalid[].[]",3547)
(3546,"user.keychecked[true].[]",3547)
(3547,"time +=10",3548)
(3548,"controller.checkcode[3].[]",3635)
(3549,"controller.setkeyvalid[].[]",3552)
(3550,"controller.tau=>setkeyvalid.[]",3554)
(3551,"user.keychecked[true].[]",3554)
(3551,"controller.setkeyinvalid[].[]",3555)
(3552,"time +=10",3553)
(3553,"user.keychecked[true].[]",3659)
(3553,"controller.tau=>setkeyvalid.[]",3660)
(3554,"controller.setkeyinvalid[].[]",3556)
(3555,"user.keychecked[true].[]",3556)
(3556,"time +=10",3557)
(3557,"controller.checkcode[3].[]",3650)
(3558,"controller.tau=>setkeyvalid.[]",3566)
(3559,"user.keychecked[true].[]",3566)
(3559,"controller.setkeyinvalid[].[]",3567)
(3560,"time +=3",3561)
(3561,"controller.checkkey[2].[]",3577)
(3562,"time +=8",3563)
(3563,"controller.checkkey[2].[]",3626)
(3564,"time +=10",3565)
(3565,"controller.checkkey[2].[]",3640)
(3566,"controller.setkeyinvalid[].[]",3568)
(3567,"user.keychecked[true].[]",3568)
(3568,"time +=10",3569)
(3569,"controller.checkcode[3].[]",3649)
(3570,"time +=3",3571)
(3571,"controller.checkkey[2].[]",3593)
(3572,"time +=8",3573)
(3573,"controller.checkkey[2].[]",3642)
(3574,"time +=10",3575)
(3575,"controller.checkkey[2].[]",3731)
(3575,"door.spiedon[].[]",3732)
(3576,"controller.lockeduser[].[]",3579)
(3577,"controller.setkeyvalid[].[]",3580)
(3578,"controller.setkeyvalid[].[]",3582)
(3579,"controller.setarmed[].[]",3584)
(3580,"time +=9",3581)
(3581,"door.spiedon[].[]",3665)
(3582,"time +=9",3583)
(3583,"door.spiedon[].[]",3669)
(3584,"door.lockdoor[].[]",3585)
(3585,"time +=9",3586)
(3586,"door.spiedon[].[]",3692)
(3587,"time +=3",3588)
(3588,"controller.checkkey[2].[]",3623)
(3589,"time +=7",3590)
(3590,"door.spiedon[].[]",3683)
(3591,"time +=7",3592)
(3592,"door.spiedon[].[]",3693)
(3593,"controller.setkeyvalid[].[]",3596)
(3594,"controller.tau=>setkeyvalid.[]",3598)
(3595,"user.keychecked[true].[]",3598)
(3595,"controller.setkeyinvalid[].[]",3599)
(3596,"time +=7",3597)
(3597,"door.spiedon[].[]",3712)
(3598,"controller.setkeyinvalid[].[]",3600)
(3599,"user.keychecked[true].[]",3600)
(3600,"time +=7",3601)
(3601,"door.spiedon[].[]",3724)
(3602,"controller.setkeyvalid[].[]",3604)
(3603,"controller.setkeyvalid[].[]",3606)
(3604,"time +=7",3605)
(3605,"door.spiedon[].[]",3680)
(3606,"time +=7",3607)
(3607,"door.spiedon[].[]",3725)
(3608,"time +=3",3609)
(3609,"controller.checkkey[2].[]",3641)
(3610,"time +=5",3611)
(3611,"door.spiedon[].[]",3753)
(3612,"time +=5",3613)
(3613,"door.spiedon[].[]",3713)
(3614,"controller.tau=>setkeyvalid.[]",3617)
(3615,"user.keychecked[true].[]",3617)
(3615,"controller.setkeyinvalid[].[]",3618)
(3616,"controller.setkeyvalid[].[]",3619)
(3617,"controller.setkeyinvalid[].[]",3621)
(3618,"user.keychecked[true].[]",3621)
(3619,"time +=5",3620)
(3620,"door.spiedon[].[]",3682)
(3621,"time +=5",3622)
(3622,"door.spiedon[].[]",3730)
(3623,"controller.setkeyvalid[].[]",3627)
(3624,"controller.tau=>setkeyvalid.[]",3629)
(3625,"user.keychecked[true].[]",3629)
(3625,"controller.setkeyinvalid[].[]",3630)
(3626,"controller.setkeyvalid[].[]",3631)
(3627,"time +=4",3628)
(3628,"door.spiedon[].[]",3667)
(3629,"controller.setkeyinvalid[].[]",3633)
(3630,"user.keychecked[true].[]",3633)
(3631,"time +=4",3632)
(3632,"door.spiedon[].[]",3718)
(3633,"time +=4",3634)
(3634,"door.spiedon[].[]",3743)
(3635,"controller.lockeduser[].[]",3636)
(3636,"controller.setarmed[].[]",3637)
(3637,"door.lockdoor[].[]",3638)
(3638,"time +=4",3639)
(3639,"door.spiedon[].[]",3681)
(3640,"controller.setkeyvalid[].[]",3643)
(3641,"controller.setkeyvalid[].[]",3645)
(3642,"controller.setkeyvalid[].[]",3647)
(3643,"time +=2",3644)
(3644,"door.spiedon[].[]",3666)
(3645,"time +=2",3646)
(3646,"door.spiedon[].[]",3759)
(3647,"time +=2",3648)
(3648,"door.spiedon[].[]",3754)
(3649,"controller.lockeduser[].[]",3651)
(3650,"controller.lockeduser[].[]",3652)
(3651,"controller.setarmed[].[]",3653)
(3652,"controller.setarmed[].[]",3654)
(3653,"door.lockdoor[].[]",3655)
(3654,"door.lockdoor[].[]",3657)
(3655,"time +=2",3656)
(3656,"door.spiedon[].[]",3747)
(3657,"time +=2",3658)
(3658,"door.spiedon[].[]",3719)
(3659,"controller.tau=>setkeyvalid.[]",3661)
(3660,"user.keychecked[true].[]",3661)
(3660,"controller.setkeyinvalid[].[]",3662)
(3661,"controller.setkeyinvalid[].[]",3663)
(3662,"user.keychecked[true].[]",3663)
(3663,"time +=2",3664)
(3664,"door.spiedon[].[]",3668)
(3665,"intruder.spyingdoor[false].[]",3670)
(3666,"intruder.spyingdoor[false].[]",3672)
(3667,"intruder.spyingdoor[false].[]",3674)
(3668,"intruder.spyingdoor[false].[]",3676)
(3669,"intruder.spyingdoor[false].[]",3678)
(3670,"time +=1",3671)
(3671,"user.keychecked[true].[]",3763)
(3671,"controller.tau=>setkeyvalid.[]",3764)
(3672,"time +=8",3673)
(3673,"user.keychecked[true].[]",3874)
(3673,"controller.tau=>setkeyvalid.[]",3875)
(3674,"time +=6",3675)
(3675,"user.keychecked[true].[]",3828)
(3675,"controller.tau=>setkeyvalid.[]",3829)
(3676,"time +=8",3677)
(3677,"controller.checkcode[3].[]",3852)
(3678,"time +=1",3679)
(3679,"user.keychecked[true].[]",3765)
(3679,"controller.tau=>setkeyvalid.[]",3766)
(3680,"intruder.spyingdoor[false].[]",3684)
(3681,"intruder.spyingdoor[false].[]",3686)
(3682,"intruder.spyingdoor[false].[]",3688)
(3683,"intruder.spyingdoor[false].[]",3690)
(3684,"time +=3",3685)
(3685,"user.keychecked[true].[]",3783)
(3685,"controller.tau=>setkeyvalid.[]",3784)
(3686,"time +=6",3687)
(3687,"user.codechecked[true].[]",3827)
(3688,"time +=5",3689)
(3689,"user.keychecked[true].[]",3813)
(3689,"controller.tau=>setkeyvalid.[]",3814)
(3690,"time +=1",3691)
(3691,"controller.checkkey[2].[]",3778)
(3692,"intruder.spyingdoor[false].[]",3698)
(3693,"intruder.spyingdoor[false].[]",3700)
(3694,"door.spiedon[].[]",3703)
(3695,"door.spiedon[].[]",3702)
(3696,"door.spiedon[].[]",3704)
(3697,"user.enterkey[].[_3]",3703)
(3697,"user.enterkey[].[]",3702)
(3697,"user.enterkey[].[_10]",3704)
(3697,"intruder.spyingdoor[false].[]",3705)
(3698,"time +=1",3699)
(3699,"user.codechecked[true].[]",3762)
(3700,"time +=3",3701)
(3701,"controller.checkkey[2].[]",3781)
(3702,"intruder.spyingdoor[false].[]",3706)
(3703,"intruder.spyingdoor[false].[]",3708)
(3704,"intruder.spyingdoor[false].[]",3710)
(3705,"user.enterkey[].[_3]",3708)
(3705,"user.enterkey[].[]",3706)
(3705,"user.enterkey[].[_10]",3710)
(3706,"time +=8",3707)
(3707,"controller.checkkey[2].[]",3865)
(3708,"time +=3",3709)
(3709,"controller.checkkey[2].[]",3782)
(3710,"time +=10",3711)
(3711,"controller.checkkey[2].[]",3882)
(3712,"intruder.spyingdoor[false].[]",3714)
(3713,"intruder.spyingdoor[false].[]",3716)
(3714,"time +=3",3715)
(3715,"user.keychecked[true].[]",3807)
(3715,"controller.tau=>setkeyvalid.[]",3808)
(3716,"time +=5",3717)
(3717,"controller.checkkey[2].[]",3815)
(3718,"intruder.spyingdoor[false].[]",3720)
(3719,"intruder.spyingdoor[false].[]",3722)
(3720,"time +=6",3721)
(3721,"user.keychecked[true].[]",3837)
(3721,"controller.tau=>setkeyvalid.[]",3838)
(3722,"time +=8",3723)
(3723,"user.codechecked[true].[]",3866)
(3724,"intruder.spyingdoor[false].[]",3726)
(3725,"intruder.spyingdoor[false].[]",3728)
(3726,"time +=3",3727)
(3727,"controller.checkcode[3].[]",3793)
(3728,"time +=3",3729)
(3729,"user.keychecked[true].[]",3799)
(3729,"controller.tau=>setkeyvalid.[]",3800)
(3730,"intruder.spyingdoor[false].[]",3733)
(3731,"controller.setkeyvalid[].[]",3735)
(3731,"door.spiedon[].[]",3736)
(3732,"controller.checkkey[2].[]",3736)
(3732,"intruder.spyingdoor[false].[]",3737)
(3733,"time +=5",3734)
(3734,"controller.checkcode[3].[]",3822)
(3735,"door.spiedon[].[]",3738)
(3736,"controller.setkeyvalid[].[]",3738)
(3736,"intruder.spyingdoor[false].[]",3739)
(3737,"controller.checkkey[2].[]",3739)
(3738,"intruder.spyingdoor[false].[]",3740)
(3739,"controller.setkeyvalid[].[]",3740)
(3740,"time +=10",3741)
(3741,"user.keychecked[true].[]",3883)
(3741,"controller.tau=>setkeyvalid.[]",3884)
(3742,"user.enterkey[].[_3]",3703)
(3742,"user.enterkey[].[_8]",3702)
(3742,"user.enterkey[].[]",3704)
(3742,"intruder.spyingdoor[false].[]",3744)
(3743,"intruder.spyingdoor[false].[]",3745)
(3744,"user.enterkey[].[_3]",3708)
(3744,"user.enterkey[].[_8]",3706)
(3744,"user.enterkey[].[]",3710)
(3745,"time +=6",3746)
(3746,"controller.checkcode[3].[]",3839)
(3747,"intruder.spyingdoor[false].[]",3749)
(3748,"intruder.spyingdoor[false].[]",3751)
(3749,"time +=8",3750)
(3750,"user.codechecked[true].[]",3870)
(3751,"time +=2",3752)
(3752,"user.enterkey[].[_3]",5619)
(3752,"user.enterkey[].[_8]",5620)
(3752,"user.enterkey[].[]",5621)
(3753,"intruder.spyingdoor[false].[]",3755)
(3754,"intruder.spyingdoor[false].[]",3757)
(3755,"time +=3",3756)
(3756,"controller.checkkey[2].[]",3794)
(3757,"time +=8",3758)
(3758,"user.keychecked[true].[]",3848)
(3758,"controller.tau=>setkeyvalid.[]",3849)
(3759,"intruder.spyingdoor[false].[]",3760)
(3760,"time +=8",3761)
(3761,"user.keychecked[true].[]",3850)
(3761,"controller.tau=>setkeyvalid.[]",3851)
(3762,"door.getlockstatus[].[]",3767)
(3763,"controller.tau=>setkeyvalid.[]",3768)
(3764,"user.keychecked[true].[]",3768)
(3764,"controller.setkeyinvalid[].[]",3769)
(3765,"controller.tau=>setkeyvalid.[]",3770)
(3766,"user.keychecked[true].[]",3770)
(3766,"controller.setkeyinvalid[].[]",3771)
(3767,"user.setstatus[false].[]",3772)
(3768,"controller.setkeyinvalid[].[]",3774)
(3769,"user.keychecked[true].[]",3774)
(3770,"controller.setkeyinvalid[].[]",3776)
(3771,"user.keychecked[true].[]",3776)
(3772,"time +=20",3773)
(3773,"user.enterkey[].[]",4012)
(3773,"user.enterkey[].[_8]",4014)
(3773,"user.enterkey[].[_10]",4016)
(3774,"time +=10",3775)
(3775,"controller.checkcode[3].[]",3893)
(3776,"time +=10",3777)
(3777,"controller.checkcode[3].[]",3894)
(3778,"controller.setkeyvalid[].[]",3779)
(3779,"time +=10",3780)
(3780,"user.keychecked[true].[]",3891)
(3780,"controller.tau=>setkeyvalid.[]",3892)
(3781,"controller.setkeyvalid[].[]",3785)
(3782,"controller.setkeyvalid[].[]",3787)
(3783,"controller.tau=>setkeyvalid.[]",3789)
(3784,"user.keychecked[true].[]",3789)
(3784,"controller.setkeyinvalid[].[]",3790)
(3785,"time +=10",3786)
(3786,"user.keychecked[true].[]",3927)
(3786,"controller.tau=>setkeyvalid.[]",3928)
(3787,"time +=10",3788)
(3788,"user.keychecked[true].[]",3908)
(3788,"controller.tau=>setkeyvalid.[]",3909)
(3789,"controller.setkeyinvalid[].[]",3791)
(3790,"user.keychecked[true].[]",3791)
(3791,"time +=10",3792)
(3792,"controller.checkcode[3].[]",3918)
(3793,"controller.lockeduser[].[]",3795)
(3794,"controller.setkeyvalid[].[]",3796)
(3795,"controller.setarmed[].[]",3798)
(3796,"time +=10",3797)
(3797,"user.keychecked[true].[]",3929)
(3797,"controller.tau=>setkeyvalid.[]",3930)
(3798,"door.lockdoor[].[]",3801)
(3799,"controller.tau=>setkeyvalid.[]",3803)
(3800,"user.keychecked[true].[]",3803)
(3800,"controller.setkeyinvalid[].[]",3804)
(3801,"time +=10",3802)
(3802,"user.codechecked[true].[]",3907)
(3803,"controller.setkeyinvalid[].[]",3805)
(3804,"user.keychecked[true].[]",3805)
(3805,"time +=10",3806)
(3806,"controller.checkcode[3].[]",3917)
(3807,"controller.tau=>setkeyvalid.[]",3809)
(3808,"user.keychecked[true].[]",3809)
(3808,"controller.setkeyinvalid[].[]",3810)
(3809,"controller.setkeyinvalid[].[]",3811)
(3810,"user.keychecked[true].[]",3811)
(3811,"time +=10",3812)
(3812,"controller.checkcode[3].[]",3939)
(3813,"controller.tau=>setkeyvalid.[]",3816)
(3814,"user.keychecked[true].[]",3816)
(3814,"controller.setkeyinvalid[].[]",3817)
(3815,"controller.setkeyvalid[].[]",3818)
(3816,"controller.setkeyinvalid[].[]",3820)
(3817,"user.keychecked[true].[]",3820)
(3818,"time +=10",3819)
(3819,"user.keychecked[true].[]",3944)
(3819,"controller.tau=>setkeyvalid.[]",3945)
(3820,"time +=10",3821)
(3821,"controller.checkcode[3].[]",3954)
(3822,"controller.lockeduser[].[]",3823)
(3823,"controller.setarmed[].[]",3824)
(3824,"door.lockdoor[].[]",3825)
(3825,"time +=10",3826)
(3826,"user.codechecked[true].[]",3946)
(3827,"door.getlockstatus[].[]",3830)
(3828,"controller.tau=>setkeyvalid.[]",3831)
(3829,"user.keychecked[true].[]",3831)
(3829,"controller.setkeyinvalid[].[]",3832)
(3830,"user.setstatus[false].[]",3833)
(3831,"controller.setkeyinvalid[].[]",3835)
(3832,"user.keychecked[true].[]",3835)
(3833,"time +=20",3834)
(3834,"user.enterkey[].[_3]",5622)
(3834,"user.enterkey[].[]",5623)
(3834,"user.enterkey[].[_10]",5624)
(3835,"time +=10",3836)
(3836,"controller.checkcode[3].[]",3968)
(3837,"controller.tau=>setkeyvalid.[]",3840)
(3838,"user.keychecked[true].[]",3840)
(3838,"controller.setkeyinvalid[].[]",3841)
(3839,"controller.lockeduser[].[]",3842)
(3840,"controller.setkeyinvalid[].[]",3843)
(3841,"user.keychecked[true].[]",3843)
(3842,"controller.setarmed[].[]",3845)
(3843,"time +=10",3844)
(3844,"controller.checkcode[3].[]",3959)
(3845,"door.lockdoor[].[]",3846)
(3846,"time +=10",3847)
(3847,"user.codechecked[true].[]",3960)
(3848,"controller.tau=>setkeyvalid.[]",3853)
(3849,"user.keychecked[true].[]",3853)
(3849,"controller.setkeyinvalid[].[]",3854)
(3850,"controller.tau=>setkeyvalid.[]",3855)
(3851,"user.keychecked[true].[]",3855)
(3851,"controller.setkeyinvalid[].[]",3856)
(3852,"controller.lockeduser[].[]",3857)
(3853,"controller.setkeyinvalid[].[]",3858)
(3854,"user.keychecked[true].[]",3858)
(3855,"controller.setkeyinvalid[].[]",3860)
(3856,"user.keychecked[true].[]",3860)
(3857,"controller.setarmed[].[]",3862)
(3858,"time +=10",3859)
(3859,"controller.checkcode[3].[]",3974)
(3860,"time +=10",3861)
(3861,"controller.checkcode[3].[]",3973)
(3862,"door.lockdoor[].[]",3863)
(3863,"time +=10",3864)
(3864,"user.codechecked[true].[]",3992)
(3865,"controller.setkeyvalid[].[]",3867)
(3866,"door.getlockstatus[].[]",3869)
(3867,"time +=10",3868)
(3868,"user.keychecked[true].[]",3983)
(3868,"controller.tau=>setkeyvalid.[]",3984)
(3869,"user.setstatus[false].[]",3871)
(3870,"door.getlockstatus[].[]",3873)
(3871,"time +=20",3872)
(3872,"user.enterkey[].[_3]",4076)
(3872,"user.enterkey[].[_8]",4078)
(3872,"user.enterkey[].[]",4080)
(3873,"user.setstatus[false].[]",3876)
(3874,"controller.tau=>setkeyvalid.[]",3878)
(3875,"user.keychecked[true].[]",3878)
(3875,"controller.setkeyinvalid[].[]",3879)
(3876,"time +=20",3877)
(3877,"user.enterkey[].[]",4076)
(3877,"user.enterkey[].[_8]",4078)
(3877,"user.enterkey[].[_10]",4080)
(3878,"controller.setkeyinvalid[].[]",3880)
(3879,"user.keychecked[true].[]",3880)
(3880,"time +=10",3881)
(3881,"controller.checkcode[3].[]",3985)
(3882,"controller.setkeyvalid[].[]",3885)
(3883,"controller.tau=>setkeyvalid.[]",3887)
(3884,"user.keychecked[true].[]",3887)
(3884,"controller.setkeyinvalid[].[]",3888)
(3885,"time +=10",3886)
(3886,"user.keychecked[true].[]",3999)
(3886,"controller.tau=>setkeyvalid.[]",4000)
(3887,"controller.setkeyinvalid[].[]",3889)
(3888,"user.keychecked[true].[]",3889)
(3889,"time +=10",3890)
(3890,"controller.checkcode[3].[]",3998)
(3891,"controller.tau=>setkeyvalid.[]",3895)
(3892,"user.keychecked[true].[]",3895)
(3892,"controller.setkeyinvalid[].[]",3896)
(3893,"controller.lockeduser[].[]",3897)
(3894,"controller.lockeduser[].[]",3898)
(3895,"controller.setkeyinvalid[].[]",3899)
(3896,"user.keychecked[true].[]",3899)
(3897,"controller.setarmed[].[]",3901)
(3898,"controller.setarmed[].[]",3902)
(3899,"time +=10",3900)
(3900,"controller.checkcode[3].[]",4010)
(3901,"door.lockdoor[].[]",3903)
(3902,"door.lockdoor[].[]",3905)
(3903,"time +=10",3904)
(3904,"user.codechecked[true].[]",4011)
(3905,"time +=10",3906)
(3906,"user.codechecked[true].[]",4009)
(3907,"door.getlockstatus[].[]",3910)
(3908,"controller.tau=>setkeyvalid.[]",3911)
(3909,"user.keychecked[true].[]",3911)
(3909,"controller.setkeyinvalid[].[]",3912)
(3910,"user.setstatus[false].[]",3913)
(3911,"controller.setkeyinvalid[].[]",3915)
(3912,"user.keychecked[true].[]",3915)
(3913,"time +=17",3914)
(3914,"door.spiedon[].[]",4188)
(3915,"time +=10",3916)
(3916,"controller.checkcode[3].[]",4029)
(3917,"controller.lockeduser[].[]",3919)
(3918,"controller.lockeduser[].[]",3920)
(3919,"controller.setarmed[].[]",3921)
(3920,"controller.setarmed[].[]",3922)
(3921,"door.lockdoor[].[]",3923)
(3922,"door.lockdoor[].[]",3925)
(3923,"time +=10",3924)
(3924,"user.codechecked[true].[]",4049)
(3925,"time +=10",3926)
(3926,"user.codechecked[true].[]",4045)
(3927,"controller.tau=>setkeyvalid.[]",3931)
(3928,"user.keychecked[true].[]",3931)
(3928,"controller.setkeyinvalid[].[]",3932)
(3929,"controller.tau=>setkeyvalid.[]",3933)
(3930,"user.keychecked[true].[]",3933)
(3930,"controller.setkeyinvalid[].[]",3934)
(3931,"controller.setkeyinvalid[].[]",3935)
(3932,"user.keychecked[true].[]",3935)
(3933,"controller.setkeyinvalid[].[]",3937)
(3934,"user.keychecked[true].[]",3937)
(3935,"time +=10",3936)
(3936,"controller.checkcode[3].[]",4028)
(3937,"time +=10",3938)
(3938,"controller.checkcode[3].[]",4039)
(3939,"controller.lockeduser[].[]",3940)
(3940,"controller.setarmed[].[]",3941)
(3941,"door.lockdoor[].[]",3942)
(3942,"time +=10",3943)
(3943,"user.codechecked[true].[]",4038)
(3944,"controller.tau=>setkeyvalid.[]",3947)
(3945,"user.keychecked[true].[]",3947)
(3945,"controller.setkeyinvalid[].[]",3948)
(3946,"door.getlockstatus[].[]",3949)
(3947,"controller.setkeyinvalid[].[]",3950)
(3948,"user.keychecked[true].[]",3950)
(3949,"user.setstatus[false].[]",3952)
(3950,"time +=10",3951)
(3951,"controller.checkcode[3].[]",4059)
(3952,"time +=15",3953)
(3953,"door.spiedon[].[]",4141)
(3954,"controller.lockeduser[].[]",3955)
(3955,"controller.setarmed[].[]",3956)
(3956,"door.lockdoor[].[]",3957)
(3957,"time +=10",3958)
(3958,"user.codechecked[true].[]",4058)
(3959,"controller.lockeduser[].[]",3961)
(3960,"door.getlockstatus[].[]",3962)
(3961,"controller.setarmed[].[]",3963)
(3962,"user.setstatus[false].[]",3964)
(3963,"door.lockdoor[].[]",3966)
(3964,"time +=14",3965)
(3965,"door.spiedon[].[]",4164)
(3966,"time +=10",3967)
(3967,"user.codechecked[true].[]",4067)
(3968,"controller.lockeduser[].[]",3969)
(3969,"controller.setarmed[].[]",3970)
(3970,"door.lockdoor[].[]",3971)
(3971,"time +=10",3972)
(3972,"user.codechecked[true].[]",4069)
(3973,"controller.lockeduser[].[]",3975)
(3974,"controller.lockeduser[].[]",3976)
(3975,"controller.setarmed[].[]",3977)
(3976,"controller.setarmed[].[]",3978)
(3977,"door.lockdoor[].[]",3979)
(3978,"door.lockdoor[].[]",3981)
(3979,"time +=10",3980)
(3980,"user.codechecked[true].[]",4088)
(3981,"time +=10",3982)
(3982,"user.codechecked[true].[]",4092)
(3983,"controller.tau=>setkeyvalid.[]",3986)
(3984,"user.keychecked[true].[]",3986)
(3984,"controller.setkeyinvalid[].[]",3987)
(3985,"controller.lockeduser[].[]",3988)
(3986,"controller.setkeyinvalid[].[]",3989)
(3987,"user.keychecked[true].[]",3989)
(3988,"controller.setarmed[].[]",3991)
(3989,"time +=10",3990)
(3990,"controller.checkcode[3].[]",4083)
(3991,"door.lockdoor[].[]",3993)
(3992,"door.getlockstatus[].[]",3995)
(3993,"time +=10",3994)
(3994,"user.codechecked[true].[]",4075)
(3995,"user.setstatus[false].[]",3996)
(3996,"time +=12",3997)
(3997,"door.spiedon[].[]",4116)
(3998,"controller.lockeduser[].[]",4001)
(3999,"controller.tau=>setkeyvalid.[]",4002)
(4000,"user.keychecked[true].[]",4002)
(4000,"controller.setkeyinvalid[].[]",4003)
(4001,"controller.setarmed[].[]",4004)
(4002,"controller.setkeyinvalid[].[]",4005)
(4003,"user.keychecked[true].[]",4005)
(4004,"door.lockdoor[].[]",4007)
(4005,"time +=10",4006)
(4006,"controller.checkcode[3].[]",4118)
(4006,"door.spiedon[].[]",4119)
(4007,"time +=10",4008)
(4008,"user.codechecked[true].[]",4150)
(4008,"door.spiedon[].[]",4151)
(4009,"door.getlockstatus[].[]",4018)
(4010,"controller.lockeduser[].[]",4019)
(4011,"door.getlockstatus[].[]",4020)
(4012,"time +=3",4013)
(4013,"controller.checkkey[2].[]",4055)
(4014,"time +=8",4015)
(4015,"controller.checkkey[2].[]",4098)
(4016,"time +=9",4017)
(4017,"door.spiedon[].[]",4142)
(4018,"user.setstatus[false].[]",4021)
(4019,"controller.setarmed[].[]",4023)
(4020,"user.setstatus[false].[]",4024)
(4021,"time +=9",4022)
(4022,"door.spiedon[].[]",4127)
(4023,"door.lockdoor[].[]",4026)
(4024,"time +=9",4025)
(4025,"door.spiedon[].[]",4149)
(4026,"time +=9",4027)
(4027,"door.spiedon[].[]",4183)
(4028,"controller.lockeduser[].[]",4030)
(4029,"controller.lockeduser[].[]",4031)
(4030,"controller.setarmed[].[]",4032)
(4031,"controller.setarmed[].[]",4033)
(4032,"door.lockdoor[].[]",4034)
(4033,"door.lockdoor[].[]",4036)
(4034,"time +=7",4035)
(4035,"door.spiedon[].[]",4177)
(4036,"time +=7",4037)
(4037,"door.spiedon[].[]",4200)
(4038,"door.getlockstatus[].[]",4040)
(4039,"controller.lockeduser[].[]",4041)
(4040,"user.setstatus[false].[]",4042)
(4041,"controller.setarmed[].[]",4044)
(4042,"time +=7",4043)
(4043,"door.spiedon[].[]",4195)
(4044,"door.lockdoor[].[]",4046)
(4045,"door.getlockstatus[].[]",4048)
(4046,"time +=7",4047)
(4047,"door.spiedon[].[]",4189)
(4048,"user.setstatus[false].[]",4050)
(4049,"door.getlockstatus[].[]",4052)
(4050,"time +=7",4051)
(4051,"door.spiedon[].[]",4101)
(4052,"user.setstatus[false].[]",4053)
(4053,"time +=7",4054)
(4054,"door.spiedon[].[]",4140)
(4055,"controller.setkeyvalid[].[]",4056)
(4056,"time +=6",4057)
(4057,"door.spiedon[].[]",4176)
(4058,"door.getlockstatus[].[]",4060)
(4059,"controller.lockeduser[].[]",4061)
(4060,"user.setstatus[false].[]",4062)
(4061,"controller.setarmed[].[]",4064)
(4062,"time +=5",4063)
(4063,"door.spiedon[].[]",4165)
(4064,"door.lockdoor[].[]",4065)
(4065,"time +=5",4066)
(4066,"door.spiedon[].[]",4206)
(4067,"door.getlockstatus[].[]",4068)
(4068,"user.setstatus[false].[]",4070)
(4069,"door.getlockstatus[].[]",4072)
(4070,"time +=4",4071)
(4071,"door.spiedon[].[]",4104)
(4072,"user.setstatus[false].[]",4073)
(4073,"time +=4",4074)
(4074,"door.spiedon[].[]",4182)
(4075,"door.getlockstatus[].[]",4082)
(4076,"time +=2",4077)
(4077,"door.spiedon[].[]",4117)
(4078,"time +=2",4079)
(4079,"door.spiedon[].[]",4194)
(4080,"time +=2",4081)
(4081,"door.spiedon[].[]",4170)
(4082,"user.setstatus[false].[]",4084)
(4083,"controller.lockeduser[].[]",4086)
(4084,"time +=2",4085)
(4085,"door.spiedon[].[]",4201)
(4086,"controller.setarmed[].[]",4087)
(4087,"door.lockdoor[].[]",4089)
(4088,"door.getlockstatus[].[]",4091)
(4089,"time +=2",4090)
(4090,"door.spiedon[].[]",4171)
(4091,"user.setstatus[false].[]",4093)
(4092,"door.getlockstatus[].[]",4095)
(4093,"time +=2",4094)
(4094,"door.spiedon[].[]",4102)
(4095,"user.setstatus[false].[]",4096)
(4096,"time +=2",4097)
(4097,"door.spiedon[].[]",4103)
(4098,"controller.setkeyvalid[].[]",4099)
(4099,"time +=1",4100)
(4100,"door.spiedon[].[]",4105)
(4101,"intruder.spyingdoor[false].[]",4106)
(4102,"intruder.spyingdoor[false].[]",4108)
(4103,"intruder.spyingdoor[false].[]",4110)
(4104,"intruder.spyingdoor[false].[]",4112)
(4105,"intruder.spyingdoor[false].[]",4114)
(4106,"time +=13",4107)
(4107,"user.enterkey[].[_3]",4279)
(4107,"user.enterkey[].[_8]",4281)
(4107,"user.enterkey[].[]",4283)
(4108,"time +=18",4109)
(4109,"user.enterkey[].[]",4308)
(4109,"user.enterkey[].[_8]",4310)
(4109,"user.enterkey[].[_10]",4312)
(4110,"time +=18",4111)
(4111,"user.enterkey[].[_3]",4308)
(4111,"user.enterkey[].[]",4310)
(4111,"user.enterkey[].[_10]",4312)
(4112,"time +=16",4113)
(4113,"user.enterkey[].[_3]",4302)
(4113,"user.enterkey[].[]",4304)
(4113,"user.enterkey[].[_10]",4306)
(4114,"time +=9",4115)
(4115,"user.keychecked[true].[]",4251)
(4115,"controller.tau=>setkeyvalid.[]",4252)
(4116,"intruder.spyingdoor[false].[]",4120)
(4117,"intruder.spyingdoor[false].[]",4122)
(4118,"controller.lockeduser[].[]",4124)
(4118,"door.spiedon[].[]",4125)
(4119,"controller.checkcode[3].[]",4125)
(4119,"intruder.spyingdoor[false].[]",4126)
(4120,"time +=8",4121)
(4121,"user.enterkey[].[]",5634)
(4121,"user.enterkey[].[_8]",5635)
(4121,"user.enterkey[].[_10]",5636)
(4122,"time +=1",4123)
(4123,"controller.checkkey[2].[]",4209)
(4124,"controller.setarmed[].[]",4128)
(4124,"door.spiedon[].[]",4129)
(4125,"controller.lockeduser[].[]",4129)
(4125,"intruder.spyingdoor[false].[]",4130)
(4126,"controller.checkcode[3].[]",4130)
(4127,"intruder.spyingdoor[false].[]",4131)
(4128,"door.lockdoor[].[]",4133)
(4128,"door.spiedon[].[]",4134)
(4129,"controller.setarmed[].[]",4134)
(4129,"intruder.spyingdoor[false].[]",4135)
(4130,"controller.lockeduser[].[]",4135)
(4131,"time +=11",4132)
(4132,"user.enterkey[].[_3]",4263)
(4132,"user.enterkey[].[]",4265)
(4132,"user.enterkey[].[_10]",4267)
(4133,"door.spiedon[].[]",4136)
(4134,"intruder.spyingdoor[false].[]",4137)
(4134,"door.lockdoor[].[]",4136)
(4135,"controller.setarmed[].[]",4137)
(4136,"intruder.spyingdoor[false].[]",4138)
(4137,"door.lockdoor[].[]",4138)
(4138,"time +=10",4139)
(4139,"user.codechecked[true].[]",4257)
(4140,"intruder.spyingdoor[false].[]",4143)
(4141,"intruder.spyingdoor[false].[]",4145)
(4142,"intruder.spyingdoor[false].[]",4147)
(4143,"time +=13",4144)
(4144,"user.enterkey[].[_3]",4279)
(4144,"user.enterkey[].[]",4281)
(4144,"user.enterkey[].[_10]",4283)
(4145,"time +=5",4146)
(4146,"user.enterkey[].[_3]",5628)
(4146,"user.enterkey[].[_8]",5629)
(4146,"user.enterkey[].[]",5630)
(4147,"time +=1",4148)
(4148,"controller.checkkey[2].[]",4210)
(4149,"intruder.spyingdoor[false].[]",4152)
(4150,"door.getlockstatus[].[]",4154)
(4150,"door.spiedon[].[]",4155)
(4151,"user.codechecked[true].[]",4155)
(4151,"intruder.spyingdoor[false].[]",4156)
(4152,"time +=11",4153)
(4153,"user.enterkey[].[]",4263)
(4153,"user.enterkey[].[_8]",4265)
(4153,"user.enterkey[].[_10]",4267)
(4154,"user.setstatus[false].[]",4157)
(4154,"door.spiedon[].[]",4158)
(4155,"intruder.spyingdoor[false].[]",4159)
(4155,"door.getlockstatus[].[]",4158)
(4156,"user.codechecked[true].[]",4159)
(4157,"door.spiedon[].[]",4160)
(4158,"user.setstatus[false].[]",4160)
(4158,"intruder.spyingdoor[false].[]",4161)
(4159,"door.getlockstatus[].[]",4161)
(4160,"intruder.spyingdoor[false].[]",4162)
(4161,"user.setstatus[false].[]",4162)
(4162,"time +=20",4163)
(4163,"user.enterkey[].[_3]",5640)
(4163,"user.enterkey[].[_8]",5641)
(4163,"user.enterkey[].[]",5642)
(4164,"intruder.spyingdoor[false].[]",4166)
(4165,"intruder.spyingdoor[false].[]",4168)
(4166,"time +=6",4167)
(4167,"user.enterkey[].[]",5631)
(4167,"user.enterkey[].[_8]",5632)
(4167,"user.enterkey[].[_10]",5633)
(4168,"time +=15",4169)
(4169,"user.enterkey[].[_3]",5637)
(4169,"user.enterkey[].[_8]",5638)
(4169,"user.enterkey[].[]",5639)
(4170,"intruder.spyingdoor[false].[]",4172)
(4171,"intruder.spyingdoor[false].[]",4174)
(4172,"time +=8",4173)
(4173,"controller.checkkey[2].[]",4244)
(4174,"time +=8",4175)
(4175,"user.codechecked[true].[]",4245)
(4176,"intruder.spyingdoor[false].[]",4178)
(4177,"intruder.spyingdoor[false].[]",4180)
(4178,"time +=4",4179)
(4179,"user.keychecked[true].[]",4231)
(4179,"controller.tau=>setkeyvalid.[]",4232)
(4180,"time +=3",4181)
(4181,"user.codechecked[true].[]",4219)
(4182,"intruder.spyingdoor[false].[]",4184)
(4183,"intruder.spyingdoor[false].[]",4186)
(4184,"time +=16",4185)
(4185,"user.enterkey[].[]",4302)
(4185,"user.enterkey[].[_8]",4304)
(4185,"user.enterkey[].[_10]",4306)
(4186,"time +=1",4187)
(4187,"user.codechecked[true].[]",4211)
(4188,"intruder.spyingdoor[false].[]",4190)
(4189,"intruder.spyingdoor[false].[]",4192)
(4190,"time +=3",4191)
(4191,"user.enterkey[].[_3]",5625)
(4191,"user.enterkey[].[]",5626)
(4191,"user.enterkey[].[_10]",5627)
(4192,"time +=3",4193)
(4193,"user.codechecked[true].[]",4221)
(4194,"intruder.spyingdoor[false].[]",4196)
(4195,"intruder.spyingdoor[false].[]",4198)
(4196,"time +=6",4197)
(4197,"controller.checkkey[2].[]",4241)
(4198,"time +=13",4199)
(4199,"user.enterkey[].[]",4279)
(4199,"user.enterkey[].[_8]",4281)
(4199,"user.enterkey[].[_10]",4283)
(4200,"intruder.spyingdoor[false].[]",4202)
(4201,"intruder.spyingdoor[false].[]",4204)
(4202,"time +=3",4203)
(4203,"user.codechecked[true].[]",4225)
(4204,"time +=18",4205)
(4205,"user.enterkey[].[_3]",4308)
(4205,"user.enterkey[].[_8]",4310)
(4205,"user.enterkey[].[]",4312)
(4206,"intruder.spyingdoor[false].[]",4207)
(4207,"time +=5",4208)
(4208,"user.codechecked[true].[]",4237)
(4209,"controller.setkeyvalid[].[]",4212)
(4210,"controller.setkeyvalid[].[]",4214)
(4211,"door.getlockstatus[].[]",4216)
(4212,"time +=10",4213)
(4213,"user.keychecked[true].[]",4261)
(4213,"controller.tau=>setkeyvalid.[]",4262)
(4214,"time +=10",4215)
(4215,"user.keychecked[true].[]",4273)
(4215,"controller.tau=>setkeyvalid.[]",4274)
(4216,"user.setstatus[false].[]",4217)
(4217,"time +=20",4218)
(4218,"user.enterkey[].[_3]",5643)
(4218,"user.enterkey[].[]",5644)
(4218,"user.enterkey[].[_10]",5645)
(4219,"door.getlockstatus[].[]",4220)
(4220,"user.setstatus[false].[]",4222)
(4221,"door.getlockstatus[].[]",4224)
(4222,"time +=20",4223)
(4223,"user.enterkey[].[_3]",4353)
(4223,"user.enterkey[].[_8]",4355)
(4223,"user.enterkey[].[]",4357)
(4224,"user.setstatus[false].[]",4226)
(4225,"door.getlockstatus[].[]",4228)
(4226,"time +=20",4227)
(4227,"user.enterkey[].[_3]",4353)
(4227,"user.enterkey[].[]",4355)
(4227,"user.enterkey[].[_10]",4357)
(4228,"user.setstatus[false].[]",4229)
(4229,"time +=20",4230)
(4230,"user.enterkey[].[]",4353)
(4230,"user.enterkey[].[_8]",4355)
(4230,"user.enterkey[].[_10]",4357)
(4231,"controller.tau=>setkeyvalid.[]",4233)
(4232,"user.keychecked[true].[]",4233)
(4232,"controller.setkeyinvalid[].[]",4234)
(4233,"controller.setkeyinvalid[].[]",4235)
(4234,"user.keychecked[true].[]",4235)
(4235,"time +=10",4236)
(4236,"controller.checkcode[3].[]",4285)
(4237,"door.getlockstatus[].[]",4238)
(4238,"user.setstatus[false].[]",4239)
(4239,"time +=20",4240)
(4240,"user.enterkey[].[_3]",5646)
(4240,"user.enterkey[].[_8]",5647)
(4240,"user.enterkey[].[]",5648)
(4241,"controller.setkeyvalid[].[]",4242)
(4242,"time +=10",4243)
(4243,"user.keychecked[true].[]",4294)
(4243,"controller.tau=>setkeyvalid.[]",4295)
(4244,"controller.setkeyvalid[].[]",4246)
(4245,"door.getlockstatus[].[]",4248)
(4246,"time +=10",4247)
(4247,"user.keychecked[true].[]",4314)
(4247,"controller.tau=>setkeyvalid.[]",4315)
(4248,"user.setstatus[false].[]",4249)
(4249,"time +=20",4250)
(4250,"user.enterkey[].[_3]",5649)
(4250,"user.enterkey[].[]",5650)
(4250,"user.enterkey[].[_10]",5651)
(4251,"controller.tau=>setkeyvalid.[]",4253)
(4252,"user.keychecked[true].[]",4253)
(4252,"controller.setkeyinvalid[].[]",4254)
(4253,"controller.setkeyinvalid[].[]",4255)
(4254,"user.keychecked[true].[]",4255)
(4255,"time +=10",4256)
(4256,"controller.checkcode[3].[]",4322)
(4257,"door.getlockstatus[].[]",4258)
(4258,"user.setstatus[false].[]",4259)
(4259,"time +=20",4260)
(4260,"user.enterkey[].[_3]",5652)
(4260,"user.enterkey[].[_8]",5653)
(4260,"user.enterkey[].[]",5654)
(4260,"door.spiedon[].[]",4464)
(4261,"controller.tau=>setkeyvalid.[]",4269)
(4262,"user.keychecked[true].[]",4269)
(4262,"controller.setkeyinvalid[].[]",4270)
(4263,"time +=3",4264)
(4264,"controller.checkkey[2].[]",4286)
(4265,"time +=8",4266)
(4266,"controller.checkkey[2].[]",4328)
(4267,"time +=10",4268)
(4268,"controller.checkkey[2].[]",4335)
(4269,"controller.setkeyinvalid[].[]",4271)
(4270,"user.keychecked[true].[]",4271)
(4271,"time +=10",4272)
(4272,"controller.checkcode[3].[]",4345)
(4273,"controller.tau=>setkeyvalid.[]",4275)
(4274,"user.keychecked[true].[]",4275)
(4274,"controller.setkeyinvalid[].[]",4276)
(4275,"controller.setkeyinvalid[].[]",4277)
(4276,"user.keychecked[true].[]",4277)
(4277,"time +=10",4278)
(4278,"controller.checkcode[3].[]",4334)
(4279,"time +=3",4280)
(4280,"controller.checkkey[2].[]",4293)
(4281,"time +=8",4282)
(4282,"controller.checkkey[2].[]",4333)
(4283,"time +=10",4284)
(4284,"controller.checkkey[2].[]",4352)
(4285,"controller.lockeduser[].[]",4287)
(4286,"controller.setkeyvalid[].[]",4288)
(4287,"controller.setunarmed[].[]",4290)
(4288,"time +=10",4289)
(4289,"user.keychecked[true].[]",4366)
(4289,"controller.tau=>setkeyvalid.[]",4367)
(4290,"door.unlockdoor[].[]",4291)
(4291,"time +=5",4292)
(4292,"controller.setdoorstatus[true, false].[]",4320)
(4293,"controller.setkeyvalid[].[]",4296)
(4294,"controller.tau=>setkeyvalid.[]",4298)
(4295,"user.keychecked[true].[]",4298)
(4295,"controller.setkeyinvalid[].[]",4299)
(4296,"time +=10",4297)
(4297,"user.keychecked[true].[]",4379)
(4297,"controller.tau=>setkeyvalid.[]",4380)
(4298,"controller.setkeyinvalid[].[]",4300)
(4299,"user.keychecked[true].[]",4300)
(4300,"time +=10",4301)
(4301,"controller.checkcode[3].[]",4395)
(4302,"time +=3",4303)
(4303,"controller.checkkey[2].[]",4323)
(4304,"time +=8",4305)
(4305,"controller.checkkey[2].[]",4361)
(4306,"time +=10",4307)
(4307,"controller.checkkey[2].[]",4376)
(4308,"time +=3",4309)
(4309,"controller.checkkey[2].[]",4336)
(4310,"time +=8",4311)
(4311,"controller.checkkey[2].[]",4378)
(4312,"time +=10",4313)
(4313,"controller.checkkey[2].[]",4401)
(4314,"controller.tau=>setkeyvalid.[]",4316)
(4315,"user.keychecked[true].[]",4316)
(4315,"controller.setkeyinvalid[].[]",4317)
(4316,"controller.setkeyinvalid[].[]",4318)
(4317,"user.keychecked[true].[]",4318)
(4318,"time +=10",4319)
(4319,"controller.checkcode[3].[]",4400)
(4320,"time +=5",4321)
(4321,"user.codechecked[true].[]",4362)
(4322,"controller.lockeduser[].[]",4324)
(4323,"controller.setkeyvalid[].[]",4325)
(4324,"controller.setunarmed[].[]",4327)
(4325,"time +=10",4326)
(4326,"user.keychecked[true].[]",4411)
(4326,"controller.tau=>setkeyvalid.[]",4412)
(4327,"door.unlockdoor[].[]",4329)
(4328,"controller.setkeyvalid[].[]",4331)
(4329,"time +=5",4330)
(4330,"controller.setdoorstatus[true, false].[]",4374)
(4331,"time +=10",4332)
(4332,"user.keychecked[true].[]",4409)
(4332,"controller.tau=>setkeyvalid.[]",4410)
(4333,"controller.setkeyvalid[].[]",4337)
(4334,"controller.lockeduser[].[]",4339)
(4335,"controller.setkeyvalid[].[]",4340)
(4336,"controller.setkeyvalid[].[]",4342)
(4337,"time +=9",4338)
(4338,"door.spiedon[].[]",4440)
(4339,"controller.setunarmed[].[]",4344)
(4340,"time +=9",4341)
(4341,"door.spiedon[].[]",4439)
(4342,"time +=9",4343)
(4343,"door.spiedon[].[]",4484)
(4344,"door.unlockdoor[].[]",4346)
(4345,"controller.lockeduser[].[]",4348)
(4346,"time +=5",4347)
(4347,"controller.setdoorstatus[true, false].[]",4381)
(4348,"controller.setunarmed[].[]",4349)
(4349,"door.unlockdoor[].[]",4350)
(4350,"time +=5",4351)
(4351,"controller.setdoorstatus[true, false].[]",4393)
(4352,"controller.setkeyvalid[].[]",4359)
(4353,"time +=3",4354)
(4354,"controller.checkkey[2].[]",4377)
(4355,"time +=7",4356)
(4356,"door.spiedon[].[]",4453)
(4357,"time +=7",4358)
(4358,"door.spiedon[].[]",4478)
(4359,"time +=7",4360)
(4360,"door.spiedon[].[]",4454)
(4361,"controller.setkeyvalid[].[]",4363)
(4362,"door.getlockstatus[].[]",4365)
(4363,"time +=6",4364)
(4364,"door.spiedon[].[]",4465)
(4365,"user.setstatus[false].[]",4368)
(4366,"controller.tau=>setkeyvalid.[]",4370)
(4367,"user.keychecked[true].[]",4370)
(4367,"controller.setkeyinvalid[].[]",4371)
(4368,"time +=6",4369)
(4369,"door.spiedon[].[]",4451)
(4370,"controller.setkeyinvalid[].[]",4372)
(4371,"user.keychecked[true].[]",4372)
(4372,"time +=6",4373)
(4373,"door.spiedon[].[]",4441)
(4374,"time +=5",4375)
(4375,"user.codechecked[true].[]",4408)
(4376,"controller.setkeyvalid[].[]",4385)
(4377,"controller.setkeyvalid[].[]",4389)
(4378,"controller.setkeyvalid[].[]",4391)
(4379,"controller.tau=>setkeyvalid.[]",4383)
(4380,"user.keychecked[true].[]",4383)
(4380,"controller.setkeyinvalid[].[]",4384)
(4381,"time +=4",4382)
(4382,"door.spiedon[].[]",4428)
(4383,"controller.setkeyinvalid[].[]",4387)
(4384,"user.keychecked[true].[]",4387)
(4385,"time +=4",4386)
(4386,"door.spiedon[].[]",4463)
(4387,"time +=4",4388)
(4388,"door.spiedon[].[]",4426)
(4389,"time +=4",4390)
(4390,"door.spiedon[].[]",4471)
(4391,"time +=4",4392)
(4392,"door.spiedon[].[]",4475)
(4393,"time +=4",4394)
(4394,"door.spiedon[].[]",4481)
(4395,"controller.lockeduser[].[]",4396)
(4396,"controller.setunarmed[].[]",4397)
(4397,"door.unlockdoor[].[]",4398)
(4398,"time +=4",4399)
(4399,"door.spiedon[].[]",4472)
(4400,"controller.lockeduser[].[]",4402)
(4401,"controller.setkeyvalid[].[]",4403)
(4402,"controller.setunarmed[].[]",4405)
(4403,"time +=2",4404)
(4404,"door.spiedon[].[]",4442)
(4405,"door.unlockdoor[].[]",4406)
(4406,"time +=2",4407)
(4407,"door.spiedon[].[]",4425)
(4408,"door.getlockstatus[].[]",4413)
(4409,"controller.tau=>setkeyvalid.[]",4420)
(4410,"user.keychecked[true].[]",4420)
(4410,"controller.setkeyinvalid[].[]",4421)
(4411,"controller.tau=>setkeyvalid.[]",4414)
(4412,"user.keychecked[true].[]",4414)
(4412,"controller.setkeyinvalid[].[]",4415)
(4413,"user.setstatus[false].[]",4416)
(4414,"controller.setkeyinvalid[].[]",4418)
(4415,"user.keychecked[true].[]",4418)
(4416,"time +=1",4417)
(4417,"door.spiedon[].[]",4424)
(4418,"time +=1",4419)
(4419,"door.spiedon[].[]",4452)
(4420,"controller.setkeyinvalid[].[]",4422)
(4421,"user.keychecked[true].[]",4422)
(4422,"time +=1",4423)
(4423,"door.spiedon[].[]",4427)
(4424,"intruder.spyingdoor[false].[]",4429)
(4425,"intruder.spyingdoor[false].[]",4431)
(4426,"intruder.spyingdoor[false].[]",4433)
(4427,"intruder.spyingdoor[false].[]",4435)
(4428,"intruder.spyingdoor[false].[]",4437)
(4429,"time +=19",4430)
(4430,"user.enterkey[].[_3]",5661)
(4430,"user.enterkey[].[]",5662)
(4430,"user.enterkey[].[_10]",5663)
(4431,"time +=3",4432)
(4432,"controller.setdoorstatus[true, false].[]",4523)
(4433,"time +=6",4434)
(4434,"controller.checkcode[3].[]",4542)
(4435,"time +=9",4436)
(4436,"controller.checkcode[3].[]",4579)
(4437,"time +=1",4438)
(4438,"user.codechecked[true].[]",4489)
(4439,"intruder.spyingdoor[false].[]",4443)
(4440,"intruder.spyingdoor[false].[]",4445)
(4441,"intruder.spyingdoor[false].[]",4447)
(4442,"intruder.spyingdoor[false].[]",4449)
(4443,"time +=1",4444)
(4444,"user.keychecked[true].[]",4490)
(4444,"controller.tau=>setkeyvalid.[]",4491)
(4445,"time +=1",4446)
(4446,"user.keychecked[true].[]",4492)
(4446,"controller.tau=>setkeyvalid.[]",4493)
(4447,"time +=4",4448)
(4448,"controller.checkcode[3].[]",4531)
(4449,"time +=8",4450)
(4450,"user.keychecked[true].[]",4570)
(4450,"controller.tau=>setkeyvalid.[]",4571)
(4451,"intruder.spyingdoor[false].[]",4455)
(4452,"intruder.spyingdoor[false].[]",4457)
(4453,"intruder.spyingdoor[false].[]",4459)
(4454,"intruder.spyingdoor[false].[]",4461)
(4455,"time +=14",4456)
(4456,"user.enterkey[].[]",4631)
(4456,"user.enterkey[].[_8]",4633)
(4456,"user.enterkey[].[_10]",4635)
(4457,"time +=9",4458)
(4458,"controller.checkcode[3].[]",4582)
(4459,"time +=1",4460)
(4460,"controller.checkkey[2].[]",4507)
(4461,"time +=3",4462)
(4462,"user.keychecked[true].[]",4521)
(4462,"controller.tau=>setkeyvalid.[]",4522)
(4463,"intruder.spyingdoor[false].[]",4466)
(4464,"user.enterkey[].[_3]",5655)
(4464,"user.enterkey[].[_8]",5656)
(4464,"user.enterkey[].[]",5657)
(4464,"intruder.spyingdoor[false].[]",4468)
(4465,"intruder.spyingdoor[false].[]",4469)
(4466,"time +=6",4467)
(4467,"user.keychecked[true].[]",4557)
(4467,"controller.tau=>setkeyvalid.[]",4558)
(4468,"user.enterkey[].[_3]",5658)
(4468,"user.enterkey[].[_8]",5659)
(4468,"user.enterkey[].[]",5660)
(4469,"time +=4",4470)
(4470,"user.keychecked[true].[]",4532)
(4470,"controller.tau=>setkeyvalid.[]",4533)
(4471,"intruder.spyingdoor[false].[]",4473)
(4472,"intruder.spyingdoor[false].[]",4476)
(4473,"time +=6",4474)
(4474,"user.keychecked[true].[]",4559)
(4474,"controller.tau=>setkeyvalid.[]",4560)
(4475,"intruder.spyingdoor[false].[]",4479)
(4476,"time +=1",4477)
(4477,"controller.setdoorstatus[true, false].[]",4508)
(4478,"intruder.spyingdoor[false].[]",4482)
(4479,"time +=6",4480)
(4480,"user.keychecked[true].[]",4544)
(4480,"controller.tau=>setkeyvalid.[]",4545)
(4481,"intruder.spyingdoor[false].[]",4485)
(4482,"time +=3",4483)
(4483,"controller.checkkey[2].[]",4520)
(4484,"intruder.spyingdoor[false].[]",4487)
(4485,"time +=1",4486)
(4486,"user.codechecked[true].[]",4516)
(4487,"time +=1",4488)
(4488,"user.keychecked[true].[]",4494)
(4488,"controller.tau=>setkeyvalid.[]",4495)
(4489,"door.getlockstatus[].[]",4496)
(4490,"controller.tau=>setkeyvalid.[]",4512)
(4491,"user.keychecked[true].[]",4512)
(4491,"controller.setkeyinvalid[].[]",4513)
(4492,"controller.tau=>setkeyvalid.[]",4497)
(4493,"user.keychecked[true].[]",4497)
(4493,"controller.setkeyinvalid[].[]",4498)
(4494,"controller.tau=>setkeyvalid.[]",4499)
(4495,"user.keychecked[true].[]",4499)
(4495,"controller.setkeyinvalid[].[]",4500)
(4496,"user.setstatus[false].[]",4501)
(4497,"controller.setkeyinvalid[].[]",4503)
(4498,"user.keychecked[true].[]",4503)
(4499,"controller.setkeyinvalid[].[]",4505)
(4500,"user.keychecked[true].[]",4505)
(4501,"time +=20",4502)
(4502,"user.enterkey[].[_3]",4689)
(4502,"user.enterkey[].[_8]",4691)
(4502,"user.enterkey[].[]",4693)
(4503,"time +=10",4504)
(4504,"controller.checkcode[3].[]",4603)
(4505,"time +=10",4506)
(4506,"controller.checkcode[3].[]",4602)
(4507,"controller.setkeyvalid[].[]",4510)
(4508,"time +=5",4509)
(4509,"user.codechecked[true].[]",4543)
(4510,"time +=10",4511)
(4511,"user.keychecked[true].[]",4591)
(4511,"controller.tau=>setkeyvalid.[]",4592)
(4512,"controller.setkeyinvalid[].[]",4514)
(4513,"user.keychecked[true].[]",4514)
(4514,"time +=10",4515)
(4515,"controller.checkcode[3].[]",4593)
(4516,"door.getlockstatus[].[]",4517)
(4517,"user.setstatus[false].[]",4518)
(4518,"time +=20",4519)
(4519,"user.enterkey[].[]",4689)
(4519,"user.enterkey[].[_8]",4691)
(4519,"user.enterkey[].[_10]",4693)
(4520,"controller.setkeyvalid[].[]",4525)
(4521,"controller.tau=>setkeyvalid.[]",4527)
(4522,"user.keychecked[true].[]",4527)
(4522,"controller.setkeyinvalid[].[]",4528)
(4523,"time +=5",4524)
(4524,"user.codechecked[true].[]",4569)
(4525,"time +=10",4526)
(4526,"user.keychecked[true].[]",4614)
(4526,"controller.tau=>setkeyvalid.[]",4615)
(4527,"controller.setkeyinvalid[].[]",4529)
(4528,"user.keychecked[true].[]",4529)
(4529,"time +=10",4530)
(4530,"controller.checkcode[3].[]",4616)
(4531,"controller.lockeduser[].[]",4534)
(4532,"controller.tau=>setkeyvalid.[]",4535)
(4533,"user.keychecked[true].[]",4535)
(4533,"controller.setkeyinvalid[].[]",4536)
(4534,"controller.setunarmed[].[]",4537)
(4535,"controller.setkeyinvalid[].[]",4538)
(4536,"user.keychecked[true].[]",4538)
(4537,"door.unlockdoor[].[]",4540)
(4538,"time +=10",4539)
(4539,"controller.checkcode[3].[]",4629)
(4540,"time +=5",4541)
(4541,"controller.setdoorstatus[true, false].[]",4580)
(4542,"controller.lockeduser[].[]",4546)
(4543,"door.getlockstatus[].[]",4547)
(4544,"controller.tau=>setkeyvalid.[]",4548)
(4545,"user.keychecked[true].[]",4548)
(4545,"controller.setkeyinvalid[].[]",4549)
(4546,"controller.setunarmed[].[]",4550)
(4547,"user.setstatus[false].[]",4551)
(4548,"controller.setkeyinvalid[].[]",4553)
(4549,"user.keychecked[true].[]",4553)
(4550,"door.unlockdoor[].[]",4555)
(4551,"time +=20",4552)
(4552,"user.enterkey[].[_3]",5664)
(4552,"user.enterkey[].[]",5665)
(4552,"user.enterkey[].[_10]",5666)
(4553,"time +=10",4554)
(4554,"controller.checkcode[3].[]",4655)
(4555,"time +=5",4556)
(4556,"controller.setdoorstatus[true, false].[]",4594)
(4557,"controller.tau=>setkeyvalid.[]",4561)
(4558,"user.keychecked[true].[]",4561)
(4558,"controller.setkeyinvalid[].[]",4562)
(4559,"controller.tau=>setkeyvalid.[]",4563)
(4560,"user.keychecked[true].[]",4563)
(4560,"controller.setkeyinvalid[].[]",4564)
(4561,"controller.setkeyinvalid[].[]",4565)
(4562,"user.keychecked[true].[]",4565)
(4563,"controller.setkeyinvalid[].[]",4567)
(4564,"user.keychecked[true].[]",4567)
(4565,"time +=10",4566)
(4566,"controller.checkcode[3].[]",4644)
(4567,"time +=10",4568)
(4568,"controller.checkcode[3].[]",4661)
(4569,"door.getlockstatus[].[]",4572)
(4570,"controller.tau=>setkeyvalid.[]",4573)
(4571,"user.keychecked[true].[]",4573)
(4571,"controller.setkeyinvalid[].[]",4574)
(4572,"user.setstatus[false].[]",4575)
(4573,"controller.setkeyinvalid[].[]",4577)
(4574,"user.keychecked[true].[]",4577)
(4575,"time +=20",4576)
(4576,"user.enterkey[].[_3]",5667)
(4576,"user.enterkey[].[_8]",5668)
(4576,"user.enterkey[].[]",5669)
(4577,"time +=10",4578)
(4578,"controller.checkcode[3].[]",4674)
(4579,"controller.lockeduser[].[]",4583)
(4580,"time +=5",4581)
(4581,"user.codechecked[true].[]",4630)
(4582,"controller.lockeduser[].[]",4584)
(4583,"controller.setunarmed[].[]",4585)
(4584,"controller.setunarmed[].[]",4586)
(4585,"door.unlockdoor[].[]",4587)
(4586,"door.unlockdoor[].[]",4589)
(4587,"time +=5",4588)
(4588,"controller.setdoorstatus[true, false].[]",4625)
(4589,"time +=5",4590)
(4590,"controller.setdoorstatus[true, false].[]",4627)
(4591,"controller.tau=>setkeyvalid.[]",4596)
(4592,"user.keychecked[true].[]",4596)
(4592,"controller.setkeyinvalid[].[]",4597)
(4593,"controller.lockeduser[].[]",4598)
(4594,"time +=5",4595)
(4595,"user.codechecked[true].[]",4650)
(4596,"controller.setkeyinvalid[].[]",4599)
(4597,"user.keychecked[true].[]",4599)
(4598,"controller.setunarmed[].[]",4601)
(4599,"time +=10",4600)
(4600,"controller.checkcode[3].[]",4699)
(4601,"door.unlockdoor[].[]",4604)
(4602,"controller.lockeduser[].[]",4606)
(4603,"controller.lockeduser[].[]",4607)
(4604,"time +=5",4605)
(4605,"controller.setdoorstatus[true, false].[]",4645)
(4606,"controller.setunarmed[].[]",4608)
(4607,"controller.setunarmed[].[]",4609)
(4608,"door.unlockdoor[].[]",4610)
(4609,"door.unlockdoor[].[]",4612)
(4610,"time +=5",4611)
(4611,"controller.setdoorstatus[true, false].[]",4651)
(4612,"time +=5",4613)
(4613,"controller.setdoorstatus[true, false].[]",4647)
(4614,"controller.tau=>setkeyvalid.[]",4617)
(4615,"user.keychecked[true].[]",4617)
(4615,"controller.setkeyinvalid[].[]",4618)
(4616,"controller.lockeduser[].[]",4619)
(4617,"controller.setkeyinvalid[].[]",4620)
(4618,"user.keychecked[true].[]",4620)
(4619,"controller.setunarmed[].[]",4622)
(4620,"time +=10",4621)
(4621,"controller.checkcode[3].[]",4721)
(4622,"door.unlockdoor[].[]",4623)
(4623,"time +=5",4624)
(4624,"controller.setdoorstatus[true, false].[]",4672)
(4625,"time +=5",4626)
(4626,"user.codechecked[true].[]",4680)
(4627,"time +=5",4628)
(4628,"user.codechecked[true].[]",4679)
(4629,"controller.lockeduser[].[]",4637)
(4630,"door.getlockstatus[].[]",4638)
(4631,"time +=3",4632)
(4632,"controller.checkkey[2].[]",4669)
(4633,"time +=8",4634)
(4634,"controller.checkkey[2].[]",4718)
(4635,"time +=10",4636)
(4636,"controller.checkkey[2].[]",4733)
(4637,"controller.setunarmed[].[]",4639)
(4638,"user.setstatus[false].[]",4640)
(4639,"door.unlockdoor[].[]",4642)
(4640,"time +=16",4641)
(4641,"door.spiedon[].[]",4789)
(4642,"time +=5",4643)
(4643,"controller.setdoorstatus[true, false].[]",4681)
(4644,"controller.lockeduser[].[]",4649)
(4645,"time +=5",4646)
(4646,"user.codechecked[true].[]",4700)
(4647,"time +=5",4648)
(4648,"user.codechecked[true].[]",4705)
(4649,"controller.setunarmed[].[]",4653)
(4650,"door.getlockstatus[].[]",4654)
(4651,"time +=5",4652)
(4652,"user.codechecked[true].[]",4712)
(4653,"door.unlockdoor[].[]",4656)
(4654,"user.setstatus[false].[]",4658)
(4655,"controller.lockeduser[].[]",4660)
(4656,"time +=5",4657)
(4657,"controller.setdoorstatus[true, false].[]",4701)
(4658,"time +=14",4659)
(4659,"door.spiedon[].[]",4802)
(4660,"controller.setunarmed[].[]",4662)
(4661,"controller.lockeduser[].[]",4663)
(4662,"door.unlockdoor[].[]",4664)
(4663,"controller.setunarmed[].[]",4666)
(4664,"time +=5",4665)
(4665,"controller.setdoorstatus[true, false].[]",4695)
(4666,"door.unlockdoor[].[]",4667)
(4667,"time +=5",4668)
(4668,"controller.setdoorstatus[true, false].[]",4697)
(4669,"controller.setkeyvalid[].[]",4670)
(4670,"time +=10",4671)
(4671,"user.keychecked[true].[]",4756)
(4671,"controller.tau=>setkeyvalid.[]",4757)
(4672,"time +=5",4673)
(4673,"user.codechecked[true].[]",4722)
(4674,"controller.lockeduser[].[]",4675)
(4675,"controller.setunarmed[].[]",4676)
(4676,"door.unlockdoor[].[]",4677)
(4677,"time +=5",4678)
(4678,"controller.setdoorstatus[true, false].[]",4723)
(4679,"door.getlockstatus[].[]",4683)
(4680,"door.getlockstatus[].[]",4684)
(4681,"time +=5",4682)
(4682,"user.codechecked[true].[]",4734)
(4683,"user.setstatus[false].[]",4685)
(4684,"user.setstatus[false].[]",4687)
(4685,"time +=11",4686)
(4686,"door.spiedon[].[]",4786)
(4687,"time +=11",4688)
(4688,"door.spiedon[].[]",4798)
(4689,"time +=3",4690)
(4690,"controller.checkkey[2].[]",4732)
(4691,"time +=8",4692)
(4692,"controller.checkkey[2].[]",4768)
(4693,"time +=9",4694)
(4694,"door.spiedon[].[]",4787)
(4695,"time +=5",4696)
(4696,"user.codechecked[true].[]",4742)
(4697,"time +=5",4698)
(4698,"user.codechecked[true].[]",4747)
(4699,"controller.lockeduser[].[]",4703)
(4700,"door.getlockstatus[].[]",4704)
(4701,"time +=5",4702)
(4702,"user.codechecked[true].[]",4746)
(4703,"controller.setunarmed[].[]",4706)
(4704,"user.setstatus[false].[]",4707)
(4705,"door.getlockstatus[].[]",4709)
(4706,"door.unlockdoor[].[]",4710)
(4707,"time +=9",4708)
(4708,"door.spiedon[].[]",4813)
(4709,"user.setstatus[false].[]",4713)
(4710,"time +=5",4711)
(4711,"controller.setdoorstatus[true, false].[]",4743)
(4712,"door.getlockstatus[].[]",4715)
(4713,"time +=9",4714)
(4714,"door.spiedon[].[]",4800)
(4715,"user.setstatus[false].[]",4716)
(4716,"time +=9",4717)
(4717,"door.spiedon[].[]",4788)
(4718,"controller.setkeyvalid[].[]",4719)
(4719,"time +=8",4720)
(4720,"door.spiedon[].[]",4823)
(4721,"controller.lockeduser[].[]",4725)
(4722,"door.getlockstatus[].[]",4726)
(4723,"time +=5",4724)
(4724,"user.codechecked[true].[]",4764)
(4725,"controller.setunarmed[].[]",4727)
(4726,"user.setstatus[false].[]",4728)
(4727,"door.unlockdoor[].[]",4730)
(4728,"time +=7",4729)
(4729,"door.spiedon[].[]",4774)
(4730,"time +=5",4731)
(4731,"controller.setdoorstatus[true, false].[]",4762)
(4732,"controller.setkeyvalid[].[]",4735)
(4733,"controller.setkeyvalid[].[]",4737)
(4734,"door.getlockstatus[].[]",4739)
(4735,"time +=6",4736)
(4736,"door.spiedon[].[]",4822)
(4737,"time +=6",4738)
(4738,"door.spiedon[].[]",4771)
(4739,"user.setstatus[false].[]",4740)
(4740,"time +=6",4741)
(4741,"door.spiedon[].[]",4831)
(4742,"door.getlockstatus[].[]",4745)
(4743,"time +=4",4744)
(4744,"door.spiedon[].[]",4824)
(4745,"user.setstatus[false].[]",4748)
(4746,"door.getlockstatus[].[]",4750)
(4747,"door.getlockstatus[].[]",4751)
(4748,"time +=4",4749)
(4749,"door.spiedon[].[]",4801)
(4750,"user.setstatus[false].[]",4752)
(4751,"user.setstatus[false].[]",4754)
(4752,"time +=4",4753)
(4753,"door.spiedon[].[]",4772)
(4754,"time +=4",4755)
(4755,"door.spiedon[].[]",4799)
(4756,"controller.tau=>setkeyvalid.[]",4758)
(4757,"user.keychecked[true].[]",4758)
(4757,"controller.setkeyinvalid[].[]",4759)
(4758,"controller.setkeyinvalid[].[]",4760)
(4759,"user.keychecked[true].[]",4760)
(4760,"time +=3",4761)
(4761,"door.spiedon[].[]",4814)
(4762,"time +=2",4763)
(4763,"door.spiedon[].[]",4815)
(4764,"door.getlockstatus[].[]",4765)
(4765,"user.setstatus[false].[]",4766)
(4766,"time +=2",4767)
(4767,"door.spiedon[].[]",4773)
(4768,"controller.setkeyvalid[].[]",4769)
(4769,"time +=1",4770)
(4770,"door.spiedon[].[]",4775)
(4771,"intruder.spyingdoor[false].[]",4776)
(4772,"intruder.spyingdoor[false].[]",4778)
(4773,"intruder.spyingdoor[false].[]",4780)
(4774,"intruder.spyingdoor[false].[]",4782)
(4775,"intruder.spyingdoor[false].[]",4784)
(4776,"time +=4",4777)
(4777,"user.keychecked[true].[]",4851)
(4777,"controller.tau=>setkeyvalid.[]",4852)
(4778,"time +=16",4779)
(4779,"user.enterkey[].[_3]",4913)
(4779,"user.enterkey[].[_8]",4915)
(4779,"user.enterkey[].[]",4917)
(4780,"time +=18",4781)
(4781,"user.enterkey[].[_3]",5682)
(4781,"user.enterkey[].[_8]",5683)
(4781,"user.enterkey[].[]",5684)
(4782,"time +=13",4783)
(4783,"user.enterkey[].[_3]",5676)
(4783,"user.enterkey[].[_8]",5677)
(4783,"user.enterkey[].[]",5678)
(4784,"time +=9",4785)
(4785,"user.keychecked[true].[]",4874)
(4785,"controller.tau=>setkeyvalid.[]",4875)
(4786,"intruder.spyingdoor[false].[]",4790)
(4787,"intruder.spyingdoor[false].[]",4792)
(4788,"intruder.spyingdoor[false].[]",4794)
(4789,"intruder.spyingdoor[false].[]",4796)
(4790,"time +=9",4791)
(4791,"user.enterkey[].[]",4868)
(4791,"user.enterkey[].[_8]",4870)
(4791,"user.enterkey[].[_10]",4872)
(4792,"time +=1",4793)
(4793,"controller.checkkey[2].[]",4834)
(4794,"time +=11",4795)
(4795,"user.enterkey[].[]",4882)
(4795,"user.enterkey[].[_8]",4884)
(4795,"user.enterkey[].[_10]",4886)
(4796,"time +=4",4797)
(4797,"user.enterkey[].[]",5670)
(4797,"user.enterkey[].[_8]",5671)
(4797,"user.enterkey[].[_10]",5672)
(4798,"intruder.spyingdoor[false].[]",4803)
(4799,"intruder.spyingdoor[false].[]",4805)
(4800,"intruder.spyingdoor[false].[]",4807)
(4801,"intruder.spyingdoor[false].[]",4809)
(4802,"intruder.spyingdoor[false].[]",4811)
(4803,"time +=9",4804)
(4804,"user.enterkey[].[_3]",4868)
(4804,"user.enterkey[].[]",4870)
(4804,"user.enterkey[].[_10]",4872)
(4805,"time +=16",4806)
(4806,"user.enterkey[].[]",4913)
(4806,"user.enterkey[].[_8]",4915)
(4806,"user.enterkey[].[_10]",4917)
(4807,"time +=11",4808)
(4808,"user.enterkey[].[_3]",4882)
(4808,"user.enterkey[].[]",4884)
(4808,"user.enterkey[].[_10]",4886)
(4809,"time +=16",4810)
(4810,"user.enterkey[].[_3]",4913)
(4810,"user.enterkey[].[]",4915)
(4810,"user.enterkey[].[_10]",4917)
(4811,"time +=6",4812)
(4812,"user.enterkey[].[]",5673)
(4812,"user.enterkey[].[_8]",5674)
(4812,"user.enterkey[].[_10]",5675)
(4813,"intruder.spyingdoor[false].[]",4816)
(4814,"intruder.spyingdoor[false].[]",4818)
(4815,"intruder.spyingdoor[false].[]",4820)
(4816,"time +=11",4817)
(4817,"user.enterkey[].[_3]",4882)
(4817,"user.enterkey[].[_8]",4884)
(4817,"user.enterkey[].[]",4886)
(4818,"time +=7",4819)
(4819,"controller.checkcode[3].[]",4863)
(4820,"time +=3",4821)
(4821,"user.codechecked[true].[]",4847)
(4822,"intruder.spyingdoor[false].[]",4825)
(4823,"intruder.spyingdoor[false].[]",4827)
(4824,"intruder.spyingdoor[false].[]",4829)
(4825,"time +=4",4826)
(4826,"user.keychecked[true].[]",4853)
(4826,"controller.tau=>setkeyvalid.[]",4854)
(4827,"time +=2",4828)
(4828,"user.keychecked[true].[]",4841)
(4828,"controller.tau=>setkeyvalid.[]",4842)
(4829,"time +=1",4830)
(4830,"user.codechecked[true].[]",4835)
(4831,"intruder.spyingdoor[false].[]",4832)
(4832,"time +=14",4833)
(4833,"user.enterkey[].[_3]",5679)
(4833,"user.enterkey[].[]",5680)
(4833,"user.enterkey[].[_10]",5681)
(4834,"controller.setkeyvalid[].[]",4836)
(4835,"door.getlockstatus[].[]",4838)
(4836,"time +=10",4837)
(4837,"user.keychecked[true].[]",4880)
(4837,"controller.tau=>setkeyvalid.[]",4881)
(4838,"user.setstatus[false].[]",4839)
(4839,"time +=20",4840)
(4840,"user.enterkey[].[_3]",5685)
(4840,"user.enterkey[].[]",5686)
(4840,"user.enterkey[].[_10]",5687)
(4841,"controller.tau=>setkeyvalid.[]",4843)
(4842,"user.keychecked[true].[]",4843)
(4842,"controller.setkeyinvalid[].[]",4844)
(4843,"controller.setkeyinvalid[].[]",4845)
(4844,"user.keychecked[true].[]",4845)
(4845,"time +=10",4846)
(4846,"controller.checkcode[3].[]",4892)
(4847,"door.getlockstatus[].[]",4848)
(4848,"user.setstatus[false].[]",4849)
(4849,"time +=20",4850)
(4850,"user.enterkey[].[_3]",5688)
(4850,"user.enterkey[].[_8]",5689)
(4850,"user.enterkey[].[]",5690)
(4851,"controller.tau=>setkeyvalid.[]",4855)
(4852,"user.keychecked[true].[]",4855)
(4852,"controller.setkeyinvalid[].[]",4856)
(4853,"controller.tau=>setkeyvalid.[]",4857)
(4854,"user.keychecked[true].[]",4857)
(4854,"controller.setkeyinvalid[].[]",4858)
(4855,"controller.setkeyinvalid[].[]",4859)
(4856,"user.keychecked[true].[]",4859)
(4857,"controller.setkeyinvalid[].[]",4861)
(4858,"user.keychecked[true].[]",4861)
(4859,"time +=10",4860)
(4860,"controller.checkcode[3].[]",4902)
(4861,"time +=10",4862)
(4862,"controller.checkcode[3].[]",4900)
(4863,"controller.lockeduser[].[]",4864)
(4864,"controller.setarmed[].[]",4865)
(4865,"door.lockdoor[].[]",4866)
(4866,"time +=10",4867)
(4867,"user.codechecked[true].[]",4919)
(4868,"time +=3",4869)
(4869,"controller.checkkey[2].[]",4893)
(4870,"time +=8",4871)
(4871,"controller.checkkey[2].[]",4920)
(4872,"time +=10",4873)
(4873,"controller.checkkey[2].[]",4928)
(4874,"controller.tau=>setkeyvalid.[]",4876)
(4875,"user.keychecked[true].[]",4876)
(4875,"controller.setkeyinvalid[].[]",4877)
(4876,"controller.setkeyinvalid[].[]",4878)
(4877,"user.keychecked[true].[]",4878)
(4878,"time +=10",4879)
(4879,"controller.checkcode[3].[]",4927)
(4880,"controller.tau=>setkeyvalid.[]",4888)
(4881,"user.keychecked[true].[]",4888)
(4881,"controller.setkeyinvalid[].[]",4889)
(4882,"time +=3",4883)
(4883,"controller.checkkey[2].[]",4901)
(4884,"time +=8",4885)
(4885,"controller.checkkey[2].[]",4926)
(4886,"time +=10",4887)
(4887,"controller.checkkey[2].[]",4941)
(4888,"controller.setkeyinvalid[].[]",4890)
(4889,"user.keychecked[true].[]",4890)
(4890,"time +=10",4891)
(4891,"controller.checkcode[3].[]",4940)
(4892,"controller.lockeduser[].[]",4894)
(4893,"controller.setkeyvalid[].[]",4895)
(4894,"controller.setarmed[].[]",4897)
(4895,"time +=10",4896)
(4896,"user.keychecked[true].[]",4949)
(4896,"controller.tau=>setkeyvalid.[]",4950)
(4897,"door.lockdoor[].[]",4898)
(4898,"time +=10",4899)
(4899,"user.codechecked[true].[]",4948)
(4900,"controller.lockeduser[].[]",4903)
(4901,"controller.setkeyvalid[].[]",4904)
(4902,"controller.lockeduser[].[]",4906)
(4903,"controller.setarmed[].[]",4907)
(4904,"time +=10",4905)
(4905,"user.keychecked[true].[]",4967)
(4905,"controller.tau=>setkeyvalid.[]",4968)
(4906,"controller.setarmed[].[]",4908)
(4907,"door.lockdoor[].[]",4909)
(4908,"door.lockdoor[].[]",4911)
(4909,"time +=10",4910)
(4910,"user.codechecked[true].[]",4959)
(4911,"time +=10",4912)
(4912,"user.codechecked[true].[]",4958)
(4913,"time +=3",4914)
(4914,"controller.checkkey[2].[]",4929)
(4915,"time +=8",4916)
(4916,"controller.checkkey[2].[]",4966)
(4917,"time +=10",4918)
(4918,"controller.checkkey[2].[]",4975)
(4919,"door.getlockstatus[].[]",4921)
(4920,"controller.setkeyvalid[].[]",4922)
(4921,"user.setstatus[false].[]",4924)
(4922,"time +=10",4923)
(4923,"user.keychecked[true].[]",4978)
(4923,"controller.tau=>setkeyvalid.[]",4979)
(4924,"time +=13",4925)
(4925,"door.spiedon[].[]",5023)
(4926,"controller.setkeyvalid[].[]",4930)
(4927,"controller.lockeduser[].[]",4932)
(4928,"controller.setkeyvalid[].[]",4933)
(4929,"controller.setkeyvalid[].[]",4935)
(4930,"time +=10",4931)
(4931,"user.keychecked[true].[]",4991)
(4931,"controller.tau=>setkeyvalid.[]",4992)
(4932,"controller.setarmed[].[]",4937)
(4933,"time +=10",4934)
(4934,"user.keychecked[true].[]",4989)
(4934,"controller.tau=>setkeyvalid.[]",4990)
(4935,"time +=10",4936)
(4936,"user.keychecked[true].[]",4985)
(4936,"controller.tau=>setkeyvalid.[]",4986)
(4937,"door.lockdoor[].[]",4938)
(4938,"time +=10",4939)
(4939,"user.codechecked[true].[]",4984)
(4940,"controller.lockeduser[].[]",4942)
(4941,"controller.setkeyvalid[].[]",4943)
(4942,"controller.setarmed[].[]",4945)
(4943,"time +=9",4944)
(4944,"door.spiedon[].[]",5021)
(4945,"door.lockdoor[].[]",4946)
(4946,"time +=9",4947)
(4947,"door.spiedon[].[]",5030)
(4948,"door.getlockstatus[].[]",4951)
(4949,"controller.tau=>setkeyvalid.[]",4952)
(4950,"user.keychecked[true].[]",4952)
(4950,"controller.setkeyinvalid[].[]",4953)
(4951,"user.setstatus[false].[]",4954)
(4952,"controller.setkeyinvalid[].[]",4956)
(4953,"user.keychecked[true].[]",4956)
(4954,"time +=8",4955)
(4955,"door.spiedon[].[]",5022)
(4956,"time +=8",4957)
(4957,"door.spiedon[].[]",5006)
(4958,"door.getlockstatus[].[]",4960)
(4959,"door.getlockstatus[].[]",4961)
(4960,"user.setstatus[false].[]",4962)
(4961,"user.setstatus[false].[]",4964)
(4962,"time +=6",4963)
(4963,"door.spiedon[].[]",5048)
(4964,"time +=6",4965)
(4965,"door.spiedon[].[]",5042)
(4966,"controller.setkeyvalid[].[]",4969)
(4967,"controller.tau=>setkeyvalid.[]",4971)
(4968,"user.keychecked[true].[]",4971)
(4968,"controller.setkeyinvalid[].[]",4972)
(4969,"time +=6",4970)
(4970,"door.spiedon[].[]",5037)
(4971,"controller.setkeyinvalid[].[]",4973)
(4972,"user.keychecked[true].[]",4973)
(4973,"time +=6",4974)
(4974,"door.spiedon[].[]",5009)
(4975,"controller.setkeyvalid[].[]",4976)
(4976,"time +=4",4977)
(4977,"door.spiedon[].[]",5031)
(4978,"controller.tau=>setkeyvalid.[]",4980)
(4979,"user.keychecked[true].[]",4980)
(4979,"controller.setkeyinvalid[].[]",4981)
(4980,"controller.setkeyinvalid[].[]",4982)
(4981,"user.keychecked[true].[]",4982)
(4982,"time +=3",4983)
(4983,"door.spiedon[].[]",5007)
(4984,"door.getlockstatus[].[]",4987)
(4985,"controller.tau=>setkeyvalid.[]",4988)
(4986,"user.keychecked[true].[]",4988)
(4986,"controller.setkeyinvalid[].[]",4993)
(4987,"user.setstatus[false].[]",4994)
(4988,"controller.setkeyinvalid[].[]",4996)
(4989,"controller.tau=>setkeyvalid.[]",5000)
(4990,"user.keychecked[true].[]",5000)
(4990,"controller.setkeyinvalid[].[]",5005)
(4991,"controller.tau=>setkeyvalid.[]",4998)
(4992,"user.keychecked[true].[]",4998)
(4992,"controller.setkeyinvalid[].[]",4999)
(4993,"user.keychecked[true].[]",4996)
(4994,"time +=1",4995)
(4995,"door.spiedon[].[]",5036)
(4996,"time +=1",4997)
(4997,"door.spiedon[].[]",5010)
(4998,"controller.setkeyinvalid[].[]",5001)
(4999,"user.keychecked[true].[]",5001)
(5000,"controller.setkeyinvalid[].[]",5003)
(5001,"time +=1",5002)
(5002,"door.spiedon[].[]",5043)
(5003,"time +=1",5004)
(5004,"door.spiedon[].[]",5008)
(5005,"user.keychecked[true].[]",5003)
(5006,"intruder.spyingdoor[false].[]",5011)
(5007,"intruder.spyingdoor[false].[]",5013)
(5008,"intruder.spyingdoor[false].[]",5015)
(5009,"intruder.spyingdoor[false].[]",5017)
(5010,"intruder.spyingdoor[false].[]",5019)
(5011,"time +=2",5012)
(5012,"controller.checkcode[3].[]",5061)
(5013,"time +=7",5014)
(5014,"controller.checkcode[3].[]",5083)
(5015,"time +=9",5016)
(5016,"controller.checkcode[3].[]",5095)
(5017,"time +=4",5018)
(5018,"controller.checkcode[3].[]",5066)
(5019,"time +=9",5020)
(5020,"controller.checkcode[3].[]",5094)
(5021,"intruder.spyingdoor[false].[]",5024)
(5022,"intruder.spyingdoor[false].[]",5026)
(5023,"intruder.spyingdoor[false].[]",5028)
(5024,"time +=1",5025)
(5025,"user.keychecked[true].[]",5051)
(5025,"controller.tau=>setkeyvalid.[]",5052)
(5026,"time +=12",5027)
(5027,"user.enterkey[].[_3]",5691)
(5027,"user.enterkey[].[]",5692)
(5027,"user.enterkey[].[_10]",5693)
(5028,"time +=7",5029)
(5029,"user.enterkey[].[]",5084)
(5029,"user.enterkey[].[_8]",5086)
(5029,"user.enterkey[].[_10]",5088)
(5030,"intruder.spyingdoor[false].[]",5032)
(5031,"intruder.spyingdoor[false].[]",5034)
(5032,"time +=1",5033)
(5033,"user.codechecked[true].[]",5053)
(5034,"time +=6",5035)
(5035,"user.keychecked[true].[]",5077)
(5035,"controller.tau=>setkeyvalid.[]",5078)
(5036,"intruder.spyingdoor[false].[]",5038)
(5037,"intruder.spyingdoor[false].[]",5040)
(5038,"time +=19",5039)
(5039,"user.enterkey[].[_3]",5694)
(5039,"user.enterkey[].[]",5695)
(5039,"user.enterkey[].[_10]",5696)
(5040,"time +=4",5041)
(5041,"user.keychecked[true].[]",5067)
(5041,"controller.tau=>setkeyvalid.[]",5068)
(5042,"intruder.spyingdoor[false].[]",5044)
(5043,"intruder.spyingdoor[false].[]",5046)
(5044,"time +=14",5045)
(5045,"user.enterkey[].[]",5122)
(5045,"user.enterkey[].[_8]",5124)
(5045,"user.enterkey[].[_10]",5126)
(5046,"time +=9",5047)
(5047,"controller.checkcode[3].[]",5096)
(5048,"intruder.spyingdoor[false].[]",5049)
(5049,"time +=14",5050)
(5050,"user.enterkey[].[_3]",5122)
(5050,"user.enterkey[].[_8]",5124)
(5050,"user.enterkey[].[]",5126)
(5051,"controller.tau=>setkeyvalid.[]",5054)
(5052,"user.keychecked[true].[]",5054)
(5052,"controller.setkeyinvalid[].[]",5055)
(5053,"door.getlockstatus[].[]",5056)
(5054,"controller.setkeyinvalid[].[]",5057)
(5055,"user.keychecked[true].[]",5057)
(5056,"user.setstatus[false].[]",5059)
(5057,"time +=10",5058)
(5058,"controller.checkcode[3].[]",5112)
(5059,"time +=20",5060)
(5060,"user.enterkey[].[_3]",5697)
(5060,"user.enterkey[].[_8]",5698)
(5060,"user.enterkey[].[]",5699)
(5061,"controller.lockeduser[].[]",5062)
(5062,"controller.setarmed[].[]",5063)
(5063,"door.lockdoor[].[]",5064)
(5064,"time +=10",5065)
(5065,"user.codechecked[true].[]",5117)
(5066,"controller.lockeduser[].[]",5069)
(5067,"controller.tau=>setkeyvalid.[]",5070)
(5068,"user.keychecked[true].[]",5070)
(5068,"controller.setkeyinvalid[].[]",5071)
(5069,"controller.setarmed[].[]",5072)
(5070,"controller.setkeyinvalid[].[]",5073)
(5071,"user.keychecked[true].[]",5073)
(5072,"door.lockdoor[].[]",5075)
(5073,"time +=10",5074)
(5074,"controller.checkcode[3].[]",5121)
(5075,"time +=10",5076)
(5076,"user.codechecked[true].[]",5128)
(5077,"controller.tau=>setkeyvalid.[]",5079)
(5078,"user.keychecked[true].[]",5079)
(5078,"controller.setkeyinvalid[].[]",5080)
(5079,"controller.setkeyinvalid[].[]",5081)
(5080,"user.keychecked[true].[]",5081)
(5081,"time +=10",5082)
(5082,"controller.checkcode[3].[]",5139)
(5083,"controller.lockeduser[].[]",5090)
(5084,"time +=3",5085)
(5085,"controller.checkkey[2].[]",5109)
(5086,"time +=8",5087)
(5087,"controller.checkkey[2].[]",5136)
(5088,"time +=10",5089)
(5089,"controller.checkkey[2].[]",5144)
(5090,"controller.setarmed[].[]",5091)
(5091,"door.lockdoor[].[]",5092)
(5092,"time +=10",5093)
(5093,"user.codechecked[true].[]",5145)
(5094,"controller.lockeduser[].[]",5097)
(5095,"controller.lockeduser[].[]",5098)
(5096,"controller.lockeduser[].[]",5099)
(5097,"controller.setarmed[].[]",5100)
(5098,"controller.setarmed[].[]",5101)
(5099,"controller.setarmed[].[]",5102)
(5100,"door.lockdoor[].[]",5103)
(5101,"door.lockdoor[].[]",5105)
(5102,"door.lockdoor[].[]",5107)
(5103,"time +=10",5104)
(5104,"user.codechecked[true].[]",5155)
(5105,"time +=10",5106)
(5106,"user.codechecked[true].[]",5154)
(5107,"time +=10",5108)
(5108,"user.codechecked[true].[]",5156)
(5109,"controller.setkeyvalid[].[]",5110)
(5110,"time +=10",5111)
(5111,"user.keychecked[true].[]",5166)
(5111,"controller.tau=>setkeyvalid.[]",5167)
(5112,"controller.lockeduser[].[]",5113)
(5113,"controller.setarmed[].[]",5114)
(5114,"door.lockdoor[].[]",5115)
(5115,"time +=10",5116)
(5116,"user.codechecked[true].[]",5172)
(5117,"door.getlockstatus[].[]",5118)
(5118,"user.setstatus[false].[]",5119)
(5119,"time +=18",5120)
(5120,"door.spiedon[].[]",5229)
(5121,"controller.lockeduser[].[]",5129)
(5122,"time +=3",5123)
(5123,"controller.checkkey[2].[]",5146)
(5124,"time +=8",5125)
(5125,"controller.checkkey[2].[]",5176)
(5126,"time +=10",5127)
(5127,"controller.checkkey[2].[]",5180)
(5128,"door.getlockstatus[].[]",5130)
(5129,"controller.setarmed[].[]",5131)
(5130,"user.setstatus[false].[]",5132)
(5131,"door.lockdoor[].[]",5134)
(5132,"time +=16",5133)
(5133,"door.spiedon[].[]",5227)
(5134,"time +=10",5135)
(5135,"user.codechecked[true].[]",5179)
(5136,"controller.setkeyvalid[].[]",5137)
(5137,"time +=10",5138)
(5138,"user.keychecked[true].[]",5186)
(5138,"controller.tau=>setkeyvalid.[]",5187)
(5139,"controller.lockeduser[].[]",5140)
(5140,"controller.setarmed[].[]",5141)
(5141,"door.lockdoor[].[]",5142)
(5142,"time +=10",5143)
(5143,"user.codechecked[true].[]",5192)
(5144,"controller.setkeyvalid[].[]",5147)
(5145,"door.getlockstatus[].[]",5149)
(5146,"controller.setkeyvalid[].[]",5150)
(5147,"time +=10",5148)
(5148,"user.keychecked[true].[]",5198)
(5148,"controller.tau=>setkeyvalid.[]",5199)
(5149,"user.setstatus[false].[]",5152)
(5150,"time +=10",5151)
(5151,"user.keychecked[true].[]",5196)
(5151,"controller.tau=>setkeyvalid.[]",5197)
(5152,"time +=13",5153)
(5153,"door.spiedon[].[]",5209)
(5154,"door.getlockstatus[].[]",5157)
(5155,"door.getlockstatus[].[]",5158)
(5156,"door.getlockstatus[].[]",5159)
(5157,"user.setstatus[false].[]",5160)
(5158,"user.setstatus[false].[]",5162)
(5159,"user.setstatus[false].[]",5164)
(5160,"time +=11",5161)
(5161,"door.spiedon[].[]",5242)
(5162,"time +=11",5163)
(5163,"door.spiedon[].[]",5208)
(5164,"time +=11",5165)
(5165,"door.spiedon[].[]",5251)
(5166,"controller.tau=>setkeyvalid.[]",5168)
(5167,"user.keychecked[true].[]",5168)
(5167,"controller.setkeyinvalid[].[]",5169)
(5168,"controller.setkeyinvalid[].[]",5170)
(5169,"user.keychecked[true].[]",5170)
(5170,"time +=10",5171)
(5171,"controller.checkcode[3].[]",5210)
(5171,"door.spiedon[].[]",5211)
(5172,"door.getlockstatus[].[]",5173)
(5173,"user.setstatus[false].[]",5174)
(5174,"time +=9",5175)
(5175,"door.spiedon[].[]",5255)
(5176,"controller.setkeyvalid[].[]",5177)
(5177,"time +=8",5178)
(5178,"door.spiedon[].[]",5253)
(5179,"door.getlockstatus[].[]",5181)
(5180,"controller.setkeyvalid[].[]",5182)
(5181,"user.setstatus[false].[]",5184)
(5182,"time +=6",5183)
(5183,"door.spiedon[].[]",5228)
(5184,"time +=6",5185)
(5185,"door.spiedon[].[]",5240)
(5186,"controller.tau=>setkeyvalid.[]",5188)
(5187,"user.keychecked[true].[]",5188)
(5187,"controller.setkeyinvalid[].[]",5189)
(5188,"controller.setkeyinvalid[].[]",5190)
(5189,"user.keychecked[true].[]",5190)
(5190,"time +=5",5191)
(5191,"door.spiedon[].[]",5212)
(5192,"door.getlockstatus[].[]",5193)
(5193,"user.setstatus[false].[]",5194)
(5194,"time +=4",5195)
(5195,"door.spiedon[].[]",5241)
(5196,"controller.tau=>setkeyvalid.[]",5200)
(5197,"user.keychecked[true].[]",5200)
(5197,"controller.setkeyinvalid[].[]",5201)
(5198,"controller.tau=>setkeyvalid.[]",5202)
(5199,"user.keychecked[true].[]",5202)
(5199,"controller.setkeyinvalid[].[]",5203)
(5200,"controller.setkeyinvalid[].[]",5204)
(5201,"user.keychecked[true].[]",5204)
(5202,"controller.setkeyinvalid[].[]",5206)
(5203,"user.keychecked[true].[]",5206)
(5204,"time +=3",5205)
(5205,"door.spiedon[].[]",5254)
(5206,"time +=3",5207)
(5207,"door.spiedon[].[]",5213)
(5208,"intruder.spyingdoor[false].[]",5214)
(5209,"intruder.spyingdoor[false].[]",5223)
(5210,"controller.lockeduser[].[]",5216)
(5210,"door.spiedon[].[]",5217)
(5211,"controller.checkcode[3].[]",5217)
(5211,"intruder.spyingdoor[false].[]",5218)
(5212,"intruder.spyingdoor[false].[]",5219)
(5213,"intruder.spyingdoor[false].[]",5221)
(5214,"time +=9",5215)
(5215,"user.enterkey[].[]",5294)
(5215,"user.enterkey[].[_8]",5296)
(5215,"user.enterkey[].[_10]",5298)
(5216,"controller.setunarmed[].[]",5252)
(5216,"door.spiedon[].[]",5225)
(5217,"controller.lockeduser[].[]",5225)
(5217,"intruder.spyingdoor[false].[]",5226)
(5218,"controller.checkcode[3].[]",5226)
(5219,"time +=5",5220)
(5220,"controller.checkcode[3].[]",5277)
(5221,"time +=7",5222)
(5222,"controller.checkcode[3].[]",5284)
(5223,"time +=7",5224)
(5224,"user.enterkey[].[_3]",5706)
(5224,"user.enterkey[].[]",5707)
(5224,"user.enterkey[].[_10]",5708)
(5225,"controller.setunarmed[].[]",5231)
(5225,"intruder.spyingdoor[false].[]",5230)
(5226,"controller.lockeduser[].[]",5230)
(5227,"intruder.spyingdoor[false].[]",5232)
(5228,"intruder.spyingdoor[false].[]",5234)
(5229,"intruder.spyingdoor[false].[]",5236)
(5230,"controller.setunarmed[].[]",5238)
(5231,"intruder.spyingdoor[false].[]",5238)
(5231,"door.unlockdoor[].[]",5239)
(5232,"time +=4",5233)
(5233,"user.enterkey[].[]",5703)
(5233,"user.enterkey[].[_8]",5704)
(5233,"user.enterkey[].[_10]",5705)
(5234,"time +=4",5235)
(5235,"user.keychecked[true].[]",5271)
(5235,"controller.tau=>setkeyvalid.[]",5272)
(5236,"time +=2",5237)
(5237,"user.enterkey[].[]",5700)
(5237,"user.enterkey[].[_8]",5701)
(5237,"user.enterkey[].[_10]",5702)
(5238,"door.unlockdoor[].[]",5243)
(5239,"intruder.spyingdoor[false].[]",5243)
(5240,"intruder.spyingdoor[false].[]",5245)
(5241,"intruder.spyingdoor[false].[]",5247)
(5242,"intruder.spyingdoor[false].[]",5249)
(5243,"time +=5",5244)
(5244,"controller.setdoorstatus[true, false].[]",5278)
(5245,"time +=14",5246)
(5246,"user.enterkey[].[_3]",5712)
(5246,"user.enterkey[].[]",5713)
(5246,"user.enterkey[].[_10]",5714)
(5247,"time +=16",5248)
(5248,"user.enterkey[].[_3]",5715)
(5248,"user.enterkey[].[_8]",5716)
(5248,"user.enterkey[].[]",5717)
(5249,"time +=9",5250)
(5250,"user.enterkey[].[_3]",5294)
(5250,"user.enterkey[].[_8]",5296)
(5250,"user.enterkey[].[]",5298)
(5251,"intruder.spyingdoor[false].[]",5256)
(5252,"door.unlockdoor[].[]",5258)
(5252,"door.spiedon[].[]",5231)
(5253,"intruder.spyingdoor[false].[]",5259)
(5254,"intruder.spyingdoor[false].[]",5261)
(5255,"intruder.spyingdoor[false].[]",5263)
(5256,"time +=9",5257)
(5257,"user.enterkey[].[_3]",5294)
(5257,"user.enterkey[].[]",5296)
(5257,"user.enterkey[].[_10]",5298)
(5258,"door.spiedon[].[]",5239)
(5259,"time +=2",5260)
(5260,"user.keychecked[true].[]",5265)
(5260,"controller.tau=>setkeyvalid.[]",5266)
(5261,"time +=7",5262)
(5262,"controller.checkcode[3].[]",5285)
(5263,"time +=11",5264)
(5264,"user.enterkey[].[_3]",5709)
(5264,"user.enterkey[].[_8]",5710)
(5264,"user.enterkey[].[]",5711)
(5265,"controller.tau=>setkeyvalid.[]",5267)
(5266,"user.keychecked[true].[]",5267)
(5266,"controller.setkeyinvalid[].[]",5268)
(5267,"controller.setkeyinvalid[].[]",5269)
(5268,"user.keychecked[true].[]",5269)
(5269,"time +=10",5270)
(5270,"controller.checkcode[3].[]",5306)
(5271,"controller.tau=>setkeyvalid.[]",5273)
(5272,"user.keychecked[true].[]",5273)
(5272,"controller.setkeyinvalid[].[]",5274)
(5273,"controller.setkeyinvalid[].[]",5275)
(5274,"user.keychecked[true].[]",5275)
(5275,"time +=10",5276)
(5276,"controller.checkcode[3].[]",5318)
(5277,"controller.lockeduser[].[]",5280)
(5278,"time +=5",5279)
(5279,"user.codechecked[true].[]",5300)
(5280,"controller.setunarmed[].[]",5281)
(5281,"door.unlockdoor[].[]",5282)
(5282,"time +=5",5283)
(5283,"controller.setdoorstatus[true, false].[]",5301)
(5284,"controller.lockeduser[].[]",5286)
(5285,"controller.lockeduser[].[]",5287)
(5286,"controller.setunarmed[].[]",5288)
(5287,"controller.setunarmed[].[]",5289)
(5288,"door.unlockdoor[].[]",5290)
(5289,"door.unlockdoor[].[]",5292)
(5290,"time +=5",5291)
(5291,"controller.setdoorstatus[true, false].[]",5308)
(5292,"time +=5",5293)
(5293,"controller.setdoorstatus[true, false].[]",5313)
(5294,"time +=3",5295)
(5295,"controller.checkkey[2].[]",5307)
(5296,"time +=8",5297)
(5297,"controller.checkkey[2].[]",5327)
(5298,"time +=10",5299)
(5299,"controller.checkkey[2].[]",5342)
(5300,"door.getlockstatus[].[]",5303)
(5301,"time +=5",5302)
(5302,"user.codechecked[true].[]",5323)
(5303,"user.setstatus[false].[]",5304)
(5304,"time +=20",5305)
(5305,"user.enterkey[].[]",5718)
(5305,"user.enterkey[].[_8]",5719)
(5305,"user.enterkey[].[_10]",5720)
(5305,"door.spiedon[].[]",5383)
(5306,"controller.lockeduser[].[]",5310)
(5307,"controller.setkeyvalid[].[]",5311)
(5308,"time +=5",5309)
(5309,"user.codechecked[true].[]",5329)
(5310,"controller.setunarmed[].[]",5315)
(5311,"time +=10",5312)
(5312,"user.keychecked[true].[]",5345)
(5312,"controller.tau=>setkeyvalid.[]",5346)
(5313,"time +=5",5314)
(5314,"user.codechecked[true].[]",5328)
(5315,"door.unlockdoor[].[]",5316)
(5316,"time +=5",5317)
(5317,"controller.setdoorstatus[true, false].[]",5330)
(5318,"controller.lockeduser[].[]",5319)
(5319,"controller.setunarmed[].[]",5320)
(5320,"door.unlockdoor[].[]",5321)
(5321,"time +=5",5322)
(5322,"controller.setdoorstatus[true, false].[]",5340)
(5323,"door.getlockstatus[].[]",5324)
(5324,"user.setstatus[false].[]",5325)
(5325,"time +=15",5326)
(5326,"door.spiedon[].[]",5384)
(5327,"controller.setkeyvalid[].[]",5332)
(5328,"door.getlockstatus[].[]",5334)
(5329,"door.getlockstatus[].[]",5335)
(5330,"time +=5",5331)
(5331,"user.codechecked[true].[]",5347)
(5332,"time +=10",5333)
(5333,"user.keychecked[true].[]",5359)
(5333,"controller.tau=>setkeyvalid.[]",5360)
(5334,"user.setstatus[false].[]",5336)
(5335,"user.setstatus[false].[]",5338)
(5336,"time +=13",5337)
(5337,"door.spiedon[].[]",5371)
(5338,"time +=13",5339)
(5339,"door.spiedon[].[]",5372)
(5340,"time +=5",5341)
(5341,"user.codechecked[true].[]",5355)
(5342,"controller.setkeyvalid[].[]",5343)
(5343,"time +=10",5344)
(5344,"user.keychecked[true].[]",5365)
(5344,"controller.tau=>setkeyvalid.[]",5366)
(5345,"controller.tau=>setkeyvalid.[]",5348)
(5346,"user.keychecked[true].[]",5348)
(5346,"controller.setkeyinvalid[].[]",5349)
(5347,"door.getlockstatus[].[]",5350)
(5348,"controller.setkeyinvalid[].[]",5351)
(5349,"user.keychecked[true].[]",5351)
(5350,"user.setstatus[false].[]",5353)
(5351,"time +=8",5352)
(5352,"door.spiedon[].[]",5374)
(5353,"time +=8",5354)
(5354,"door.spiedon[].[]",5387)
(5355,"door.getlockstatus[].[]",5356)
(5356,"user.setstatus[false].[]",5357)
(5357,"time +=6",5358)
(5358,"door.spiedon[].[]",5386)
(5359,"controller.tau=>setkeyvalid.[]",5361)
(5360,"user.keychecked[true].[]",5361)
(5360,"controller.setkeyinvalid[].[]",5362)
(5361,"controller.setkeyinvalid[].[]",5363)
(5362,"user.keychecked[true].[]",5363)
(5363,"time +=3",5364)
(5364,"door.spiedon[].[]",5385)
(5365,"controller.tau=>setkeyvalid.[]",5367)
(5366,"user.keychecked[true].[]",5367)
(5366,"controller.setkeyinvalid[].[]",5368)
(5367,"controller.setkeyinvalid[].[]",5369)
(5368,"user.keychecked[true].[]",5369)
(5369,"time +=1",5370)
(5370,"door.spiedon[].[]",5373)
(5371,"intruder.spyingdoor[false].[]",5375)
(5372,"intruder.spyingdoor[false].[]",5377)
(5373,"intruder.spyingdoor[false].[]",5379)
(5374,"intruder.spyingdoor[false].[]",5381)
(5375,"time +=7",5376)
(5376,"user.enterkey[].[]",5402)
(5376,"user.enterkey[].[_8]",5404)
(5376,"user.enterkey[].[_10]",5406)
(5377,"time +=7",5378)
(5378,"user.enterkey[].[_3]",5402)
(5378,"user.enterkey[].[_8]",5404)
(5378,"user.enterkey[].[]",5406)
(5379,"time +=9",5380)
(5380,"controller.checkcode[3].[]",5415)
(5381,"time +=2",5382)
(5382,"controller.checkcode[3].[]",5397)
(5383,"user.enterkey[].[]",5721)
(5383,"user.enterkey[].[_8]",5722)
(5383,"user.enterkey[].[_10]",5723)
(5383,"intruder.spyingdoor[false].[]",5388)
(5384,"intruder.spyingdoor[false].[]",5389)
(5385,"intruder.spyingdoor[false].[]",5391)
(5386,"intruder.spyingdoor[false].[]",5393)
(5387,"intruder.spyingdoor[false].[]",5395)
(5388,"user.enterkey[].[]",5724)
(5388,"user.enterkey[].[_8]",5725)
(5388,"user.enterkey[].[_10]",5726)
(5389,"time +=5",5390)
(5390,"user.enterkey[].[_3]",5727)
(5390,"user.enterkey[].[]",5728)
(5390,"user.enterkey[].[_10]",5729)
(5391,"time +=7",5392)
(5392,"controller.checkcode[3].[]",5408)
(5393,"time +=14",5394)
(5394,"user.enterkey[].[_3]",5733)
(5394,"user.enterkey[].[_8]",5734)
(5394,"user.enterkey[].[]",5735)
(5395,"time +=12",5396)
(5396,"user.enterkey[].[_3]",5730)
(5396,"user.enterkey[].[]",5731)
(5396,"user.enterkey[].[_10]",5732)
(5397,"controller.lockeduser[].[]",5398)
(5398,"controller.setunarmed[].[]",5399)
(5399,"door.unlockdoor[].[]",5400)
(5400,"time +=5",5401)
(5401,"controller.setdoorstatus[true, false].[]",5409)
(5402,"time +=3",5403)
(5403,"controller.checkkey[2].[]",5420)
(5404,"time +=8",5405)
(5405,"controller.checkkey[2].[]",5431)
(5406,"time +=10",5407)
(5407,"controller.checkkey[2].[]",5435)
(5408,"controller.lockeduser[].[]",5411)
(5409,"time +=5",5410)
(5410,"user.codechecked[true].[]",5423)
(5411,"controller.setunarmed[].[]",5412)
(5412,"door.unlockdoor[].[]",5413)
(5413,"time +=5",5414)
(5414,"controller.setdoorstatus[true, false].[]",5424)
(5415,"controller.lockeduser[].[]",5416)
(5416,"controller.setunarmed[].[]",5417)
(5417,"door.unlockdoor[].[]",5418)
(5418,"time +=5",5419)
(5419,"controller.setdoorstatus[true, false].[]",5429)
(5420,"controller.setkeyvalid[].[]",5421)
(5421,"time +=10",5422)
(5422,"user.keychecked[true].[]",5445)
(5422,"controller.tau=>setkeyvalid.[]",5446)
(5423,"door.getlockstatus[].[]",5426)
(5424,"time +=5",5425)
(5425,"user.codechecked[true].[]",5434)
(5426,"user.setstatus[false].[]",5427)
(5427,"time +=18",5428)
(5428,"door.spiedon[].[]",5472)
(5429,"time +=5",5430)
(5430,"user.codechecked[true].[]",5441)
(5431,"controller.setkeyvalid[].[]",5432)
(5432,"time +=10",5433)
(5433,"user.keychecked[true].[]",5451)
(5433,"controller.tau=>setkeyvalid.[]",5452)
(5434,"door.getlockstatus[].[]",5436)
(5435,"controller.setkeyvalid[].[]",5437)
(5436,"user.setstatus[false].[]",5439)
(5437,"time +=10",5438)
(5438,"user.keychecked[true].[]",5457)
(5438,"controller.tau=>setkeyvalid.[]",5458)
(5439,"time +=13",5440)
(5440,"door.spiedon[].[]",5482)
(5441,"door.getlockstatus[].[]",5442)
(5442,"user.setstatus[false].[]",5443)
(5443,"time +=11",5444)
(5444,"door.spiedon[].[]",5464)
(5445,"controller.tau=>setkeyvalid.[]",5447)
(5446,"user.keychecked[true].[]",5447)
(5446,"controller.setkeyinvalid[].[]",5448)
(5447,"controller.setkeyinvalid[].[]",5449)
(5448,"user.keychecked[true].[]",5449)
(5449,"time +=10",5450)
(5450,"controller.checkcode[3].[]",5473)
(5450,"door.spiedon[].[]",5474)
(5451,"controller.tau=>setkeyvalid.[]",5453)
(5452,"user.keychecked[true].[]",5453)
(5452,"controller.setkeyinvalid[].[]",5454)
(5453,"controller.setkeyinvalid[].[]",5455)
(5454,"user.keychecked[true].[]",5455)
(5455,"time +=5",5456)
(5456,"door.spiedon[].[]",5463)
(5457,"controller.tau=>setkeyvalid.[]",5459)
(5458,"user.keychecked[true].[]",5459)
(5458,"controller.setkeyinvalid[].[]",5460)
(5459,"controller.setkeyinvalid[].[]",5461)
(5460,"user.keychecked[true].[]",5461)
(5461,"time +=3",5462)
(5462,"door.spiedon[].[]",5465)
(5463,"intruder.spyingdoor[false].[]",5466)
(5464,"intruder.spyingdoor[false].[]",5468)
(5465,"intruder.spyingdoor[false].[]",5470)
(5466,"time +=5",5467)
(5467,"controller.checkcode[3].[]",5493)
(5468,"time +=9",5469)
(5469,"user.enterkey[].[_3]",5742)
(5469,"user.enterkey[].[_8]",5743)
(5469,"user.enterkey[].[]",5744)
(5470,"time +=7",5471)
(5471,"controller.checkcode[3].[]",5498)
(5472,"intruder.spyingdoor[false].[]",5475)
(5473,"controller.lockeduser[].[]",5477)
(5473,"door.spiedon[].[]",5478)
(5474,"controller.checkcode[3].[]",5478)
(5474,"intruder.spyingdoor[false].[]",5479)
(5475,"time +=2",5476)
(5476,"user.enterkey[].[]",5736)
(5476,"user.enterkey[].[_8]",5737)
(5476,"user.enterkey[].[_10]",5738)
(5477,"controller.setarmed[].[]",5480)
(5477,"door.spiedon[].[]",5481)
(5478,"controller.lockeduser[].[]",5481)
(5478,"intruder.spyingdoor[false].[]",5483)
(5479,"controller.checkcode[3].[]",5483)
(5480,"door.lockdoor[].[]",5484)
(5480,"door.spiedon[].[]",5485)
(5481,"controller.setarmed[].[]",5485)
(5481,"intruder.spyingdoor[false].[]",5486)
(5482,"intruder.spyingdoor[false].[]",5487)
(5483,"controller.lockeduser[].[]",5486)
(5484,"door.spiedon[].[]",5489)
(5485,"intruder.spyingdoor[false].[]",5490)
(5485,"door.lockdoor[].[]",5489)
(5486,"controller.setarmed[].[]",5490)
(5487,"time +=7",5488)
(5488,"user.enterkey[].[_3]",5739)
(5488,"user.enterkey[].[]",5740)
(5488,"user.enterkey[].[_10]",5741)
(5489,"intruder.spyingdoor[false].[]",5491)
(5490,"door.lockdoor[].[]",5491)
(5491,"time +=10",5492)
(5492,"user.codechecked[true].[]",5503)
(5493,"controller.lockeduser[].[]",5494)
(5494,"controller.setarmed[].[]",5495)
(5495,"door.lockdoor[].[]",5496)
(5496,"time +=10",5497)
(5497,"user.codechecked[true].[]",5507)
(5498,"controller.lockeduser[].[]",5499)
(5499,"controller.setarmed[].[]",5500)
(5500,"door.lockdoor[].[]",5501)
(5501,"time +=10",5502)
(5502,"user.codechecked[true].[]",5511)
(5503,"door.getlockstatus[].[]",5504)
(5504,"user.setstatus[false].[]",5505)
(5505,"time +=20",5506)
(5506,"user.enterkey[].[]",5745)
(5506,"user.enterkey[].[_8]",5746)
(5506,"user.enterkey[].[_10]",5747)
(5506,"door.spiedon[].[]",5515)
(5507,"door.getlockstatus[].[]",5508)
(5508,"user.setstatus[false].[]",5509)
(5509,"time +=15",5510)
(5510,"door.spiedon[].[]",5516)
(5511,"door.getlockstatus[].[]",5512)
(5512,"user.setstatus[false].[]",5513)
(5513,"time +=13",5514)
(5514,"door.spiedon[].[]",5517)
(5515,"user.enterkey[].[]",5748)
(5515,"user.enterkey[].[_8]",5749)
(5515,"user.enterkey[].[_10]",5750)
(5515,"intruder.spyingdoor[false].[]",5518)
(5516,"intruder.spyingdoor[false].[]",5519)
(5517,"intruder.spyingdoor[false].[]",5521)
(5518,"user.enterkey[].[]",5751)
(5518,"user.enterkey[].[_8]",5752)
(5518,"user.enterkey[].[_10]",5753)
(5519,"time +=5",5520)
(5520,"user.enterkey[].[_3]",5754)
(5520,"user.enterkey[].[]",5755)
(5520,"user.enterkey[].[_10]",5756)
(5521,"time +=7",5522)
(5522,"user.enterkey[].[_3]",5757)
(5522,"user.enterkey[].[_8]",5758)
(5522,"user.enterkey[].[]",5759)
(5523,"@[58>>5]",173)
(5524,"@[58>>5]",175)
(5525,"@[58>>5]",177)
(5526,"@[60>>7]",173)
(5527,"@[60>>7]",175)
(5528,"@[60>>7]",177)
(5529,"@[65>>2]",264)
(5530,"@[65>>-2]",266)
(5531,"@[71>>5]",275)
(5532,"@[71>>5]",278)
(5533,"@[73>>7]",275)
(5534,"@[73>>7]",278)
(5535,"@[78>>7]",325)
(5536,"@[78>>7]",326)
(5537,"@[78>>7]",327)
(5538,"@[78>>5]",353)
(5539,"@[78>>5]",354)
(5540,"@[78>>5]",355)
(5541,"@[128>>5]",579)
(5542,"@[128>>5]",581)
(5543,"@[128>>5]",583)
(5544,"@[130>>7]",579)
(5545,"@[130>>7]",581)
(5546,"@[130>>7]",583)
(5547,"@[176>>106]",301)
(5548,"@[176>>106]",303)
(5549,"@[176>>106]",305)
(5550,"@[181>>111]",301)
(5551,"@[181>>111]",303)
(5552,"@[181>>111]",305)
(5553,"@[183>>113]",301)
(5554,"@[183>>113]",303)
(5555,"@[183>>113]",305)
(5556,"@[190>>120]",295)
(5557,"@[190>>120]",297)
(5558,"@[190>>120]",299)
(5559,"@[243>>120]",585)
(5560,"@[243>>120]",587)
(5561,"@[243>>120]",589)
(5562,"@[248>>120]",600)
(5563,"@[248>>120]",602)
(5564,"@[248>>120]",604)
(5565,"@[296>>120]",885)
(5566,"@[296>>120]",887)
(5567,"@[296>>120]",889)
(5568,"@[301>>120]",927)
(5569,"@[301>>120]",929)
(5570,"@[301>>120]",931)
(5571,"@[306>>120]",945)
(5572,"@[306>>120]",947)
(5573,"@[306>>120]",949)
(5574,"@[340>>210]",606)
(5575,"@[340>>210]",608)
(5576,"@[340>>210]",610)
(5577,"@[340>>210]",606)
(5578,"@[340>>210]",608)
(5579,"@[340>>210]",610)
(5580,"@[349>>120]",1263)
(5581,"@[349>>120]",1265)
(5582,"@[349>>120]",1267)
(5583,"@[354>>120]",1272)
(5584,"@[354>>120]",1274)
(5585,"@[354>>120]",1276)
(5586,"@[359>>120]",1290)
(5587,"@[359>>120]",1292)
(5588,"@[359>>120]",1294)
(5589,"@[364>>120]",1383)
(5590,"@[364>>120]",1385)
(5591,"@[364>>120]",1387)
(5592,"@[393>>210]",933)
(5593,"@[393>>210]",935)
(5594,"@[393>>210]",937)
(5595,"@[398>>210]",957)
(5596,"@[398>>210]",959)
(5597,"@[398>>210]",961)
(5598,"@[400>>330]",295)
(5599,"@[400>>330]",297)
(5600,"@[400>>330]",299)
(5601,"@[400>>330]",295)
(5602,"@[400>>330]",297)
(5603,"@[400>>330]",299)
(5604,"@[402>>120]",1832)
(5605,"@[402>>120]",1834)
(5606,"@[402>>120]",1836)
(5607,"@[407>>120]",1857)
(5608,"@[407>>120]",1859)
(5609,"@[407>>120]",1861)
(5610,"@[412>>120]",1875)
(5611,"@[412>>120]",1877)
(5612,"@[412>>120]",1879)
(5613,"@[417>>120]",1905)
(5614,"@[417>>120]",1907)
(5615,"@[417>>120]",1909)
(5616,"@[418>>30]",3262)
(5617,"@[418>>30]",3264)
(5618,"@[418>>30]",3266)
(5619,"@[422>>120]",2065)
(5620,"@[422>>120]",2067)
(5621,"@[422>>120]",2069)
(5622,"@[446>>210]",1278)
(5623,"@[446>>210]",1280)
(5624,"@[446>>210]",1282)
(5625,"@[453>>330]",585)
(5626,"@[453>>330]",587)
(5627,"@[453>>330]",589)
(5628,"@[455>>120]",2548)
(5629,"@[455>>120]",2550)
(5630,"@[455>>120]",2552)
(5631,"@[456>>210]",1395)
(5632,"@[456>>210]",1397)
(5633,"@[456>>210]",1399)
(5634,"@[458>>330]",600)
(5635,"@[458>>330]",602)
(5636,"@[458>>330]",604)
(5637,"@[465>>120]",2612)
(5638,"@[465>>120]",2614)
(5639,"@[465>>120]",2616)
(5640,"@[470>>120]",2639)
(5641,"@[470>>120]",2641)
(5642,"@[470>>120]",2643)
(5643,"@[471>>30]",4012)
(5644,"@[471>>30]",4014)
(5645,"@[471>>30]",4016)
(5646,"@[475>>120]",2672)
(5647,"@[475>>120]",2674)
(5648,"@[475>>120]",2676)
(5649,"@[478>>30]",4076)
(5650,"@[478>>30]",4078)
(5651,"@[478>>30]",4080)
(5652,"@[480>>120]",2824)
(5653,"@[480>>120]",2825)
(5654,"@[480>>120]",2826)
(5655,"@[480>>120]",2829)
(5656,"@[480>>120]",2830)
(5657,"@[480>>120]",2831)
(5658,"@[480>>120]",2835)
(5659,"@[480>>120]",2837)
(5660,"@[480>>120]",2839)
(5661,"@[499>>210]",1863)
(5662,"@[499>>210]",1865)
(5663,"@[499>>210]",1867)
(5664,"@[506>>330]",885)
(5665,"@[506>>330]",887)
(5666,"@[506>>330]",889)
(5667,"@[508>>120]",3262)
(5668,"@[508>>120]",3264)
(5669,"@[508>>120]",3266)
(5670,"@[514>>210]",2076)
(5671,"@[514>>210]",2078)
(5672,"@[514>>210]",2080)
(5673,"@[516>>330]",945)
(5674,"@[516>>330]",947)
(5675,"@[516>>330]",949)
(5676,"@[523>>120]",3522)
(5677,"@[523>>120]",3524)
(5678,"@[523>>120]",3526)
(5679,"@[524>>30]",4631)
(5680,"@[524>>30]",4633)
(5681,"@[524>>30]",4635)
(5682,"@[528>>120]",3560)
(5683,"@[528>>120]",3562)
(5684,"@[528>>120]",3564)
(5685,"@[531>>30]",4689)
(5686,"@[531>>30]",4691)
(5687,"@[531>>30]",4693)
(5688,"@[533>>120]",3587)
(5689,"@[533>>120]",3589)
(5690,"@[533>>120]",3591)
(5691,"@[552>>210]",2593)
(5692,"@[552>>210]",2595)
(5693,"@[552>>210]",2597)
(5694,"@[559>>330]",1263)
(5695,"@[559>>330]",1265)
(5696,"@[559>>330]",1267)
(5697,"@[561>>120]",4012)
(5698,"@[561>>120]",4014)
(5699,"@[561>>120]",4016)
(5700,"@[572>>210]",2862)
(5701,"@[572>>210]",2864)
(5702,"@[572>>210]",2866)
(5703,"@[574>>330]",1383)
(5704,"@[574>>330]",1385)
(5705,"@[574>>330]",1387)
(5706,"@[577>>30]",5084)
(5707,"@[577>>30]",5086)
(5708,"@[577>>30]",5088)
(5709,"@[581>>120]",4263)
(5710,"@[581>>120]",4265)
(5711,"@[581>>120]",4267)
(5712,"@[584>>30]",5122)
(5713,"@[584>>30]",5124)
(5714,"@[584>>30]",5126)
(5715,"@[586>>120]",4302)
(5716,"@[586>>120]",4304)
(5717,"@[586>>120]",4306)
(5718,"@[600>>180]",3694)
(5719,"@[600>>180]",3695)
(5720,"@[600>>180]",3696)
(5721,"@[600>>180]",3703)
(5722,"@[600>>180]",3702)
(5723,"@[600>>180]",3704)
(5724,"@[600>>180]",3708)
(5725,"@[600>>180]",3706)
(5726,"@[600>>180]",3710)
(5727,"@[605>>210]",3464)
(5728,"@[605>>210]",3466)
(5729,"@[605>>210]",3468)
(5730,"@[612>>330]",1832)
(5731,"@[612>>330]",1834)
(5732,"@[612>>330]",1836)
(5733,"@[614>>120]",4631)
(5734,"@[614>>120]",4633)
(5735,"@[614>>120]",4635)
(5736,"@[632>>330]",2065)
(5737,"@[632>>330]",2067)
(5738,"@[632>>330]",2069)
(5739,"@[637>>30]",5402)
(5740,"@[637>>30]",5404)
(5741,"@[637>>30]",5406)
(5742,"@[639>>120]",4868)
(5743,"@[639>>120]",4870)
(5744,"@[639>>120]",4872)
(5745,"@[660>>300]",2824)
(5746,"@[660>>300]",2825)
(5747,"@[660>>300]",2826)
(5748,"@[660>>300]",2829)
(5749,"@[660>>300]",2830)
(5750,"@[660>>300]",2831)
(5751,"@[660>>300]",2835)
(5752,"@[660>>300]",2837)
(5753,"@[660>>300]",2839)
(5754,"@[665>>330]",2548)
(5755,"@[665>>330]",2550)
(5756,"@[665>>330]",2552)
(5757,"@[667>>120]",5084)
(5758,"@[667>>120]",5086)
(5759,"@[667>>120]",5088)
