des (0, 3799, 3491)
(0,"user.start[].[]",1)
(0,"user.start[].[]",2)
(0,"intruder.maeby[].[]",3)
(0,"intruder.maeby[].[]",4)
(1,"user.enterkey[].[_10]",5)
(1,"user.enterkey[].[_15]",6)
(1,"intruder.maeby[].[]",7)
(1,"intruder.maeby[].[]",8)
(2,"user.opendoor[].[]",21)
(2,"intruder.maeby[].[]",9)
(2,"intruder.maeby[].[]",10)
(3,"user.start[].[]",7)
(3,"user.start[].[]",9)
(4,"user.start[].[]",8)
(4,"user.start[].[]",10)
(5,"intruder.maeby[].[]",11)
(5,"intruder.maeby[].[]",15)
(6,"intruder.maeby[].[]",13)
(6,"intruder.maeby[].[]",17)
(7,"user.enterkey[].[_10]",11)
(7,"user.enterkey[].[_15]",13)
(8,"user.enterkey[].[_10]",15)
(8,"user.enterkey[].[_15]",17)
(9,"user.opendoor[].[]",19)
(10,"user.opendoor[].[]",20)
(11,"time +=10",12)
(12,"controller.checkkey[2].[]",31)
(13,"time +=15",14)
(14,"controller.checkkey[2].[]",47)
(15,"time +=10",16)
(16,"controller.checkkey[2].[]",40)
(17,"time +=15",18)
(18,"controller.checkkey[2].[]",48)
(19,"door.opendoor[].[]",22)
(20,"door.opendoor[].[]",24)
(21,"intruder.maeby[].[]",19)
(21,"intruder.maeby[].[]",20)
(21,"door.opendoor[].[_true]",26)
(22,"time +=2",23)
(23,"controller.setdoorstatus[true, false].[]",27)
(24,"time +=2",25)
(25,"controller.setdoorstatus[true, false].[]",29)
(26,"intruder.maeby[].[]",22)
(26,"intruder.maeby[].[]",24)
(27,"time +=8",28)
(28,"user.closedoor[].[]",32)
(29,"time +=8",30)
(30,"user.closedoor[].[]",33)
(31,"controller.setkeyvalid[].[]",34)
(32,"door.closedoor[].[]",36)
(33,"door.closedoor[].[]",38)
(34,"time +=1",35)
(35,"user.keychecked[true].[]",43)
(36,"time +=10",37)
(37,"user.start[].[]",59)
(37,"user.start[].[]",60)
(38,"time +=10",39)
(39,"user.start[].[]",57)
(39,"user.start[].[]",58)
(40,"controller.setkeyvalid[].[]",41)
(41,"time +=1",42)
(42,"user.keychecked[true].[]",45)
(43,"time +=9",44)
(44,"controller.tau=>setkeyvalid.[]",75)
(45,"time +=9",46)
(46,"controller.tau=>setkeyvalid.[]",72)
(47,"controller.setkeyvalid[].[]",49)
(48,"controller.setkeyvalid[].[]",51)
(49,"time +=1",50)
(50,"user.keychecked[true].[]",53)
(51,"time +=1",52)
(52,"user.keychecked[true].[]",55)
(53,"time +=9",54)
(54,"controller.tau=>setkeyvalid.[]",102)
(55,"time +=9",56)
(56,"controller.tau=>setkeyvalid.[]",103)
(57,"user.enterkey[].[_10]",61)
(57,"user.enterkey[].[_15]",63)
(58,"user.opendoor[].[]",65)
(59,"user.enterkey[].[_10]",66)
(59,"user.enterkey[].[_15]",68)
(60,"user.opendoor[].[]",70)
(61,"time +=10",62)
(62,"controller.checkkey[2].[]",138)
(63,"time +=15",64)
(64,"controller.checkkey[2].[]",163)
(65,"door.opendoor[].[]",71)
(66,"time +=10",67)
(67,"controller.checkkey[2].[]",140)
(67,"intruder.spyingdoor[false].[]",141)
(68,"time +=10",69)
(69,"intruder.spyingdoor[false].[]",130)
(70,"door.opendoor[].[]",73)
(71,"time +=10",3409)
(72,"controller.setkeyinvalid[].[]",76)
(73,"time +=10",74)
(74,"user.closedoor[].[]",134)
(74,"intruder.spyingdoor[false].[]",135)
(75,"controller.setkeyinvalid[].[]",78)
(76,"time +=1",77)
(77,"controller.checkcode[3].[]",80)
(78,"time +=1",79)
(79,"controller.checkcode[3].[]",81)
(80,"controller.lockeduser[].[]",82)
(81,"controller.lockeduser[].[]",83)
(82,"controller.setarmed[].[]",84)
(83,"controller.setarmed[].[]",85)
(84,"door.lockdoor[].[]",86)
(85,"door.lockdoor[].[]",88)
(86,"time +=1",87)
(87,"user.codechecked[true].[]",90)
(88,"time +=1",89)
(89,"user.codechecked[true].[]",91)
(90,"door.getlockstatus[].[]",92)
(91,"door.getlockstatus[].[]",93)
(92,"user.setstatus[true].[]",94)
(93,"user.setstatus[true].[]",96)
(94,"time +=1",95)
(95,"controller.setdoorstatus[false, true].[]",98)
(96,"time +=1",97)
(97,"controller.setdoorstatus[false, true].[]",100)
(98,"time +=9",99)
(99,"user.enterkey[].[]",155)
(99,"user.enterkey[].[_15]",157)
(100,"time +=7",101)
(101,"intruder.spyingdoor[false].[]",136)
(102,"controller.setkeyinvalid[].[]",104)
(103,"controller.setkeyinvalid[].[]",106)
(104,"time +=1",105)
(105,"controller.checkcode[3].[]",108)
(106,"time +=1",107)
(107,"controller.checkcode[3].[]",109)
(108,"controller.lockeduser[].[]",110)
(109,"controller.lockeduser[].[]",111)
(110,"controller.setarmed[].[]",112)
(111,"controller.setarmed[].[]",113)
(112,"door.lockdoor[].[]",114)
(113,"door.lockdoor[].[]",116)
(114,"time +=1",115)
(115,"user.codechecked[true].[]",118)
(116,"time +=1",117)
(117,"user.codechecked[true].[]",119)
(118,"door.getlockstatus[].[]",120)
(119,"door.getlockstatus[].[]",121)
(120,"user.setstatus[true].[]",122)
(121,"user.setstatus[true].[]",124)
(122,"time +=1",123)
(123,"controller.setdoorstatus[false, true].[]",126)
(124,"time +=1",125)
(125,"controller.setdoorstatus[false, true].[]",128)
(126,"time +=2",127)
(127,"intruder.spyingdoor[false].[]",132)
(128,"time +=9",129)
(129,"user.enterkey[].[_10]",3410)
(129,"user.enterkey[].[]",3411)
(130,"time +=5",131)
(131,"controller.checkkey[2].[]",164)
(132,"time +=7",133)
(133,"user.enterkey[].[_10]",173)
(133,"user.enterkey[].[]",175)
(134,"intruder.spyingdoor[false].[]",139)
(134,"door.closedoor[].[]",150)
(135,"user.closedoor[].[]",139)
(136,"time +=2",137)
(137,"user.enterkey[].[]",159)
(137,"user.enterkey[].[_15]",161)
(138,"controller.setkeyvalid[].[]",142)
(139,"door.closedoor[].[]",144)
(140,"controller.setkeyvalid[].[]",146)
(140,"intruder.spyingdoor[false].[]",147)
(141,"controller.checkkey[2].[]",147)
(142,"time +=1",143)
(143,"user.keychecked[true].[]",151)
(144,"time +=10",145)
(145,"user.start[].[]",178)
(145,"user.start[].[]",179)
(146,"intruder.spyingdoor[false].[]",148)
(147,"controller.setkeyvalid[].[]",148)
(148,"time +=1",149)
(149,"user.keychecked[true].[]",153)
(150,"intruder.spyingdoor[false].[]",144)
(151,"time +=9",152)
(152,"controller.tau=>setkeyvalid.[]",177)
(153,"time +=9",154)
(154,"controller.tau=>setkeyvalid.[]",180)
(155,"time +=10",156)
(156,"controller.checkkey[2].[]",211)
(157,"time +=15",158)
(158,"controller.checkkey[2].[]",236)
(159,"time +=10",160)
(160,"controller.checkkey[2].[]",210)
(161,"time +=15",162)
(162,"controller.checkkey[2].[]",248)
(163,"controller.setkeyvalid[].[]",165)
(164,"controller.setkeyvalid[].[]",167)
(165,"time +=1",166)
(166,"user.keychecked[true].[]",169)
(167,"time +=1",168)
(168,"user.keychecked[true].[]",171)
(169,"time +=9",170)
(170,"controller.tau=>setkeyvalid.[]",221)
(171,"time +=9",172)
(172,"controller.tau=>setkeyvalid.[]",220)
(173,"time +=10",174)
(174,"controller.checkkey[2].[]",247)
(175,"time +=15",176)
(176,"controller.checkkey[2].[]",277)
(177,"controller.setkeyinvalid[].[]",186)
(178,"user.enterkey[].[_10]",188)
(178,"user.enterkey[].[_15]",190)
(179,"user.opendoor[].[]",181)
(180,"controller.setkeyinvalid[].[]",182)
(181,"door.opendoor[].[]",184)
(182,"time +=1",183)
(183,"controller.checkcode[3].[]",192)
(184,"time +=10",185)
(185,"user.closedoor[].[]",260)
(186,"time +=1",187)
(187,"controller.checkcode[3].[]",193)
(188,"time +=10",189)
(189,"controller.checkkey[2].[]",259)
(190,"time +=15",191)
(191,"controller.checkkey[2].[]",308)
(192,"controller.lockeduser[].[]",194)
(193,"controller.lockeduser[].[]",195)
(194,"controller.setarmed[].[]",196)
(195,"controller.setarmed[].[]",197)
(196,"door.lockdoor[].[]",198)
(197,"door.lockdoor[].[]",200)
(198,"time +=1",199)
(199,"user.codechecked[true].[]",202)
(200,"time +=1",201)
(201,"user.codechecked[true].[]",203)
(202,"door.getlockstatus[].[]",204)
(203,"door.getlockstatus[].[]",205)
(204,"user.setstatus[false].[]",206)
(205,"user.setstatus[false].[]",208)
(206,"time +=10",207)
(207,"user.enterkey[].[]",278)
(207,"user.enterkey[].[_15]",280)
(208,"time +=10",209)
(209,"user.enterkey[].[]",273)
(209,"user.enterkey[].[_15]",275)
(210,"controller.setkeyvalid[].[]",212)
(211,"controller.setkeyvalid[].[]",214)
(212,"time +=1",213)
(213,"user.keychecked[true].[]",216)
(214,"time +=1",215)
(215,"user.keychecked[true].[]",218)
(216,"time +=9",217)
(217,"controller.tau=>setkeyvalid.[]",267)
(218,"time +=9",219)
(219,"controller.tau=>setkeyvalid.[]",268)
(220,"controller.setkeyinvalid[].[]",222)
(221,"controller.setkeyinvalid[].[]",224)
(222,"time +=1",223)
(223,"controller.checkcode[3].[]",226)
(224,"time +=1",225)
(225,"controller.checkcode[3].[]",227)
(226,"controller.lockeduser[].[]",228)
(227,"controller.lockeduser[].[]",229)
(228,"controller.setarmed[].[]",230)
(229,"controller.setarmed[].[]",231)
(230,"door.lockdoor[].[]",232)
(231,"door.lockdoor[].[]",234)
(232,"time +=1",233)
(233,"user.codechecked[true].[]",237)
(234,"time +=1",235)
(235,"user.codechecked[true].[]",238)
(236,"controller.setkeyvalid[].[]",239)
(237,"door.getlockstatus[].[]",241)
(238,"door.getlockstatus[].[]",242)
(239,"time +=1",240)
(240,"user.keychecked[true].[]",253)
(241,"user.setstatus[false].[]",243)
(242,"user.setstatus[false].[]",245)
(243,"time +=10",244)
(244,"user.enterkey[].[_10]",317)
(244,"user.enterkey[].[]",319)
(245,"time +=10",246)
(246,"user.enterkey[].[_10]",3412)
(246,"user.enterkey[].[]",3413)
(247,"controller.setkeyvalid[].[]",249)
(248,"controller.setkeyvalid[].[]",251)
(249,"time +=1",250)
(250,"user.keychecked[true].[]",255)
(251,"time +=1",252)
(252,"user.keychecked[true].[]",257)
(253,"time +=9",254)
(254,"controller.tau=>setkeyvalid.[]",323)
(255,"time +=9",256)
(256,"controller.tau=>setkeyvalid.[]",313)
(257,"time +=9",258)
(258,"controller.tau=>setkeyvalid.[]",316)
(259,"controller.setkeyvalid[].[]",261)
(260,"door.closedoor[].[]",263)
(261,"time +=1",262)
(262,"user.keychecked[true].[]",265)
(263,"time +=10",264)
(264,"user.start[].[]",368)
(264,"user.start[].[]",369)
(264,"door.spiedon[].[]",370)
(265,"time +=9",266)
(266,"controller.tau=>setkeyvalid.[]",379)
(266,"door.spiedon[].[]",380)
(267,"controller.setkeyinvalid[].[]",269)
(268,"controller.setkeyinvalid[].[]",271)
(269,"time +=1",270)
(270,"controller.checkcode[3].[]",284)
(271,"time +=1",272)
(272,"controller.checkcode[3].[]",285)
(273,"time +=10",274)
(274,"controller.checkkey[2].[]",426)
(275,"time +=15",276)
(276,"controller.checkkey[2].[]",476)
(277,"controller.setkeyvalid[].[]",282)
(278,"time +=8",279)
(279,"door.spiedon[].[]",354)
(280,"time +=8",281)
(281,"door.spiedon[].[]",371)
(282,"time +=1",283)
(283,"user.keychecked[true].[]",286)
(284,"controller.lockeduser[].[]",288)
(285,"controller.lockeduser[].[]",289)
(286,"time +=7",287)
(287,"door.spiedon[].[]",410)
(288,"controller.setunarmed[].[]",290)
(289,"controller.setunarmed[].[]",291)
(290,"door.unlockdoor[].[]",292)
(291,"door.unlockdoor[].[]",294)
(292,"time +=1",293)
(293,"user.codechecked[true].[]",296)
(294,"time +=1",295)
(295,"user.codechecked[true].[]",297)
(296,"door.getlockstatus[].[]",298)
(297,"door.getlockstatus[].[]",299)
(298,"user.setstatus[false].[]",300)
(299,"user.setstatus[false].[]",302)
(300,"time +=1",301)
(301,"controller.setdoorstatus[false, false].[]",304)
(302,"time +=1",303)
(303,"controller.setdoorstatus[false, false].[]",306)
(304,"time +=5",305)
(305,"door.spiedon[].[]",403)
(306,"time +=9",307)
(307,"user.opendoor[].[]",452)
(308,"controller.setkeyvalid[].[]",309)
(309,"time +=1",310)
(310,"user.keychecked[true].[]",311)
(311,"time +=4",312)
(312,"door.spiedon[].[]",381)
(313,"controller.setkeyinvalid[].[]",314)
(314,"time +=1",315)
(315,"controller.checkcode[3].[]",326)
(316,"controller.setkeyinvalid[].[]",321)
(317,"time +=3",318)
(318,"door.spiedon[].[]",353)
(319,"time +=3",320)
(320,"door.spiedon[].[]",382)
(321,"time +=1",322)
(322,"controller.checkcode[3].[]",327)
(323,"controller.setkeyinvalid[].[]",324)
(324,"time +=1",325)
(325,"controller.checkcode[3].[]",328)
(326,"controller.lockeduser[].[]",329)
(327,"controller.lockeduser[].[]",330)
(328,"controller.lockeduser[].[]",331)
(329,"controller.setunarmed[].[]",332)
(330,"controller.setunarmed[].[]",333)
(331,"controller.setunarmed[].[]",334)
(332,"door.unlockdoor[].[]",335)
(333,"door.unlockdoor[].[]",337)
(334,"door.unlockdoor[].[]",339)
(335,"time +=1",336)
(336,"user.codechecked[true].[]",341)
(337,"time +=1",338)
(338,"user.codechecked[true].[]",342)
(339,"time +=1",340)
(340,"user.codechecked[true].[]",343)
(341,"door.getlockstatus[].[]",344)
(342,"door.getlockstatus[].[]",345)
(343,"door.getlockstatus[].[]",346)
(344,"user.setstatus[false].[]",347)
(345,"user.setstatus[false].[]",349)
(346,"user.setstatus[false].[]",351)
(347,"time +=1",348)
(348,"controller.setdoorstatus[false, false].[]",355)
(348,"door.spiedon[].[]",356)
(349,"time +=1",350)
(350,"controller.setdoorstatus[false, false].[]",357)
(350,"door.spiedon[].[]",358)
(351,"time +=1",352)
(352,"controller.setdoorstatus[false, false].[]",359)
(353,"intruder.spyingdoor[false].[]",361)
(354,"intruder.spyingdoor[false].[]",364)
(355,"door.spiedon[].[]",363)
(356,"controller.setdoorstatus[false, false].[]",363)
(356,"intruder.spyingdoor[false].[]",420)
(357,"door.spiedon[].[]",366)
(358,"controller.setdoorstatus[false, false].[]",366)
(358,"intruder.spyingdoor[false].[]",367)
(359,"time +=9",360)
(360,"user.opendoor[].[]",495)
(361,"time +=7",362)
(362,"controller.checkkey[2].[]",478)
(363,"intruder.spyingdoor[false].[]",372)
(364,"time +=2",365)
(365,"controller.checkkey[2].[]",427)
(366,"intruder.spyingdoor[false].[]",411)
(367,"controller.setdoorstatus[false, false].[]",411)
(368,"user.enterkey[].[_10]",415)
(368,"user.enterkey[].[_15]",416)
(368,"door.spiedon[].[]",374)
(369,"user.opendoor[].[]",413)
(369,"door.spiedon[].[]",375)
(370,"user.start[].[]",374)
(370,"user.start[].[]",375)
(370,"intruder.spyingdoor[false].[]",376)
(371,"intruder.spyingdoor[false].[]",377)
(372,"time +=9",373)
(373,"user.opendoor[].[]",497)
(374,"user.enterkey[].[_10]",408)
(374,"user.enterkey[].[_15]",409)
(374,"intruder.spyingdoor[false].[]",383)
(375,"user.opendoor[].[]",404)
(375,"intruder.spyingdoor[false].[]",384)
(376,"user.start[].[]",383)
(376,"user.start[].[]",384)
(377,"time +=7",378)
(378,"controller.checkkey[2].[]",477)
(379,"controller.setkeyinvalid[].[]",385)
(379,"door.spiedon[].[]",386)
(380,"controller.tau=>setkeyvalid.[]",386)
(380,"intruder.spyingdoor[false].[]",394)
(381,"intruder.spyingdoor[false].[]",395)
(382,"intruder.spyingdoor[false].[]",397)
(383,"user.enterkey[].[_10]",399)
(383,"user.enterkey[].[_15]",401)
(384,"user.opendoor[].[]",387)
(385,"door.spiedon[].[]",388)
(386,"controller.setkeyinvalid[].[]",388)
(386,"intruder.spyingdoor[false].[]",389)
(387,"door.opendoor[].[]",390)
(388,"intruder.spyingdoor[false].[]",392)
(389,"controller.setkeyinvalid[].[]",392)
(390,"time +=10",391)
(391,"user.closedoor[].[]",504)
(392,"time +=1",393)
(393,"controller.checkcode[3].[]",421)
(394,"controller.tau=>setkeyvalid.[]",389)
(395,"time +=5",396)
(396,"controller.tau=>setkeyvalid.[]",462)
(397,"time +=12",398)
(398,"controller.checkkey[2].[]",520)
(399,"time +=10",400)
(400,"controller.checkkey[2].[]",505)
(401,"time +=15",402)
(402,"controller.checkkey[2].[]",559)
(403,"intruder.spyingdoor[false].[]",405)
(404,"intruder.spyingdoor[false].[]",387)
(404,"door.opendoor[].[]",407)
(405,"time +=4",406)
(406,"user.opendoor[].[]",453)
(407,"intruder.spyingdoor[false].[]",390)
(408,"intruder.spyingdoor[false].[]",399)
(409,"intruder.spyingdoor[false].[]",401)
(410,"intruder.spyingdoor[true].[]",414)
(411,"time +=9",412)
(412,"user.opendoor[].[]",496)
(413,"door.opendoor[].[]",417)
(413,"door.spiedon[].[]",404)
(414,"door.breakdoor[].[]",418)
(415,"door.spiedon[].[]",408)
(416,"door.spiedon[].[]",409)
(417,"door.spiedon[].[]",407)
(418,"time +=2",419)
(419,"controller.tau=>setkeyvalid.[]",428)
(420,"controller.setdoorstatus[false, false].[]",372)
(421,"controller.lockeduser[].[]",422)
(422,"controller.setarmed[].[]",423)
(423,"door.lockdoor[].[]",424)
(424,"time +=1",425)
(425,"user.codechecked[true].[]",429)
(426,"controller.setkeyvalid[].[]",430)
(427,"controller.setkeyvalid[].[]",432)
(428,"controller.setkeyinvalid[].[]",434)
(428,"controller.setdoorstatus[true, false].[]",435)
(429,"door.getlockstatus[].[]",436)
(430,"time +=1",431)
(431,"user.keychecked[true].[]",443)
(432,"time +=1",433)
(433,"user.keychecked[true].[]",445)
(434,"controller.setdoorstatus[true, false].[]",437)
(435,"controller.setkeyinvalid[].[]",437)
(435,"controller.alarma[].[]",438)
(436,"user.setstatus[false].[]",439)
(437,"controller.alarma[].[]",441)
(438,"controller.setkeyinvalid[].[]",441)
(439,"time +=10",440)
(440,"user.enterkey[].[]",521)
(440,"user.enterkey[].[_15]",523)
(441,"time +=1",442)
(442,"controller.checkcode[3].[]",447)
(443,"time +=9",444)
(444,"controller.tau=>setkeyvalid.[]",519)
(445,"time +=9",446)
(446,"controller.tau=>setkeyvalid.[]",518)
(447,"controller.lockeduser[].[]",448)
(448,"controller.setunarmed[].[]",449)
(449,"door.unlockdoor[].[]",450)
(450,"time +=1",451)
(451,"user.codechecked[true].[]",454)
(452,"door.opendoor[].[]",455)
(453,"door.opendoor[].[]",457)
(454,"door.getlockstatus[].[]",459)
(455,"time +=2",456)
(456,"controller.setdoorstatus[true, false].[]",467)
(457,"time +=2",458)
(458,"controller.setdoorstatus[true, false].[]",469)
(459,"user.setstatus[false].[]",460)
(460,"time +=1",461)
(461,"controller.setdoorstatus[true, false].[]",463)
(462,"controller.setkeyinvalid[].[]",465)
(463,"time +=9",464)
(464,"user.opendoor[].[]",544)
(465,"time +=1",466)
(466,"controller.checkcode[3].[]",471)
(467,"time +=8",468)
(468,"user.closedoor[].[]",545)
(469,"time +=8",470)
(470,"user.closedoor[].[]",543)
(471,"controller.lockeduser[].[]",472)
(472,"controller.setarmed[].[]",473)
(473,"door.lockdoor[].[]",474)
(474,"time +=1",475)
(475,"user.codechecked[true].[]",479)
(476,"controller.setkeyvalid[].[]",480)
(477,"controller.setkeyvalid[].[]",482)
(478,"controller.setkeyvalid[].[]",484)
(479,"door.getlockstatus[].[]",486)
(480,"time +=1",481)
(481,"user.keychecked[true].[]",489)
(482,"time +=1",483)
(483,"user.keychecked[true].[]",491)
(484,"time +=1",485)
(485,"user.keychecked[true].[]",493)
(486,"user.setstatus[false].[]",487)
(487,"time +=10",488)
(488,"user.enterkey[].[_10]",568)
(488,"user.enterkey[].[]",570)
(489,"time +=9",490)
(490,"controller.tau=>setkeyvalid.[]",572)
(491,"time +=9",492)
(492,"controller.tau=>setkeyvalid.[]",573)
(493,"time +=9",494)
(494,"controller.tau=>setkeyvalid.[]",574)
(495,"door.opendoor[].[]",498)
(496,"door.opendoor[].[]",500)
(497,"door.opendoor[].[]",502)
(498,"time +=2",499)
(499,"controller.setdoorstatus[true, false].[]",510)
(500,"time +=2",501)
(501,"controller.setdoorstatus[true, false].[]",512)
(502,"time +=2",503)
(503,"controller.setdoorstatus[true, false].[]",514)
(504,"door.closedoor[].[]",506)
(505,"controller.setkeyvalid[].[]",508)
(506,"time +=10",507)
(507,"user.start[].[]",620)
(507,"user.start[].[]",621)
(508,"time +=1",509)
(509,"user.keychecked[true].[]",516)
(510,"time +=8",511)
(511,"user.closedoor[].[]",597)
(512,"time +=8",513)
(513,"user.closedoor[].[]",604)
(514,"time +=8",515)
(515,"user.closedoor[].[]",596)
(516,"time +=9",517)
(517,"controller.tau=>setkeyvalid.[]",617)
(518,"controller.setkeyinvalid[].[]",525)
(519,"controller.setkeyinvalid[].[]",527)
(520,"controller.setkeyvalid[].[]",529)
(521,"time +=10",522)
(522,"controller.checkkey[2].[]",640)
(523,"time +=15",524)
(524,"controller.checkkey[2].[]",683)
(525,"time +=1",526)
(526,"controller.checkcode[3].[]",531)
(527,"time +=1",528)
(528,"controller.checkcode[3].[]",532)
(529,"time +=1",530)
(530,"user.keychecked[true].[]",533)
(531,"controller.lockeduser[].[]",535)
(532,"controller.lockeduser[].[]",536)
(533,"time +=9",534)
(534,"controller.tau=>setkeyvalid.[]",641)
(535,"controller.setunarmed[].[]",537)
(536,"controller.setunarmed[].[]",538)
(537,"door.unlockdoor[].[]",539)
(538,"door.unlockdoor[].[]",541)
(539,"time +=1",540)
(540,"user.codechecked[true].[]",546)
(541,"time +=1",542)
(542,"user.codechecked[true].[]",547)
(543,"door.closedoor[].[]",548)
(544,"door.opendoor[].[]",550)
(545,"door.closedoor[].[]",551)
(546,"door.getlockstatus[].[]",553)
(547,"door.getlockstatus[].[]",554)
(548,"time +=10",549)
(549,"user.start[].[]",561)
(549,"user.start[].[]",657)
(550,"time +=10",3414)
(551,"time +=10",552)
(552,"user.start[].[]",563)
(552,"user.start[].[]",662)
(553,"user.setstatus[false].[]",555)
(554,"user.setstatus[false].[]",557)
(555,"time +=1",556)
(556,"controller.setdoorstatus[true, false].[]",560)
(557,"time +=1",558)
(558,"controller.setdoorstatus[true, false].[]",562)
(559,"controller.setkeyvalid[].[]",564)
(560,"time +=9",561)
(561,"user.enterkey[].[]",658)
(561,"user.enterkey[].[_15]",660)
(562,"time +=9",563)
(563,"user.enterkey[].[]",3415)
(563,"user.enterkey[].[_15]",3416)
(564,"time +=1",565)
(565,"user.keychecked[true].[]",566)
(566,"time +=9",567)
(567,"controller.tau=>setkeyvalid.[]",672)
(568,"time +=10",569)
(569,"controller.checkkey[2].[]",682)
(570,"time +=13",571)
(571,"door.spiedon[].[]",724)
(572,"controller.setkeyinvalid[].[]",575)
(573,"controller.setkeyinvalid[].[]",577)
(574,"controller.setkeyinvalid[].[]",579)
(575,"time +=1",576)
(576,"controller.checkcode[3].[]",581)
(577,"time +=1",578)
(578,"controller.checkcode[3].[]",582)
(579,"time +=1",580)
(580,"controller.checkcode[3].[]",583)
(581,"controller.lockeduser[].[]",584)
(582,"controller.lockeduser[].[]",585)
(583,"controller.lockeduser[].[]",586)
(584,"controller.setunarmed[].[]",587)
(585,"controller.setunarmed[].[]",588)
(586,"controller.setunarmed[].[]",589)
(587,"door.unlockdoor[].[]",590)
(588,"door.unlockdoor[].[]",592)
(589,"door.unlockdoor[].[]",594)
(590,"time +=1",591)
(591,"user.codechecked[true].[]",605)
(592,"time +=1",593)
(593,"user.codechecked[true].[]",606)
(594,"time +=1",595)
(595,"user.codechecked[true].[]",598)
(596,"door.closedoor[].[]",599)
(597,"door.closedoor[].[]",601)
(598,"door.getlockstatus[].[]",603)
(599,"time +=10",600)
(600,"user.start[].[]",619)
(600,"user.start[].[]",696)
(601,"time +=10",602)
(602,"user.start[].[]",623)
(602,"user.start[].[]",3418)
(603,"user.setstatus[false].[]",607)
(604,"door.closedoor[].[]",609)
(605,"door.getlockstatus[].[]",611)
(606,"door.getlockstatus[].[]",612)
(607,"time +=1",608)
(608,"controller.setdoorstatus[true, false].[]",618)
(609,"time +=10",610)
(610,"user.start[].[]",625)
(610,"user.start[].[]",701)
(611,"user.setstatus[false].[]",613)
(612,"user.setstatus[false].[]",615)
(613,"time +=1",614)
(614,"controller.setdoorstatus[true, false].[]",622)
(615,"time +=1",616)
(616,"controller.setdoorstatus[true, false].[]",624)
(617,"controller.setkeyinvalid[].[]",626)
(618,"time +=9",619)
(619,"user.enterkey[].[]",697)
(619,"user.enterkey[].[_15]",699)
(620,"user.enterkey[].[_10]",628)
(620,"user.enterkey[].[_15]",630)
(621,"user.opendoor[].[]",632)
(622,"time +=9",623)
(623,"user.enterkey[].[_10]",3419)
(623,"user.enterkey[].[]",3420)
(624,"time +=9",625)
(625,"user.enterkey[].[_10]",697)
(625,"user.enterkey[].[]",699)
(626,"time +=1",627)
(627,"controller.checkcode[3].[]",635)
(628,"time +=10",629)
(629,"controller.checkkey[2].[]",748)
(629,"door.spiedon[].[]",749)
(630,"time +=10",631)
(631,"door.spiedon[].[]",737)
(632,"door.opendoor[].[]",633)
(633,"time +=10",634)
(634,"user.closedoor[].[]",708)
(634,"door.spiedon[].[]",709)
(635,"controller.lockeduser[].[]",636)
(636,"controller.setarmed[].[]",637)
(637,"door.lockdoor[].[]",638)
(638,"time +=1",639)
(639,"user.codechecked[true].[]",642)
(640,"controller.setkeyvalid[].[]",643)
(641,"controller.setkeyinvalid[].[]",645)
(642,"door.getlockstatus[].[]",647)
(643,"time +=1",644)
(644,"user.keychecked[true].[]",650)
(645,"time +=1",646)
(646,"controller.checkcode[3].[]",652)
(647,"user.setstatus[false].[]",648)
(648,"time +=8",649)
(649,"door.spiedon[].[]",725)
(650,"time +=7",651)
(651,"door.spiedon[].[]",727)
(652,"controller.lockeduser[].[]",653)
(653,"controller.setunarmed[].[]",654)
(654,"door.unlockdoor[].[]",655)
(655,"time +=1",656)
(656,"user.codechecked[true].[]",663)
(657,"user.opendoor[].[]",664)
(658,"time +=6",659)
(659,"door.spiedon[].[]",710)
(660,"time +=6",661)
(661,"door.spiedon[].[]",740)
(662,"user.opendoor[].[]",665)
(663,"door.getlockstatus[].[]",666)
(664,"door.opendoor[].[]",667)
(665,"door.opendoor[].[]",669)
(666,"user.setstatus[false].[]",670)
(667,"time +=6",668)
(668,"door.spiedon[].[]",747)
(669,"time +=10",3417)
(670,"time +=1",671)
(671,"controller.setdoorstatus[true, false].[]",673)
(672,"controller.setkeyinvalid[].[]",675)
(673,"time +=5",674)
(674,"door.spiedon[].[]",755)
(675,"time +=1",676)
(676,"controller.checkcode[3].[]",677)
(677,"controller.lockeduser[].[]",678)
(678,"controller.setarmed[].[]",679)
(679,"door.lockdoor[].[]",680)
(680,"time +=1",681)
(681,"user.codechecked[true].[]",684)
(682,"controller.setkeyvalid[].[]",685)
(683,"controller.setkeyvalid[].[]",687)
(684,"door.getlockstatus[].[]",689)
(685,"time +=1",686)
(686,"user.keychecked[true].[]",692)
(687,"time +=1",688)
(688,"user.keychecked[true].[]",694)
(689,"user.setstatus[false].[]",690)
(690,"time +=3",691)
(691,"door.spiedon[].[]",739)
(692,"time +=2",693)
(693,"door.spiedon[].[]",726)
(694,"time +=2",695)
(695,"door.spiedon[].[]",711)
(696,"user.opendoor[].[]",702)
(697,"time +=1",698)
(698,"door.spiedon[].[]",738)
(699,"time +=1",700)
(700,"door.spiedon[].[]",754)
(701,"user.opendoor[].[]",703)
(702,"door.opendoor[].[]",704)
(703,"door.opendoor[].[]",706)
(704,"time +=1",705)
(705,"door.spiedon[].[]",712)
(706,"time +=1",707)
(707,"door.spiedon[].[]",713)
(708,"door.closedoor[].[]",736)
(708,"door.spiedon[].[]",714)
(709,"user.closedoor[].[]",714)
(709,"intruder.spyingdoor[false].[]",3421)
(710,"intruder.spyingdoor[false].[]",715)
(711,"intruder.spyingdoor[false].[]",717)
(712,"intruder.spyingdoor[false].[]",719)
(713,"intruder.spyingdoor[false].[]",721)
(714,"intruder.spyingdoor[false].[]",3422)
(714,"door.closedoor[].[]",723)
(715,"time +=4",716)
(716,"controller.checkkey[2].[]",778)
(717,"time +=7",718)
(718,"controller.tau=>setkeyvalid.[]",796)
(719,"time +=9",720)
(720,"user.closedoor[].[]",823)
(721,"time +=9",722)
(722,"user.closedoor[].[]",816)
(723,"intruder.spyingdoor[false].[]",3423)
(724,"intruder.spyingdoor[false].[]",728)
(725,"intruder.spyingdoor[false].[]",730)
(726,"intruder.spyingdoor[false].[]",732)
(727,"intruder.spyingdoor[false].[]",734)
(728,"time +=2",729)
(729,"controller.checkkey[2].[]",761)
(730,"time +=2",731)
(731,"user.enterkey[].[]",762)
(731,"user.enterkey[].[_15]",764)
(732,"time +=7",733)
(733,"controller.tau=>setkeyvalid.[]",797)
(734,"time +=2",735)
(735,"controller.tau=>setkeyvalid.[]",768)
(736,"door.spiedon[].[]",723)
(737,"intruder.spyingdoor[false].[]",3424)
(738,"intruder.spyingdoor[false].[]",741)
(739,"intruder.spyingdoor[false].[]",743)
(740,"intruder.spyingdoor[false].[]",745)
(741,"time +=9",742)
(742,"controller.checkkey[2].[]",824)
(743,"time +=7",744)
(744,"user.enterkey[].[_10]",798)
(744,"user.enterkey[].[]",800)
(745,"time +=9",746)
(746,"controller.checkkey[2].[]",825)
(747,"intruder.spyingdoor[false].[]",750)
(748,"controller.setkeyvalid[].[]",752)
(748,"door.spiedon[].[]",753)
(749,"controller.checkkey[2].[]",753)
(749,"intruder.spyingdoor[false].[]",3425)
(750,"time +=4",751)
(751,"user.closedoor[].[]",786)
(752,"door.spiedon[].[]",756)
(753,"controller.setkeyvalid[].[]",756)
(753,"intruder.spyingdoor[false].[]",3426)
(754,"intruder.spyingdoor[false].[]",757)
(755,"intruder.spyingdoor[false].[]",759)
(756,"intruder.spyingdoor[false].[]",3427)
(757,"time +=14",758)
(758,"controller.checkkey[2].[]",857)
(759,"time +=4",760)
(760,"user.enterkey[].[_10]",779)
(760,"user.enterkey[].[]",781)
(761,"controller.setkeyvalid[].[]",766)
(762,"time +=10",763)
(763,"controller.checkkey[2].[]",844)
(764,"time +=15",765)
(765,"controller.checkkey[2].[]",893)
(766,"time +=1",767)
(767,"user.keychecked[true].[]",771)
(768,"controller.setkeyinvalid[].[]",769)
(769,"time +=1",770)
(770,"controller.checkcode[3].[]",773)
(771,"time +=9",772)
(772,"controller.tau=>setkeyvalid.[]",845)
(773,"controller.lockeduser[].[]",774)
(774,"controller.setunarmed[].[]",775)
(775,"door.unlockdoor[].[]",776)
(776,"time +=1",777)
(777,"user.codechecked[true].[]",783)
(778,"controller.setkeyvalid[].[]",784)
(779,"time +=10",780)
(780,"controller.checkkey[2].[]",869)
(781,"time +=15",782)
(782,"controller.checkkey[2].[]",905)
(783,"door.getlockstatus[].[]",787)
(784,"time +=1",785)
(785,"user.keychecked[true].[]",792)
(786,"door.closedoor[].[]",788)
(787,"user.setstatus[false].[]",790)
(788,"time +=10",789)
(789,"user.start[].[]",795)
(789,"user.start[].[]",858)
(790,"time +=1",791)
(791,"controller.setdoorstatus[true, false].[]",794)
(792,"time +=9",793)
(793,"controller.tau=>setkeyvalid.[]",868)
(794,"time +=9",795)
(795,"user.enterkey[].[]",864)
(795,"user.enterkey[].[_15]",866)
(796,"controller.setkeyinvalid[].[]",802)
(797,"controller.setkeyinvalid[].[]",804)
(798,"time +=10",799)
(799,"controller.checkkey[2].[]",894)
(800,"time +=15",801)
(801,"controller.checkkey[2].[]",945)
(802,"time +=1",803)
(803,"controller.checkcode[3].[]",806)
(804,"time +=1",805)
(805,"controller.checkcode[3].[]",807)
(806,"controller.lockeduser[].[]",808)
(807,"controller.lockeduser[].[]",809)
(808,"controller.setunarmed[].[]",810)
(809,"controller.setunarmed[].[]",811)
(810,"door.unlockdoor[].[]",812)
(811,"door.unlockdoor[].[]",814)
(812,"time +=1",813)
(813,"user.codechecked[true].[]",817)
(814,"time +=1",815)
(815,"user.codechecked[true].[]",818)
(816,"door.closedoor[].[]",819)
(817,"door.getlockstatus[].[]",821)
(818,"door.getlockstatus[].[]",822)
(819,"time +=10",820)
(820,"user.start[].[]",837)
(820,"user.start[].[]",903)
(821,"user.setstatus[false].[]",826)
(822,"user.setstatus[false].[]",828)
(823,"door.closedoor[].[]",830)
(824,"controller.setkeyvalid[].[]",832)
(825,"controller.setkeyvalid[].[]",834)
(826,"time +=1",827)
(827,"controller.setdoorstatus[true, false].[]",836)
(828,"time +=1",829)
(829,"controller.setdoorstatus[true, false].[]",838)
(830,"time +=10",831)
(831,"user.start[].[]",839)
(831,"user.start[].[]",918)
(832,"time +=1",833)
(833,"user.keychecked[true].[]",840)
(834,"time +=1",835)
(835,"user.keychecked[true].[]",842)
(836,"time +=9",837)
(837,"user.enterkey[].[_10]",913)
(837,"user.enterkey[].[]",915)
(838,"time +=9",839)
(839,"user.enterkey[].[]",913)
(839,"user.enterkey[].[_15]",915)
(840,"time +=9",841)
(841,"controller.tau=>setkeyvalid.[]",906)
(842,"time +=9",843)
(843,"controller.tau=>setkeyvalid.[]",904)
(844,"controller.setkeyvalid[].[]",846)
(845,"controller.setkeyinvalid[].[]",848)
(846,"time +=1",847)
(847,"user.keychecked[true].[]",850)
(848,"time +=1",849)
(849,"controller.checkcode[3].[]",852)
(850,"time +=9",851)
(851,"controller.tau=>setkeyvalid.[]",944)
(852,"controller.lockeduser[].[]",853)
(853,"controller.setunarmed[].[]",854)
(854,"door.unlockdoor[].[]",855)
(855,"time +=1",856)
(856,"user.codechecked[true].[]",859)
(857,"controller.setkeyvalid[].[]",860)
(858,"user.opendoor[].[]",862)
(859,"door.getlockstatus[].[]",863)
(860,"time +=1",861)
(861,"user.keychecked[true].[]",878)
(862,"door.opendoor[].[]",870)
(863,"user.setstatus[false].[]",872)
(864,"time +=10",865)
(865,"controller.checkkey[2].[]",958)
(866,"time +=15",867)
(867,"controller.checkkey[2].[]",1033)
(868,"controller.setkeyinvalid[].[]",874)
(869,"controller.setkeyvalid[].[]",876)
(870,"time +=10",871)
(871,"user.closedoor[].[]",965)
(872,"time +=1",873)
(873,"controller.setdoorstatus[true, false].[]",880)
(874,"time +=1",875)
(875,"controller.checkcode[3].[]",882)
(876,"time +=1",877)
(877,"user.keychecked[true].[]",883)
(878,"time +=9",879)
(879,"controller.tau=>setkeyvalid.[]",957)
(880,"time +=9",881)
(881,"user.enterkey[].[_10]",3428)
(881,"user.enterkey[].[]",3429)
(882,"controller.lockeduser[].[]",885)
(883,"time +=9",884)
(884,"controller.tau=>setkeyvalid.[]",966)
(885,"controller.setarmed[].[]",886)
(886,"door.lockdoor[].[]",887)
(887,"time +=1",888)
(888,"user.codechecked[true].[]",889)
(889,"door.getlockstatus[].[]",890)
(890,"user.setstatus[false].[]",891)
(891,"time +=10",892)
(892,"user.enterkey[].[]",987)
(892,"user.enterkey[].[_15]",989)
(893,"controller.setkeyvalid[].[]",895)
(894,"controller.setkeyvalid[].[]",897)
(895,"time +=1",896)
(896,"user.keychecked[true].[]",899)
(897,"time +=1",898)
(898,"user.keychecked[true].[]",901)
(899,"time +=9",900)
(900,"controller.tau=>setkeyvalid.[]",1000)
(901,"time +=9",902)
(902,"controller.tau=>setkeyvalid.[]",999)
(903,"user.opendoor[].[]",917)
(904,"controller.setkeyinvalid[].[]",907)
(905,"controller.setkeyvalid[].[]",909)
(906,"controller.setkeyinvalid[].[]",911)
(907,"time +=1",908)
(908,"controller.checkcode[3].[]",924)
(909,"time +=1",910)
(910,"user.keychecked[true].[]",925)
(911,"time +=1",912)
(912,"controller.checkcode[3].[]",927)
(913,"time +=10",914)
(914,"controller.checkkey[2].[]",1016)
(915,"time +=11",916)
(916,"door.spiedon[].[]",1057)
(917,"door.opendoor[].[]",919)
(918,"user.opendoor[].[]",921)
(919,"time +=10",920)
(920,"user.closedoor[].[]",1015)
(921,"door.opendoor[].[]",922)
(922,"time +=10",923)
(923,"user.closedoor[].[]",1024)
(924,"controller.lockeduser[].[]",928)
(925,"time +=9",926)
(926,"controller.tau=>setkeyvalid.[]",1023)
(927,"controller.lockeduser[].[]",929)
(928,"controller.setarmed[].[]",930)
(929,"controller.setarmed[].[]",931)
(930,"door.lockdoor[].[]",932)
(931,"door.lockdoor[].[]",934)
(932,"time +=1",933)
(933,"user.codechecked[true].[]",936)
(934,"time +=1",935)
(935,"user.codechecked[true].[]",937)
(936,"door.getlockstatus[].[]",938)
(937,"door.getlockstatus[].[]",939)
(938,"user.setstatus[false].[]",940)
(939,"user.setstatus[false].[]",942)
(940,"time +=9",941)
(941,"door.spiedon[].[]",1038)
(942,"time +=9",943)
(943,"door.spiedon[].[]",1095)
(944,"controller.setkeyinvalid[].[]",946)
(945,"controller.setkeyvalid[].[]",948)
(946,"time +=1",947)
(947,"controller.checkcode[3].[]",950)
(948,"time +=1",949)
(949,"user.keychecked[true].[]",951)
(950,"controller.lockeduser[].[]",953)
(951,"time +=7",952)
(952,"door.spiedon[].[]",1068)
(953,"controller.setunarmed[].[]",954)
(954,"door.unlockdoor[].[]",955)
(955,"time +=1",956)
(956,"user.codechecked[true].[]",959)
(957,"controller.setkeyinvalid[].[]",960)
(958,"controller.setkeyvalid[].[]",962)
(959,"door.getlockstatus[].[]",964)
(960,"time +=1",961)
(961,"controller.checkcode[3].[]",973)
(962,"time +=1",963)
(963,"user.keychecked[true].[]",974)
(964,"user.setstatus[false].[]",967)
(965,"door.closedoor[].[]",969)
(966,"controller.setkeyinvalid[].[]",971)
(967,"time +=1",968)
(968,"controller.setdoorstatus[true, false].[]",976)
(969,"time +=6",970)
(970,"door.spiedon[].[]",1055)
(971,"time +=1",972)
(972,"controller.checkcode[3].[]",978)
(973,"controller.lockeduser[].[]",979)
(974,"time +=5",975)
(975,"door.spiedon[].[]",1107)
(976,"time +=5",977)
(977,"door.spiedon[].[]",1099)
(978,"controller.lockeduser[].[]",980)
(979,"controller.setarmed[].[]",981)
(980,"controller.setarmed[].[]",982)
(981,"door.lockdoor[].[]",983)
(982,"door.lockdoor[].[]",985)
(983,"time +=1",984)
(984,"user.codechecked[true].[]",991)
(985,"time +=1",986)
(986,"user.codechecked[true].[]",992)
(987,"time +=4",988)
(988,"door.spiedon[].[]",1104)
(989,"time +=4",990)
(990,"door.spiedon[].[]",1098)
(991,"door.getlockstatus[].[]",993)
(992,"door.getlockstatus[].[]",994)
(993,"user.setstatus[false].[]",995)
(994,"user.setstatus[false].[]",997)
(995,"time +=4",996)
(996,"door.spiedon[].[]",1039)
(997,"time +=4",998)
(998,"door.spiedon[].[]",1056)
(999,"controller.setkeyinvalid[].[]",1001)
(1000,"controller.setkeyinvalid[].[]",1003)
(1001,"time +=1",1002)
(1002,"controller.checkcode[3].[]",1005)
(1003,"time +=1",1004)
(1004,"controller.checkcode[3].[]",1006)
(1005,"controller.lockeduser[].[]",1007)
(1006,"controller.lockeduser[].[]",1008)
(1007,"controller.setunarmed[].[]",1009)
(1008,"controller.setunarmed[].[]",1010)
(1009,"door.unlockdoor[].[]",1011)
(1010,"door.unlockdoor[].[]",1013)
(1011,"time +=1",1012)
(1012,"user.codechecked[true].[]",1025)
(1013,"time +=1",1014)
(1014,"user.codechecked[true].[]",1017)
(1015,"door.closedoor[].[]",1018)
(1016,"controller.setkeyvalid[].[]",1020)
(1017,"door.getlockstatus[].[]",1022)
(1018,"time +=1",1019)
(1019,"door.spiedon[].[]",1040)
(1020,"time +=1",1021)
(1021,"user.keychecked[true].[]",1072)
(1021,"door.spiedon[].[]",1073)
(1022,"user.setstatus[false].[]",1026)
(1023,"controller.setkeyinvalid[].[]",1028)
(1024,"door.closedoor[].[]",1030)
(1025,"door.getlockstatus[].[]",1032)
(1026,"time +=1",1027)
(1027,"controller.setdoorstatus[true, false].[]",1105)
(1027,"door.spiedon[].[]",1106)
(1028,"time +=1",1029)
(1029,"controller.checkcode[3].[]",1070)
(1029,"door.spiedon[].[]",1071)
(1030,"time +=1",1031)
(1031,"door.spiedon[].[]",1069)
(1032,"user.setstatus[false].[]",1034)
(1033,"controller.setkeyvalid[].[]",1036)
(1034,"time +=1",1035)
(1035,"controller.setdoorstatus[true, false].[]",1041)
(1035,"door.spiedon[].[]",1042)
(1036,"time +=1",1037)
(1037,"user.keychecked[true].[]",1043)
(1037,"door.spiedon[].[]",1044)
(1038,"intruder.spyingdoor[false].[]",1045)
(1039,"intruder.spyingdoor[false].[]",1047)
(1040,"intruder.spyingdoor[false].[]",1049)
(1041,"door.spiedon[].[]",1051)
(1042,"controller.setdoorstatus[true, false].[]",1051)
(1042,"intruder.spyingdoor[false].[]",1052)
(1043,"door.spiedon[].[]",1053)
(1044,"user.keychecked[true].[]",1053)
(1044,"intruder.spyingdoor[false].[]",1054)
(1045,"time +=1",1046)
(1046,"user.enterkey[].[_10]",1116)
(1046,"user.enterkey[].[]",1118)
(1047,"time +=6",1048)
(1048,"user.enterkey[].[_10]",1154)
(1048,"user.enterkey[].[]",1156)
(1049,"time +=9",1050)
(1050,"user.start[].[]",1115)
(1050,"user.start[].[]",1167)
(1051,"intruder.spyingdoor[false].[]",1058)
(1052,"controller.setdoorstatus[true, false].[]",1058)
(1053,"intruder.spyingdoor[false].[]",1060)
(1054,"user.keychecked[true].[]",1060)
(1055,"intruder.spyingdoor[false].[]",1062)
(1056,"intruder.spyingdoor[false].[]",1064)
(1057,"intruder.spyingdoor[false].[]",1066)
(1058,"time +=9",1059)
(1059,"user.enterkey[].[]",1168)
(1059,"user.enterkey[].[_15]",1170)
(1060,"time +=9",1061)
(1061,"controller.tau=>setkeyvalid.[]",1172)
(1062,"time +=4",1063)
(1063,"user.start[].[]",1103)
(1063,"user.start[].[]",1133)
(1064,"time +=6",1065)
(1065,"user.enterkey[].[]",1154)
(1065,"user.enterkey[].[_15]",1156)
(1066,"time +=4",1067)
(1067,"controller.checkkey[2].[]",1132)
(1068,"intruder.spyingdoor[false].[]",1074)
(1069,"intruder.spyingdoor[false].[]",1078)
(1070,"controller.lockeduser[].[]",1082)
(1070,"door.spiedon[].[]",1083)
(1071,"controller.checkcode[3].[]",1083)
(1071,"intruder.spyingdoor[false].[]",1084)
(1072,"door.spiedon[].[]",1076)
(1073,"user.keychecked[true].[]",1076)
(1073,"intruder.spyingdoor[false].[]",1077)
(1074,"time +=2",1075)
(1075,"controller.tau=>setkeyvalid.[]",1124)
(1076,"intruder.spyingdoor[false].[]",1080)
(1077,"user.keychecked[true].[]",1080)
(1078,"time +=9",1079)
(1079,"user.start[].[]",1059)
(1079,"user.start[].[]",1174)
(1080,"time +=9",1081)
(1081,"controller.tau=>setkeyvalid.[]",1173)
(1082,"controller.setarmed[].[]",1085)
(1082,"door.spiedon[].[]",1086)
(1083,"controller.lockeduser[].[]",1086)
(1083,"intruder.spyingdoor[false].[]",1087)
(1084,"controller.checkcode[3].[]",1087)
(1085,"door.lockdoor[].[]",1088)
(1085,"door.spiedon[].[]",1089)
(1086,"controller.setarmed[].[]",1089)
(1086,"intruder.spyingdoor[false].[]",1090)
(1087,"controller.lockeduser[].[]",1090)
(1088,"door.spiedon[].[]",1091)
(1089,"intruder.spyingdoor[false].[]",1092)
(1089,"door.lockdoor[].[]",1091)
(1090,"controller.setarmed[].[]",1092)
(1091,"intruder.spyingdoor[false].[]",1093)
(1092,"door.lockdoor[].[]",1093)
(1093,"time +=1",1094)
(1094,"user.codechecked[true].[]",1120)
(1095,"intruder.spyingdoor[false].[]",1096)
(1096,"time +=1",1097)
(1097,"user.enterkey[].[]",1116)
(1097,"user.enterkey[].[_15]",1118)
(1098,"intruder.spyingdoor[false].[]",1100)
(1099,"intruder.spyingdoor[false].[]",1102)
(1100,"time +=11",1101)
(1101,"controller.checkkey[2].[]",1194)
(1102,"time +=4",1103)
(1103,"user.enterkey[].[]",3430)
(1103,"user.enterkey[].[_15]",3431)
(1104,"intruder.spyingdoor[false].[]",1108)
(1105,"door.spiedon[].[]",1110)
(1106,"controller.setdoorstatus[true, false].[]",1110)
(1106,"intruder.spyingdoor[false].[]",1111)
(1107,"intruder.spyingdoor[false].[]",1112)
(1108,"time +=6",1109)
(1109,"controller.checkkey[2].[]",1158)
(1110,"intruder.spyingdoor[false].[]",1114)
(1111,"controller.setdoorstatus[true, false].[]",1114)
(1112,"time +=4",1113)
(1113,"controller.tau=>setkeyvalid.[]",1134)
(1114,"time +=9",1115)
(1115,"user.enterkey[].[_10]",1168)
(1115,"user.enterkey[].[]",1170)
(1116,"time +=10",1117)
(1117,"controller.checkkey[2].[]",1193)
(1118,"time +=15",1119)
(1119,"controller.checkkey[2].[]",1237)
(1120,"door.getlockstatus[].[]",1121)
(1121,"user.setstatus[false].[]",1122)
(1122,"time +=10",1123)
(1123,"user.enterkey[].[_10]",1207)
(1123,"user.enterkey[].[]",1209)
(1124,"controller.setkeyinvalid[].[]",1125)
(1125,"time +=1",1126)
(1126,"controller.checkcode[3].[]",1127)
(1127,"controller.lockeduser[].[]",1128)
(1128,"controller.setunarmed[].[]",1129)
(1129,"door.unlockdoor[].[]",1130)
(1130,"time +=1",1131)
(1131,"user.codechecked[true].[]",1135)
(1132,"controller.setkeyvalid[].[]",1136)
(1133,"user.opendoor[].[]",1138)
(1134,"controller.setkeyinvalid[].[]",1139)
(1135,"door.getlockstatus[].[]",1141)
(1136,"time +=1",1137)
(1137,"user.keychecked[true].[]",1145)
(1138,"door.opendoor[].[]",1142)
(1139,"time +=1",1140)
(1140,"controller.checkcode[3].[]",1147)
(1141,"user.setstatus[false].[]",1143)
(1142,"time +=10",3432)
(1143,"time +=1",1144)
(1144,"controller.setdoorstatus[true, false].[]",1148)
(1145,"time +=9",1146)
(1146,"controller.tau=>setkeyvalid.[]",1215)
(1147,"controller.lockeduser[].[]",1150)
(1148,"time +=9",1149)
(1149,"user.enterkey[].[_10]",3435)
(1149,"user.enterkey[].[]",3436)
(1150,"controller.setarmed[].[]",1151)
(1151,"door.lockdoor[].[]",1152)
(1152,"time +=1",1153)
(1153,"user.codechecked[true].[]",1159)
(1154,"time +=10",1155)
(1155,"controller.checkkey[2].[]",1227)
(1156,"time +=15",1157)
(1157,"controller.checkkey[2].[]",1264)
(1158,"controller.setkeyvalid[].[]",1160)
(1159,"door.getlockstatus[].[]",1162)
(1160,"time +=1",1161)
(1161,"user.keychecked[true].[]",1165)
(1162,"user.setstatus[false].[]",1163)
(1163,"time +=10",1164)
(1164,"user.enterkey[].[]",1223)
(1164,"user.enterkey[].[_15]",1225)
(1165,"time +=9",1166)
(1166,"controller.tau=>setkeyvalid.[]",1229)
(1167,"user.opendoor[].[]",1175)
(1168,"time +=10",1169)
(1169,"controller.checkkey[2].[]",1253)
(1170,"time +=15",1171)
(1171,"controller.checkkey[2].[]",1302)
(1172,"controller.setkeyinvalid[].[]",1176)
(1173,"controller.setkeyinvalid[].[]",1178)
(1174,"user.opendoor[].[]",1180)
(1175,"door.opendoor[].[]",1181)
(1176,"time +=1",1177)
(1177,"controller.checkcode[3].[]",1183)
(1178,"time +=1",1179)
(1179,"controller.checkcode[3].[]",1184)
(1180,"door.opendoor[].[]",1182)
(1181,"time +=10",3433)
(1182,"time +=10",3434)
(1183,"controller.lockeduser[].[]",1185)
(1184,"controller.lockeduser[].[]",1186)
(1185,"controller.setarmed[].[]",1187)
(1186,"controller.setarmed[].[]",1188)
(1187,"door.lockdoor[].[]",1189)
(1188,"door.lockdoor[].[]",1191)
(1189,"time +=1",1190)
(1190,"user.codechecked[true].[]",1195)
(1191,"time +=1",1192)
(1192,"user.codechecked[true].[]",1196)
(1193,"controller.setkeyvalid[].[]",1197)
(1194,"controller.setkeyvalid[].[]",1199)
(1195,"door.getlockstatus[].[]",1201)
(1196,"door.getlockstatus[].[]",1202)
(1197,"time +=1",1198)
(1198,"user.keychecked[true].[]",1211)
(1199,"time +=1",1200)
(1200,"user.keychecked[true].[]",1213)
(1201,"user.setstatus[false].[]",1203)
(1202,"user.setstatus[false].[]",1205)
(1203,"time +=10",1204)
(1204,"user.enterkey[].[_10]",1260)
(1204,"user.enterkey[].[]",1262)
(1205,"time +=10",1206)
(1206,"user.enterkey[].[]",1260)
(1206,"user.enterkey[].[_15]",1262)
(1207,"time +=10",1208)
(1208,"controller.checkkey[2].[]",1267)
(1209,"time +=15",1210)
(1210,"controller.checkkey[2].[]",1307)
(1211,"time +=9",1212)
(1212,"controller.tau=>setkeyvalid.[]",1266)
(1213,"time +=9",1214)
(1214,"controller.tau=>setkeyvalid.[]",1265)
(1215,"controller.setkeyinvalid[].[]",1216)
(1216,"time +=1",1217)
(1217,"controller.checkcode[3].[]",1218)
(1218,"controller.lockeduser[].[]",1219)
(1219,"controller.setarmed[].[]",1220)
(1220,"door.lockdoor[].[]",1221)
(1221,"time +=1",1222)
(1222,"user.codechecked[true].[]",1228)
(1223,"time +=10",1224)
(1224,"controller.checkkey[2].[]",1316)
(1225,"time +=14",1226)
(1226,"door.spiedon[].[]",1373)
(1227,"controller.setkeyvalid[].[]",1230)
(1228,"door.getlockstatus[].[]",1232)
(1229,"controller.setkeyinvalid[].[]",1233)
(1230,"time +=1",1231)
(1231,"user.keychecked[true].[]",1240)
(1232,"user.setstatus[false].[]",1235)
(1233,"time +=1",1234)
(1234,"controller.checkcode[3].[]",1242)
(1235,"time +=10",1236)
(1236,"user.enterkey[].[_10]",3437)
(1236,"user.enterkey[].[]",3438)
(1237,"controller.setkeyvalid[].[]",1238)
(1238,"time +=1",1239)
(1239,"user.keychecked[true].[]",1243)
(1240,"time +=9",1241)
(1241,"controller.tau=>setkeyvalid.[]",1308)
(1242,"controller.lockeduser[].[]",1245)
(1243,"time +=9",1244)
(1244,"controller.tau=>setkeyvalid.[]",1313)
(1245,"controller.setunarmed[].[]",1246)
(1246,"door.unlockdoor[].[]",1247)
(1247,"time +=1",1248)
(1248,"user.codechecked[true].[]",1249)
(1249,"door.getlockstatus[].[]",1250)
(1250,"user.setstatus[false].[]",1251)
(1251,"time +=1",1252)
(1252,"controller.setdoorstatus[true, false].[]",1254)
(1253,"controller.setkeyvalid[].[]",1256)
(1254,"time +=9",1255)
(1255,"user.enterkey[].[]",1341)
(1255,"user.enterkey[].[_15]",1343)
(1256,"time +=1",1257)
(1257,"user.keychecked[true].[]",1258)
(1258,"time +=9",1259)
(1259,"controller.tau=>setkeyvalid.[]",1349)
(1260,"time +=9",1261)
(1261,"door.spiedon[].[]",1399)
(1262,"time +=9",1263)
(1263,"door.spiedon[].[]",1384)
(1264,"controller.setkeyvalid[].[]",1272)
(1265,"controller.setkeyinvalid[].[]",1274)
(1266,"controller.setkeyinvalid[].[]",1268)
(1267,"controller.setkeyvalid[].[]",1270)
(1268,"time +=1",1269)
(1269,"controller.checkcode[3].[]",1276)
(1270,"time +=1",1271)
(1271,"user.keychecked[true].[]",1277)
(1272,"time +=1",1273)
(1273,"user.keychecked[true].[]",1279)
(1274,"time +=1",1275)
(1275,"controller.checkcode[3].[]",1281)
(1276,"controller.lockeduser[].[]",1282)
(1277,"time +=8",1278)
(1278,"door.spiedon[].[]",1397)
(1279,"time +=8",1280)
(1280,"door.spiedon[].[]",1369)
(1281,"controller.lockeduser[].[]",1283)
(1282,"controller.setunarmed[].[]",1284)
(1283,"controller.setunarmed[].[]",1285)
(1284,"door.unlockdoor[].[]",1286)
(1285,"door.unlockdoor[].[]",1288)
(1286,"time +=1",1287)
(1287,"user.codechecked[true].[]",1290)
(1288,"time +=1",1289)
(1289,"user.codechecked[true].[]",1291)
(1290,"door.getlockstatus[].[]",1292)
(1291,"door.getlockstatus[].[]",1293)
(1292,"user.setstatus[false].[]",1294)
(1293,"user.setstatus[false].[]",1296)
(1294,"time +=1",1295)
(1295,"controller.setdoorstatus[true, false].[]",1298)
(1296,"time +=1",1297)
(1297,"controller.setdoorstatus[true, false].[]",1300)
(1298,"time +=6",1299)
(1299,"door.spiedon[].[]",1395)
(1300,"time +=6",1301)
(1301,"door.spiedon[].[]",1370)
(1302,"controller.setkeyvalid[].[]",1303)
(1303,"time +=1",1304)
(1304,"user.keychecked[true].[]",1305)
(1305,"time +=5",1306)
(1306,"door.spiedon[].[]",1398)
(1307,"controller.setkeyvalid[].[]",1309)
(1308,"controller.setkeyinvalid[].[]",1311)
(1309,"time +=1",1310)
(1310,"user.keychecked[true].[]",1319)
(1311,"time +=1",1312)
(1312,"controller.checkcode[3].[]",1321)
(1313,"controller.setkeyinvalid[].[]",1314)
(1314,"time +=1",1315)
(1315,"controller.checkcode[3].[]",1322)
(1316,"controller.setkeyvalid[].[]",1317)
(1317,"time +=1",1318)
(1318,"user.keychecked[true].[]",1323)
(1319,"time +=3",1320)
(1320,"door.spiedon[].[]",1352)
(1321,"controller.lockeduser[].[]",1325)
(1322,"controller.lockeduser[].[]",1326)
(1323,"time +=3",1324)
(1324,"door.spiedon[].[]",1385)
(1325,"controller.setunarmed[].[]",1327)
(1326,"controller.setunarmed[].[]",1328)
(1327,"door.unlockdoor[].[]",1329)
(1328,"door.unlockdoor[].[]",1331)
(1329,"time +=1",1330)
(1330,"user.codechecked[true].[]",1333)
(1331,"time +=1",1332)
(1332,"user.codechecked[true].[]",1334)
(1333,"door.getlockstatus[].[]",1335)
(1334,"door.getlockstatus[].[]",1336)
(1335,"user.setstatus[false].[]",1337)
(1336,"user.setstatus[false].[]",1339)
(1337,"time +=1",1338)
(1338,"controller.setdoorstatus[true, false].[]",1345)
(1339,"time +=1",1340)
(1340,"controller.setdoorstatus[true, false].[]",1347)
(1341,"time +=2",1342)
(1342,"door.spiedon[].[]",1353)
(1343,"time +=2",1344)
(1344,"door.spiedon[].[]",1355)
(1345,"time +=1",1346)
(1346,"door.spiedon[].[]",1386)
(1347,"time +=1",1348)
(1348,"door.spiedon[].[]",1354)
(1349,"controller.setkeyinvalid[].[]",1350)
(1350,"time +=1",1351)
(1351,"controller.checkcode[3].[]",1356)
(1351,"door.spiedon[].[]",1357)
(1352,"intruder.spyingdoor[false].[]",1358)
(1353,"intruder.spyingdoor[false].[]",1360)
(1354,"intruder.spyingdoor[false].[]",1362)
(1355,"intruder.spyingdoor[false].[]",1367)
(1356,"controller.lockeduser[].[]",1364)
(1356,"door.spiedon[].[]",1365)
(1357,"controller.checkcode[3].[]",1365)
(1357,"intruder.spyingdoor[false].[]",1366)
(1358,"time +=6",1359)
(1359,"controller.tau=>setkeyvalid.[]",1473)
(1360,"time +=8",1361)
(1361,"controller.checkkey[2].[]",1488)
(1362,"time +=8",1363)
(1363,"user.enterkey[].[_10]",1495)
(1363,"user.enterkey[].[]",1497)
(1364,"controller.setarmed[].[]",1396)
(1364,"door.spiedon[].[]",1371)
(1365,"controller.lockeduser[].[]",1371)
(1365,"intruder.spyingdoor[false].[]",1372)
(1366,"controller.checkcode[3].[]",1372)
(1367,"time +=13",1368)
(1368,"controller.checkkey[2].[]",1525)
(1369,"intruder.spyingdoor[false].[]",1374)
(1370,"intruder.spyingdoor[false].[]",1376)
(1371,"controller.setarmed[].[]",1379)
(1371,"intruder.spyingdoor[false].[]",1378)
(1372,"controller.lockeduser[].[]",1378)
(1373,"intruder.spyingdoor[false].[]",1380)
(1374,"time +=1",1375)
(1375,"controller.tau=>setkeyvalid.[]",1409)
(1376,"time +=3",1377)
(1377,"user.enterkey[].[_10]",1439)
(1377,"user.enterkey[].[]",1441)
(1378,"controller.setarmed[].[]",1382)
(1379,"intruder.spyingdoor[false].[]",1382)
(1379,"door.lockdoor[].[]",1383)
(1380,"time +=1",1381)
(1381,"controller.checkkey[2].[]",1410)
(1382,"door.lockdoor[].[]",1387)
(1383,"intruder.spyingdoor[false].[]",1387)
(1384,"intruder.spyingdoor[false].[]",1389)
(1385,"intruder.spyingdoor[false].[]",1391)
(1386,"intruder.spyingdoor[false].[]",1393)
(1387,"time +=1",1388)
(1388,"user.codechecked[true].[]",1415)
(1389,"time +=6",1390)
(1390,"controller.checkkey[2].[]",1468)
(1391,"time +=6",1392)
(1392,"controller.tau=>setkeyvalid.[]",1463)
(1393,"time +=8",1394)
(1394,"user.enterkey[].[]",1495)
(1394,"user.enterkey[].[_15]",1497)
(1395,"intruder.spyingdoor[false].[]",1400)
(1396,"door.lockdoor[].[]",1402)
(1396,"door.spiedon[].[]",1379)
(1397,"intruder.spyingdoor[false].[]",1403)
(1398,"intruder.spyingdoor[false].[]",1405)
(1399,"intruder.spyingdoor[false].[]",1407)
(1400,"time +=3",1401)
(1401,"user.enterkey[].[]",1439)
(1401,"user.enterkey[].[_15]",1441)
(1402,"door.spiedon[].[]",1383)
(1403,"time +=1",1404)
(1404,"controller.tau=>setkeyvalid.[]",1416)
(1405,"time +=4",1406)
(1406,"controller.tau=>setkeyvalid.[]",1455)
(1407,"time +=1",1408)
(1408,"controller.checkkey[2].[]",1422)
(1409,"controller.setkeyinvalid[].[]",1411)
(1410,"controller.setkeyvalid[].[]",1413)
(1411,"time +=1",1412)
(1412,"controller.checkcode[3].[]",1425)
(1413,"time +=1",1414)
(1414,"user.keychecked[true].[]",1426)
(1415,"door.getlockstatus[].[]",1417)
(1416,"controller.setkeyinvalid[].[]",1418)
(1417,"user.setstatus[false].[]",1420)
(1418,"time +=1",1419)
(1419,"controller.checkcode[3].[]",1431)
(1420,"time +=10",1421)
(1421,"user.enterkey[].[]",3439)
(1421,"user.enterkey[].[_15]",3440)
(1422,"controller.setkeyvalid[].[]",1423)
(1423,"time +=1",1424)
(1424,"user.keychecked[true].[]",1428)
(1425,"controller.lockeduser[].[]",1430)
(1426,"time +=9",1427)
(1427,"controller.tau=>setkeyvalid.[]",1509)
(1428,"time +=9",1429)
(1429,"controller.tau=>setkeyvalid.[]",1510)
(1430,"controller.setunarmed[].[]",1432)
(1431,"controller.lockeduser[].[]",1433)
(1432,"door.unlockdoor[].[]",1434)
(1433,"controller.setunarmed[].[]",1436)
(1434,"time +=1",1435)
(1435,"user.codechecked[true].[]",1443)
(1436,"door.unlockdoor[].[]",1437)
(1437,"time +=1",1438)
(1438,"user.codechecked[true].[]",1444)
(1439,"time +=10",1440)
(1440,"controller.checkkey[2].[]",1536)
(1441,"time +=15",1442)
(1442,"controller.checkkey[2].[]",1570)
(1443,"door.getlockstatus[].[]",1445)
(1444,"door.getlockstatus[].[]",1446)
(1445,"user.setstatus[false].[]",1447)
(1446,"user.setstatus[false].[]",1449)
(1447,"time +=1",1448)
(1448,"controller.setdoorstatus[true, false].[]",1451)
(1449,"time +=1",1450)
(1450,"controller.setdoorstatus[true, false].[]",1453)
(1451,"time +=9",1452)
(1452,"user.enterkey[].[_10]",1537)
(1452,"user.enterkey[].[]",1539)
(1453,"time +=9",1454)
(1454,"user.enterkey[].[]",1537)
(1454,"user.enterkey[].[_15]",1539)
(1455,"controller.setkeyinvalid[].[]",1456)
(1456,"time +=1",1457)
(1457,"controller.checkcode[3].[]",1458)
(1458,"controller.lockeduser[].[]",1459)
(1459,"controller.setarmed[].[]",1460)
(1460,"door.lockdoor[].[]",1461)
(1461,"time +=1",1462)
(1462,"user.codechecked[true].[]",1464)
(1463,"controller.setkeyinvalid[].[]",1465)
(1464,"door.getlockstatus[].[]",1467)
(1465,"time +=1",1466)
(1466,"controller.checkcode[3].[]",1476)
(1467,"user.setstatus[false].[]",1469)
(1468,"controller.setkeyvalid[].[]",1471)
(1469,"time +=10",1470)
(1470,"user.enterkey[].[_10]",3441)
(1470,"user.enterkey[].[]",3442)
(1471,"time +=1",1472)
(1472,"user.keychecked[true].[]",1477)
(1473,"controller.setkeyinvalid[].[]",1474)
(1474,"time +=1",1475)
(1475,"controller.checkcode[3].[]",1479)
(1476,"controller.lockeduser[].[]",1480)
(1477,"time +=9",1478)
(1478,"controller.tau=>setkeyvalid.[]",1551)
(1479,"controller.lockeduser[].[]",1481)
(1480,"controller.setunarmed[].[]",1482)
(1481,"controller.setunarmed[].[]",1483)
(1482,"door.unlockdoor[].[]",1484)
(1483,"door.unlockdoor[].[]",1486)
(1484,"time +=1",1485)
(1485,"user.codechecked[true].[]",1489)
(1486,"time +=1",1487)
(1487,"user.codechecked[true].[]",1490)
(1488,"controller.setkeyvalid[].[]",1491)
(1489,"door.getlockstatus[].[]",1493)
(1490,"door.getlockstatus[].[]",1494)
(1491,"time +=1",1492)
(1492,"user.keychecked[true].[]",1503)
(1493,"user.setstatus[false].[]",1499)
(1494,"user.setstatus[false].[]",1501)
(1495,"time +=10",1496)
(1496,"controller.checkkey[2].[]",1564)
(1497,"time +=15",1498)
(1498,"controller.checkkey[2].[]",1602)
(1499,"time +=1",1500)
(1500,"controller.setdoorstatus[true, false].[]",1505)
(1501,"time +=1",1502)
(1502,"controller.setdoorstatus[true, false].[]",1507)
(1503,"time +=9",1504)
(1504,"controller.tau=>setkeyvalid.[]",1571)
(1505,"time +=9",1506)
(1506,"user.enterkey[].[]",1559)
(1506,"user.enterkey[].[_15]",1561)
(1507,"time +=9",1508)
(1508,"user.enterkey[].[_10]",1559)
(1508,"user.enterkey[].[]",1561)
(1509,"controller.setkeyinvalid[].[]",1511)
(1510,"controller.setkeyinvalid[].[]",1513)
(1511,"time +=1",1512)
(1512,"controller.checkcode[3].[]",1515)
(1513,"time +=1",1514)
(1514,"controller.checkcode[3].[]",1516)
(1515,"controller.lockeduser[].[]",1517)
(1516,"controller.lockeduser[].[]",1518)
(1517,"controller.setunarmed[].[]",1519)
(1518,"controller.setunarmed[].[]",1520)
(1519,"door.unlockdoor[].[]",1521)
(1520,"door.unlockdoor[].[]",1523)
(1521,"time +=1",1522)
(1522,"user.codechecked[true].[]",1526)
(1523,"time +=1",1524)
(1524,"user.codechecked[true].[]",1527)
(1525,"controller.setkeyvalid[].[]",1528)
(1526,"door.getlockstatus[].[]",1530)
(1527,"door.getlockstatus[].[]",1531)
(1528,"time +=1",1529)
(1529,"user.keychecked[true].[]",1543)
(1530,"user.setstatus[false].[]",1532)
(1531,"user.setstatus[false].[]",1534)
(1532,"time +=1",1533)
(1533,"controller.setdoorstatus[true, false].[]",1545)
(1534,"time +=1",1535)
(1535,"controller.setdoorstatus[true, false].[]",1549)
(1536,"controller.setkeyvalid[].[]",1541)
(1537,"time +=10",1538)
(1538,"controller.checkkey[2].[]",1598)
(1539,"time +=15",1540)
(1540,"controller.checkkey[2].[]",1632)
(1541,"time +=1",1542)
(1542,"user.keychecked[true].[]",1547)
(1543,"time +=9",1544)
(1544,"controller.tau=>setkeyvalid.[]",1591)
(1545,"time +=9",1546)
(1546,"user.enterkey[].[_10]",1592)
(1546,"user.enterkey[].[]",1594)
(1547,"time +=9",1548)
(1548,"controller.tau=>setkeyvalid.[]",1601)
(1549,"time +=9",1550)
(1550,"user.enterkey[].[]",1592)
(1550,"user.enterkey[].[_15]",1594)
(1551,"controller.setkeyinvalid[].[]",1552)
(1552,"time +=1",1553)
(1553,"controller.checkcode[3].[]",1554)
(1554,"controller.lockeduser[].[]",1555)
(1555,"controller.setunarmed[].[]",1556)
(1556,"door.unlockdoor[].[]",1557)
(1557,"time +=1",1558)
(1558,"user.codechecked[true].[]",1563)
(1559,"time +=10",1560)
(1560,"controller.checkkey[2].[]",1633)
(1561,"time +=12",1562)
(1562,"door.spiedon[].[]",1713)
(1563,"door.getlockstatus[].[]",1565)
(1564,"controller.setkeyvalid[].[]",1566)
(1565,"user.setstatus[false].[]",1568)
(1566,"time +=1",1567)
(1567,"user.keychecked[true].[]",1576)
(1568,"time +=1",1569)
(1569,"controller.setdoorstatus[true, false].[]",1578)
(1570,"controller.setkeyvalid[].[]",1572)
(1571,"controller.setkeyinvalid[].[]",1574)
(1572,"time +=1",1573)
(1573,"user.keychecked[true].[]",1580)
(1574,"time +=1",1575)
(1575,"controller.checkcode[3].[]",1582)
(1576,"time +=9",1577)
(1577,"controller.tau=>setkeyvalid.[]",1629)
(1578,"time +=9",1579)
(1579,"user.enterkey[].[_10]",3443)
(1579,"user.enterkey[].[]",3444)
(1580,"time +=9",1581)
(1581,"controller.tau=>setkeyvalid.[]",1638)
(1582,"controller.lockeduser[].[]",1583)
(1583,"controller.setarmed[].[]",1584)
(1584,"door.lockdoor[].[]",1585)
(1585,"time +=1",1586)
(1586,"user.codechecked[true].[]",1587)
(1587,"door.getlockstatus[].[]",1588)
(1588,"user.setstatus[false].[]",1589)
(1589,"time +=10",1590)
(1590,"user.enterkey[].[]",1688)
(1590,"user.enterkey[].[_15]",1689)
(1590,"door.spiedon[].[]",1690)
(1591,"controller.setkeyinvalid[].[]",1596)
(1592,"time +=7",1593)
(1593,"door.spiedon[].[]",1708)
(1594,"time +=7",1595)
(1595,"door.spiedon[].[]",1707)
(1596,"time +=1",1597)
(1597,"controller.checkcode[3].[]",1607)
(1598,"controller.setkeyvalid[].[]",1599)
(1599,"time +=1",1600)
(1600,"user.keychecked[true].[]",1608)
(1601,"controller.setkeyinvalid[].[]",1603)
(1602,"controller.setkeyvalid[].[]",1605)
(1603,"time +=1",1604)
(1604,"controller.checkcode[3].[]",1610)
(1605,"time +=1",1606)
(1606,"user.keychecked[true].[]",1611)
(1607,"controller.lockeduser[].[]",1613)
(1608,"time +=6",1609)
(1609,"door.spiedon[].[]",1656)
(1610,"controller.lockeduser[].[]",1614)
(1611,"time +=6",1612)
(1612,"door.spiedon[].[]",1691)
(1613,"controller.setarmed[].[]",1615)
(1614,"controller.setarmed[].[]",1616)
(1615,"door.lockdoor[].[]",1617)
(1616,"door.lockdoor[].[]",1619)
(1617,"time +=1",1618)
(1618,"user.codechecked[true].[]",1621)
(1619,"time +=1",1620)
(1620,"user.codechecked[true].[]",1622)
(1621,"door.getlockstatus[].[]",1623)
(1622,"door.getlockstatus[].[]",1624)
(1623,"user.setstatus[false].[]",1625)
(1624,"user.setstatus[false].[]",1627)
(1625,"time +=5",1626)
(1626,"door.spiedon[].[]",1702)
(1627,"time +=5",1628)
(1628,"door.spiedon[].[]",1701)
(1629,"controller.setkeyinvalid[].[]",1630)
(1630,"time +=1",1631)
(1631,"controller.checkcode[3].[]",1641)
(1632,"controller.setkeyvalid[].[]",1634)
(1633,"controller.setkeyvalid[].[]",1636)
(1634,"time +=1",1635)
(1635,"user.keychecked[true].[]",1642)
(1636,"time +=1",1637)
(1637,"user.keychecked[true].[]",1644)
(1638,"controller.setkeyinvalid[].[]",1639)
(1639,"time +=1",1640)
(1640,"controller.checkcode[3].[]",1646)
(1641,"controller.lockeduser[].[]",1647)
(1642,"time +=1",1643)
(1643,"door.spiedon[].[]",1655)
(1644,"time +=1",1645)
(1645,"door.spiedon[].[]",1669)
(1646,"controller.lockeduser[].[]",1648)
(1647,"controller.setarmed[].[]",1649)
(1648,"controller.setarmed[].[]",1650)
(1649,"door.lockdoor[].[]",1651)
(1650,"door.lockdoor[].[]",1653)
(1651,"time +=1",1652)
(1652,"user.codechecked[true].[]",1657)
(1652,"door.spiedon[].[]",1658)
(1653,"time +=1",1654)
(1654,"user.codechecked[true].[]",1659)
(1654,"door.spiedon[].[]",1660)
(1655,"intruder.spyingdoor[false].[]",1661)
(1656,"intruder.spyingdoor[false].[]",1663)
(1657,"door.getlockstatus[].[]",1685)
(1657,"door.spiedon[].[]",1665)
(1658,"user.codechecked[true].[]",1665)
(1658,"intruder.spyingdoor[false].[]",1666)
(1659,"door.getlockstatus[].[]",1684)
(1659,"door.spiedon[].[]",1667)
(1660,"user.codechecked[true].[]",1667)
(1660,"intruder.spyingdoor[false].[]",1668)
(1661,"time +=8",1662)
(1662,"controller.tau=>setkeyvalid.[]",1754)
(1663,"time +=3",1664)
(1664,"controller.tau=>setkeyvalid.[]",1717)
(1665,"intruder.spyingdoor[false].[]",1670)
(1665,"door.getlockstatus[].[]",1671)
(1666,"user.codechecked[true].[]",1670)
(1667,"intruder.spyingdoor[false].[]",1672)
(1667,"door.getlockstatus[].[]",1673)
(1668,"user.codechecked[true].[]",1672)
(1669,"intruder.spyingdoor[false].[]",1674)
(1670,"door.getlockstatus[].[]",1677)
(1671,"user.setstatus[false].[]",1676)
(1671,"intruder.spyingdoor[false].[]",1677)
(1672,"door.getlockstatus[].[]",1679)
(1673,"user.setstatus[false].[]",1678)
(1673,"intruder.spyingdoor[false].[]",1679)
(1674,"time +=8",1675)
(1675,"controller.tau=>setkeyvalid.[]",1755)
(1676,"intruder.spyingdoor[false].[]",1680)
(1677,"user.setstatus[false].[]",1680)
(1678,"intruder.spyingdoor[false].[]",1682)
(1679,"user.setstatus[false].[]",1682)
(1680,"time +=10",1681)
(1681,"user.enterkey[].[]",1775)
(1681,"user.enterkey[].[_15]",1777)
(1682,"time +=10",1683)
(1683,"user.enterkey[].[_10]",1775)
(1683,"user.enterkey[].[]",1777)
(1684,"user.setstatus[false].[]",1686)
(1684,"door.spiedon[].[]",1673)
(1685,"user.setstatus[false].[]",1687)
(1685,"door.spiedon[].[]",1671)
(1686,"door.spiedon[].[]",1678)
(1687,"door.spiedon[].[]",1676)
(1688,"door.spiedon[].[]",1692)
(1689,"door.spiedon[].[]",1693)
(1690,"user.enterkey[].[]",1692)
(1690,"user.enterkey[].[_15]",1693)
(1690,"intruder.spyingdoor[false].[]",1694)
(1691,"intruder.spyingdoor[false].[]",1695)
(1692,"intruder.spyingdoor[false].[]",1697)
(1693,"intruder.spyingdoor[false].[]",1699)
(1694,"user.enterkey[].[]",1697)
(1694,"user.enterkey[].[_15]",1699)
(1695,"time +=3",1696)
(1696,"controller.tau=>setkeyvalid.[]",1716)
(1697,"time +=10",1698)
(1698,"controller.checkkey[2].[]",1787)
(1699,"time +=15",1700)
(1700,"controller.checkkey[2].[]",1820)
(1701,"intruder.spyingdoor[false].[]",1703)
(1702,"intruder.spyingdoor[false].[]",1705)
(1703,"time +=5",1704)
(1704,"user.enterkey[].[]",1750)
(1704,"user.enterkey[].[_15]",1752)
(1705,"time +=5",1706)
(1706,"user.enterkey[].[_10]",1750)
(1706,"user.enterkey[].[]",1752)
(1707,"intruder.spyingdoor[false].[]",1709)
(1708,"intruder.spyingdoor[false].[]",1711)
(1709,"time +=8",1710)
(1710,"controller.checkkey[2].[]",1760)
(1711,"time +=3",1712)
(1712,"controller.checkkey[2].[]",1718)
(1713,"intruder.spyingdoor[false].[]",1714)
(1714,"time +=3",1715)
(1715,"controller.checkkey[2].[]",1719)
(1716,"controller.setkeyinvalid[].[]",1720)
(1717,"controller.setkeyinvalid[].[]",1722)
(1718,"controller.setkeyvalid[].[]",1724)
(1719,"controller.setkeyvalid[].[]",1726)
(1720,"time +=1",1721)
(1721,"controller.checkcode[3].[]",1728)
(1722,"time +=1",1723)
(1723,"controller.checkcode[3].[]",1729)
(1724,"time +=1",1725)
(1725,"user.keychecked[true].[]",1730)
(1726,"time +=1",1727)
(1727,"user.keychecked[true].[]",1732)
(1728,"controller.lockeduser[].[]",1734)
(1729,"controller.lockeduser[].[]",1735)
(1730,"time +=9",1731)
(1731,"controller.tau=>setkeyvalid.[]",1793)
(1732,"time +=9",1733)
(1733,"controller.tau=>setkeyvalid.[]",1792)
(1734,"controller.setarmed[].[]",1736)
(1735,"controller.setarmed[].[]",1737)
(1736,"door.lockdoor[].[]",1738)
(1737,"door.lockdoor[].[]",1740)
(1738,"time +=1",1739)
(1739,"user.codechecked[true].[]",1742)
(1740,"time +=1",1741)
(1741,"user.codechecked[true].[]",1743)
(1742,"door.getlockstatus[].[]",1744)
(1743,"door.getlockstatus[].[]",1745)
(1744,"user.setstatus[false].[]",1746)
(1745,"user.setstatus[false].[]",1748)
(1746,"time +=10",1747)
(1747,"user.enterkey[].[_10]",1816)
(1747,"user.enterkey[].[]",1818)
(1748,"time +=10",1749)
(1749,"user.enterkey[].[]",1816)
(1749,"user.enterkey[].[_15]",1818)
(1750,"time +=10",1751)
(1751,"controller.checkkey[2].[]",1821)
(1752,"time +=15",1753)
(1753,"controller.checkkey[2].[]",1850)
(1754,"controller.setkeyinvalid[].[]",1756)
(1755,"controller.setkeyinvalid[].[]",1758)
(1756,"time +=1",1757)
(1757,"controller.checkcode[3].[]",1763)
(1758,"time +=1",1759)
(1759,"controller.checkcode[3].[]",1764)
(1760,"controller.setkeyvalid[].[]",1761)
(1761,"time +=1",1762)
(1762,"user.keychecked[true].[]",1765)
(1763,"controller.lockeduser[].[]",1767)
(1764,"controller.lockeduser[].[]",1768)
(1765,"time +=9",1766)
(1766,"controller.tau=>setkeyvalid.[]",1830)
(1767,"controller.setarmed[].[]",1769)
(1768,"controller.setarmed[].[]",1770)
(1769,"door.lockdoor[].[]",1771)
(1770,"door.lockdoor[].[]",1773)
(1771,"time +=1",1772)
(1772,"user.codechecked[true].[]",1779)
(1773,"time +=1",1774)
(1774,"user.codechecked[true].[]",1780)
(1775,"time +=10",1776)
(1776,"controller.checkkey[2].[]",1838)
(1777,"time +=15",1778)
(1778,"controller.checkkey[2].[]",1871)
(1779,"door.getlockstatus[].[]",1781)
(1780,"door.getlockstatus[].[]",1782)
(1781,"user.setstatus[false].[]",1783)
(1782,"user.setstatus[false].[]",1785)
(1783,"time +=10",1784)
(1784,"user.enterkey[].[_10]",1843)
(1784,"user.enterkey[].[]",1845)
(1785,"time +=10",1786)
(1786,"user.enterkey[].[]",1843)
(1786,"user.enterkey[].[_15]",1845)
(1787,"controller.setkeyvalid[].[]",1788)
(1788,"time +=1",1789)
(1789,"user.keychecked[true].[]",1790)
(1790,"time +=9",1791)
(1791,"controller.tau=>setkeyvalid.[]",1849)
(1792,"controller.setkeyinvalid[].[]",1794)
(1793,"controller.setkeyinvalid[].[]",1796)
(1794,"time +=1",1795)
(1795,"controller.checkcode[3].[]",1798)
(1796,"time +=1",1797)
(1797,"controller.checkcode[3].[]",1799)
(1798,"controller.lockeduser[].[]",1800)
(1799,"controller.lockeduser[].[]",1801)
(1800,"controller.setarmed[].[]",1802)
(1801,"controller.setarmed[].[]",1803)
(1802,"door.lockdoor[].[]",1804)
(1803,"door.lockdoor[].[]",1806)
(1804,"time +=1",1805)
(1805,"user.codechecked[true].[]",1808)
(1806,"time +=1",1807)
(1807,"user.codechecked[true].[]",1809)
(1808,"door.getlockstatus[].[]",1810)
(1809,"door.getlockstatus[].[]",1811)
(1810,"user.setstatus[false].[]",1812)
(1811,"user.setstatus[false].[]",1814)
(1812,"time +=10",1813)
(1813,"user.enterkey[].[_10]",1876)
(1813,"user.enterkey[].[]",1878)
(1814,"time +=10",1815)
(1815,"user.enterkey[].[]",1876)
(1815,"user.enterkey[].[_15]",1878)
(1816,"time +=10",1817)
(1817,"controller.checkkey[2].[]",1881)
(1818,"time +=15",1819)
(1819,"controller.checkkey[2].[]",1960)
(1819,"door.spiedon[].[]",1961)
(1820,"controller.setkeyvalid[].[]",1822)
(1821,"controller.setkeyvalid[].[]",1824)
(1822,"time +=1",1823)
(1823,"user.keychecked[true].[]",1826)
(1824,"time +=1",1825)
(1825,"user.keychecked[true].[]",1828)
(1826,"time +=9",1827)
(1827,"controller.tau=>setkeyvalid.[]",1870)
(1828,"time +=9",1829)
(1829,"controller.tau=>setkeyvalid.[]",1880)
(1830,"controller.setkeyinvalid[].[]",1831)
(1831,"time +=1",1832)
(1832,"controller.checkcode[3].[]",1833)
(1833,"controller.lockeduser[].[]",1834)
(1834,"controller.setarmed[].[]",1835)
(1835,"door.lockdoor[].[]",1836)
(1836,"time +=1",1837)
(1837,"user.codechecked[true].[]",1839)
(1838,"controller.setkeyvalid[].[]",1840)
(1839,"door.getlockstatus[].[]",1842)
(1840,"time +=1",1841)
(1841,"user.keychecked[true].[]",1855)
(1842,"user.setstatus[false].[]",1847)
(1843,"time +=10",1844)
(1844,"controller.checkkey[2].[]",1948)
(1844,"door.spiedon[].[]",1949)
(1845,"time +=10",1846)
(1846,"door.spiedon[].[]",1936)
(1847,"time +=10",1848)
(1848,"user.enterkey[].[_10]",3445)
(1848,"user.enterkey[].[]",3446)
(1848,"door.spiedon[].[]",1972)
(1849,"controller.setkeyinvalid[].[]",1851)
(1850,"controller.setkeyvalid[].[]",1853)
(1851,"time +=1",1852)
(1852,"controller.checkcode[3].[]",1857)
(1853,"time +=1",1854)
(1854,"user.keychecked[true].[]",1858)
(1855,"time +=9",1856)
(1856,"controller.tau=>setkeyvalid.[]",1937)
(1856,"door.spiedon[].[]",1938)
(1857,"controller.lockeduser[].[]",1860)
(1858,"time +=9",1859)
(1859,"controller.tau=>setkeyvalid.[]",1924)
(1859,"door.spiedon[].[]",1925)
(1860,"controller.setunarmed[].[]",1861)
(1861,"door.unlockdoor[].[]",1862)
(1862,"time +=1",1863)
(1863,"user.codechecked[true].[]",1864)
(1864,"door.getlockstatus[].[]",1865)
(1865,"user.setstatus[false].[]",1866)
(1866,"time +=1",1867)
(1867,"controller.setdoorstatus[true, false].[]",1868)
(1868,"time +=7",1869)
(1869,"door.spiedon[].[]",1950)
(1870,"controller.setkeyinvalid[].[]",1872)
(1871,"controller.setkeyvalid[].[]",1874)
(1872,"time +=1",1873)
(1873,"controller.checkcode[3].[]",1886)
(1874,"time +=1",1875)
(1875,"user.keychecked[true].[]",1890)
(1876,"time +=5",1877)
(1877,"door.spiedon[].[]",1912)
(1878,"time +=5",1879)
(1879,"door.spiedon[].[]",1962)
(1880,"controller.setkeyinvalid[].[]",1882)
(1881,"controller.setkeyvalid[].[]",1884)
(1882,"time +=1",1883)
(1883,"controller.checkcode[3].[]",1887)
(1884,"time +=1",1885)
(1885,"user.keychecked[true].[]",1888)
(1886,"controller.lockeduser[].[]",1892)
(1887,"controller.lockeduser[].[]",1893)
(1888,"time +=4",1889)
(1889,"door.spiedon[].[]",1926)
(1890,"time +=4",1891)
(1891,"door.spiedon[].[]",1913)
(1892,"controller.setunarmed[].[]",1894)
(1893,"controller.setunarmed[].[]",1895)
(1894,"door.unlockdoor[].[]",1896)
(1895,"door.unlockdoor[].[]",1898)
(1896,"time +=1",1897)
(1897,"user.codechecked[true].[]",1900)
(1898,"time +=1",1899)
(1899,"user.codechecked[true].[]",1901)
(1900,"door.getlockstatus[].[]",1902)
(1901,"door.getlockstatus[].[]",1903)
(1902,"user.setstatus[false].[]",1904)
(1903,"user.setstatus[false].[]",1906)
(1904,"time +=1",1905)
(1905,"controller.setdoorstatus[true, false].[]",1908)
(1906,"time +=1",1907)
(1907,"controller.setdoorstatus[true, false].[]",1910)
(1908,"time +=2",1909)
(1909,"door.spiedon[].[]",1914)
(1910,"time +=2",1911)
(1911,"door.spiedon[].[]",1915)
(1912,"intruder.spyingdoor[false].[]",1916)
(1913,"intruder.spyingdoor[false].[]",1918)
(1914,"intruder.spyingdoor[false].[]",1920)
(1915,"intruder.spyingdoor[false].[]",1922)
(1916,"time +=5",1917)
(1917,"controller.checkkey[2].[]",2011)
(1918,"time +=5",1919)
(1919,"controller.tau=>setkeyvalid.[]",2004)
(1920,"time +=7",1921)
(1921,"user.enterkey[].[_10]",2038)
(1921,"user.enterkey[].[]",2040)
(1922,"time +=7",1923)
(1923,"user.enterkey[].[]",2038)
(1923,"user.enterkey[].[_15]",2040)
(1924,"controller.setkeyinvalid[].[]",1927)
(1924,"door.spiedon[].[]",1928)
(1925,"controller.tau=>setkeyvalid.[]",1928)
(1925,"intruder.spyingdoor[false].[]",1929)
(1926,"intruder.spyingdoor[false].[]",1930)
(1927,"door.spiedon[].[]",1932)
(1928,"controller.setkeyinvalid[].[]",1932)
(1928,"intruder.spyingdoor[false].[]",1933)
(1929,"controller.tau=>setkeyvalid.[]",1933)
(1930,"time +=5",1931)
(1931,"controller.tau=>setkeyvalid.[]",2005)
(1932,"intruder.spyingdoor[false].[]",1934)
(1933,"controller.setkeyinvalid[].[]",1934)
(1934,"time +=1",1935)
(1935,"controller.checkcode[3].[]",1979)
(1936,"intruder.spyingdoor[false].[]",1939)
(1937,"controller.setkeyinvalid[].[]",1941)
(1937,"door.spiedon[].[]",1942)
(1938,"controller.tau=>setkeyvalid.[]",1942)
(1938,"intruder.spyingdoor[false].[]",1943)
(1939,"time +=5",1940)
(1940,"controller.checkkey[2].[]",2010)
(1941,"door.spiedon[].[]",1944)
(1942,"controller.setkeyinvalid[].[]",1944)
(1942,"intruder.spyingdoor[false].[]",1945)
(1943,"controller.tau=>setkeyvalid.[]",1945)
(1944,"intruder.spyingdoor[false].[]",1946)
(1945,"controller.setkeyinvalid[].[]",1946)
(1946,"time +=1",1947)
(1947,"controller.checkcode[3].[]",1976)
(1948,"controller.setkeyvalid[].[]",1951)
(1948,"door.spiedon[].[]",1952)
(1949,"controller.checkkey[2].[]",1952)
(1949,"intruder.spyingdoor[false].[]",1953)
(1950,"intruder.spyingdoor[false].[]",1954)
(1951,"door.spiedon[].[]",1956)
(1952,"controller.setkeyvalid[].[]",1956)
(1952,"intruder.spyingdoor[false].[]",1957)
(1953,"controller.checkkey[2].[]",1957)
(1954,"time +=2",1955)
(1955,"user.enterkey[].[]",1996)
(1955,"user.enterkey[].[_15]",1998)
(1956,"intruder.spyingdoor[false].[]",1958)
(1957,"controller.setkeyvalid[].[]",1958)
(1958,"time +=1",1959)
(1959,"user.keychecked[true].[]",1974)
(1960,"controller.setkeyvalid[].[]",1963)
(1960,"door.spiedon[].[]",1964)
(1961,"controller.checkkey[2].[]",1964)
(1961,"intruder.spyingdoor[false].[]",1965)
(1962,"intruder.spyingdoor[false].[]",1966)
(1963,"door.spiedon[].[]",1968)
(1964,"controller.setkeyvalid[].[]",1968)
(1964,"intruder.spyingdoor[false].[]",1969)
(1965,"controller.checkkey[2].[]",1969)
(1966,"time +=10",1967)
(1967,"controller.checkkey[2].[]",2052)
(1968,"intruder.spyingdoor[false].[]",1970)
(1969,"controller.setkeyvalid[].[]",1970)
(1970,"time +=1",1971)
(1971,"user.keychecked[true].[]",1977)
(1972,"user.enterkey[].[_10]",3447)
(1972,"user.enterkey[].[]",3448)
(1972,"intruder.spyingdoor[false].[]",1973)
(1973,"user.enterkey[].[_10]",3449)
(1973,"user.enterkey[].[]",3450)
(1974,"time +=9",1975)
(1975,"controller.tau=>setkeyvalid.[]",2046)
(1976,"controller.lockeduser[].[]",1980)
(1977,"time +=9",1978)
(1978,"controller.tau=>setkeyvalid.[]",2047)
(1979,"controller.lockeduser[].[]",1981)
(1980,"controller.setunarmed[].[]",1982)
(1981,"controller.setunarmed[].[]",1983)
(1982,"door.unlockdoor[].[]",1984)
(1983,"door.unlockdoor[].[]",1986)
(1984,"time +=1",1985)
(1985,"user.codechecked[true].[]",1988)
(1986,"time +=1",1987)
(1987,"user.codechecked[true].[]",1989)
(1988,"door.getlockstatus[].[]",1990)
(1989,"door.getlockstatus[].[]",1991)
(1990,"user.setstatus[false].[]",1992)
(1991,"user.setstatus[false].[]",1994)
(1992,"time +=1",1993)
(1993,"controller.setdoorstatus[true, false].[]",2000)
(1994,"time +=1",1995)
(1995,"controller.setdoorstatus[true, false].[]",2002)
(1996,"time +=10",1997)
(1997,"controller.checkkey[2].[]",2079)
(1998,"time +=15",1999)
(1999,"controller.checkkey[2].[]",2119)
(2000,"time +=9",2001)
(2001,"user.enterkey[].[]",2075)
(2001,"user.enterkey[].[_15]",2077)
(2002,"time +=9",2003)
(2003,"user.enterkey[].[_10]",2075)
(2003,"user.enterkey[].[]",2077)
(2004,"controller.setkeyinvalid[].[]",2006)
(2005,"controller.setkeyinvalid[].[]",2008)
(2006,"time +=1",2007)
(2007,"controller.checkcode[3].[]",2016)
(2008,"time +=1",2009)
(2009,"controller.checkcode[3].[]",2017)
(2010,"controller.setkeyvalid[].[]",2012)
(2011,"controller.setkeyvalid[].[]",2014)
(2012,"time +=1",2013)
(2013,"user.keychecked[true].[]",2018)
(2014,"time +=1",2015)
(2015,"user.keychecked[true].[]",2020)
(2016,"controller.lockeduser[].[]",2022)
(2017,"controller.lockeduser[].[]",2023)
(2018,"time +=9",2019)
(2019,"controller.tau=>setkeyvalid.[]",2088)
(2020,"time +=9",2021)
(2021,"controller.tau=>setkeyvalid.[]",2089)
(2022,"controller.setunarmed[].[]",2024)
(2023,"controller.setunarmed[].[]",2025)
(2024,"door.unlockdoor[].[]",2026)
(2025,"door.unlockdoor[].[]",2028)
(2026,"time +=1",2027)
(2027,"user.codechecked[true].[]",2030)
(2028,"time +=1",2029)
(2029,"user.codechecked[true].[]",2031)
(2030,"door.getlockstatus[].[]",2032)
(2031,"door.getlockstatus[].[]",2033)
(2032,"user.setstatus[false].[]",2034)
(2033,"user.setstatus[false].[]",2036)
(2034,"time +=1",2035)
(2035,"controller.setdoorstatus[true, false].[]",2042)
(2036,"time +=1",2037)
(2037,"controller.setdoorstatus[true, false].[]",2044)
(2038,"time +=10",2039)
(2039,"controller.checkkey[2].[]",2116)
(2040,"time +=15",2041)
(2041,"controller.checkkey[2].[]",2138)
(2042,"time +=9",2043)
(2043,"user.enterkey[].[_10]",2112)
(2043,"user.enterkey[].[]",2114)
(2044,"time +=9",2045)
(2045,"user.enterkey[].[]",2112)
(2045,"user.enterkey[].[_15]",2114)
(2046,"controller.setkeyinvalid[].[]",2048)
(2047,"controller.setkeyinvalid[].[]",2050)
(2048,"time +=1",2049)
(2049,"controller.checkcode[3].[]",2055)
(2050,"time +=1",2051)
(2051,"controller.checkcode[3].[]",2056)
(2052,"controller.setkeyvalid[].[]",2053)
(2053,"time +=1",2054)
(2054,"user.keychecked[true].[]",2057)
(2055,"controller.lockeduser[].[]",2059)
(2056,"controller.lockeduser[].[]",2060)
(2057,"time +=9",2058)
(2058,"controller.tau=>setkeyvalid.[]",2130)
(2059,"controller.setunarmed[].[]",2061)
(2060,"controller.setunarmed[].[]",2062)
(2061,"door.unlockdoor[].[]",2063)
(2062,"door.unlockdoor[].[]",2065)
(2063,"time +=1",2064)
(2064,"user.codechecked[true].[]",2067)
(2065,"time +=1",2066)
(2066,"user.codechecked[true].[]",2068)
(2067,"door.getlockstatus[].[]",2069)
(2068,"door.getlockstatus[].[]",2070)
(2069,"user.setstatus[false].[]",2071)
(2070,"user.setstatus[false].[]",2073)
(2071,"time +=1",2072)
(2072,"controller.setdoorstatus[true, false].[]",2082)
(2073,"time +=1",2074)
(2074,"controller.setdoorstatus[true, false].[]",2084)
(2075,"time +=10",2076)
(2076,"controller.checkkey[2].[]",2152)
(2077,"time +=15",2078)
(2078,"controller.checkkey[2].[]",2175)
(2079,"controller.setkeyvalid[].[]",2080)
(2080,"time +=1",2081)
(2081,"user.keychecked[true].[]",2086)
(2082,"time +=9",2083)
(2083,"user.enterkey[].[]",2139)
(2083,"user.enterkey[].[_15]",2141)
(2084,"time +=9",2085)
(2085,"user.enterkey[].[_10]",2139)
(2085,"user.enterkey[].[]",2141)
(2086,"time +=9",2087)
(2087,"controller.tau=>setkeyvalid.[]",2147)
(2088,"controller.setkeyinvalid[].[]",2090)
(2089,"controller.setkeyinvalid[].[]",2092)
(2090,"time +=1",2091)
(2091,"controller.checkcode[3].[]",2094)
(2092,"time +=1",2093)
(2093,"controller.checkcode[3].[]",2095)
(2094,"controller.lockeduser[].[]",2096)
(2095,"controller.lockeduser[].[]",2097)
(2096,"controller.setunarmed[].[]",2098)
(2097,"controller.setunarmed[].[]",2099)
(2098,"door.unlockdoor[].[]",2100)
(2099,"door.unlockdoor[].[]",2102)
(2100,"time +=1",2101)
(2101,"user.codechecked[true].[]",2104)
(2102,"time +=1",2103)
(2103,"user.codechecked[true].[]",2105)
(2104,"door.getlockstatus[].[]",2106)
(2105,"door.getlockstatus[].[]",2107)
(2106,"user.setstatus[false].[]",2108)
(2107,"user.setstatus[false].[]",2110)
(2108,"time +=1",2109)
(2109,"controller.setdoorstatus[true, false].[]",2122)
(2110,"time +=1",2111)
(2111,"controller.setdoorstatus[true, false].[]",2124)
(2112,"time +=10",2113)
(2113,"controller.checkkey[2].[]",2181)
(2114,"time +=13",2115)
(2115,"door.spiedon[].[]",2244)
(2116,"controller.setkeyvalid[].[]",2117)
(2117,"time +=1",2118)
(2118,"user.keychecked[true].[]",2126)
(2119,"controller.setkeyvalid[].[]",2120)
(2120,"time +=1",2121)
(2121,"user.keychecked[true].[]",2128)
(2122,"time +=9",2123)
(2123,"user.enterkey[].[_10]",2170)
(2123,"user.enterkey[].[]",2172)
(2124,"time +=9",2125)
(2125,"user.enterkey[].[]",2170)
(2125,"user.enterkey[].[_15]",2172)
(2126,"time +=9",2127)
(2127,"controller.tau=>setkeyvalid.[]",2180)
(2128,"time +=9",2129)
(2129,"controller.tau=>setkeyvalid.[]",2174)
(2130,"controller.setkeyinvalid[].[]",2131)
(2131,"time +=1",2132)
(2132,"controller.checkcode[3].[]",2133)
(2133,"controller.lockeduser[].[]",2134)
(2134,"controller.setunarmed[].[]",2135)
(2135,"door.unlockdoor[].[]",2136)
(2136,"time +=1",2137)
(2137,"user.codechecked[true].[]",2143)
(2138,"controller.setkeyvalid[].[]",2144)
(2139,"time +=8",2140)
(2140,"door.spiedon[].[]",2239)
(2141,"time +=8",2142)
(2142,"door.spiedon[].[]",2226)
(2143,"door.getlockstatus[].[]",2146)
(2144,"time +=1",2145)
(2145,"user.keychecked[true].[]",2155)
(2146,"user.setstatus[false].[]",2148)
(2147,"controller.setkeyinvalid[].[]",2150)
(2148,"time +=1",2149)
(2149,"controller.setdoorstatus[true, false].[]",2157)
(2150,"time +=1",2151)
(2151,"controller.checkcode[3].[]",2161)
(2152,"controller.setkeyvalid[].[]",2153)
(2153,"time +=1",2154)
(2154,"user.keychecked[true].[]",2159)
(2155,"time +=7",2156)
(2156,"door.spiedon[].[]",2221)
(2157,"time +=7",2158)
(2158,"door.spiedon[].[]",2233)
(2159,"time +=7",2160)
(2160,"door.spiedon[].[]",2208)
(2161,"controller.lockeduser[].[]",2162)
(2162,"controller.setarmed[].[]",2163)
(2163,"door.lockdoor[].[]",2164)
(2164,"time +=1",2165)
(2165,"user.codechecked[true].[]",2166)
(2166,"door.getlockstatus[].[]",2167)
(2167,"user.setstatus[false].[]",2168)
(2168,"time +=6",2169)
(2169,"door.spiedon[].[]",2238)
(2170,"time +=3",2171)
(2171,"door.spiedon[].[]",2209)
(2172,"time +=3",2173)
(2173,"door.spiedon[].[]",2227)
(2174,"controller.setkeyinvalid[].[]",2176)
(2175,"controller.setkeyvalid[].[]",2178)
(2176,"time +=1",2177)
(2177,"controller.checkcode[3].[]",2186)
(2178,"time +=1",2179)
(2179,"user.keychecked[true].[]",2187)
(2180,"controller.setkeyinvalid[].[]",2182)
(2181,"controller.setkeyvalid[].[]",2184)
(2182,"time +=1",2183)
(2183,"controller.checkcode[3].[]",2192)
(2184,"time +=1",2185)
(2185,"user.keychecked[true].[]",2189)
(2186,"controller.lockeduser[].[]",2191)
(2187,"time +=2",2188)
(2188,"door.spiedon[].[]",2220)
(2189,"time +=2",2190)
(2190,"door.spiedon[].[]",2232)
(2191,"controller.setarmed[].[]",2193)
(2192,"controller.lockeduser[].[]",2194)
(2193,"door.lockdoor[].[]",2195)
(2194,"controller.setarmed[].[]",2197)
(2195,"time +=1",2196)
(2196,"user.codechecked[true].[]",2200)
(2197,"door.lockdoor[].[]",2198)
(2198,"time +=1",2199)
(2199,"user.codechecked[true].[]",2201)
(2200,"door.getlockstatus[].[]",2202)
(2201,"door.getlockstatus[].[]",2203)
(2202,"user.setstatus[false].[]",2204)
(2203,"user.setstatus[false].[]",2206)
(2204,"time +=1",2205)
(2205,"door.spiedon[].[]",2210)
(2206,"time +=1",2207)
(2207,"door.spiedon[].[]",2211)
(2208,"intruder.spyingdoor[false].[]",2212)
(2209,"intruder.spyingdoor[false].[]",2214)
(2210,"intruder.spyingdoor[false].[]",2216)
(2211,"intruder.spyingdoor[false].[]",2218)
(2212,"time +=2",2213)
(2213,"controller.tau=>setkeyvalid.[]",2247)
(2214,"time +=7",2215)
(2215,"controller.checkkey[2].[]",2291)
(2216,"time +=9",2217)
(2217,"user.enterkey[].[_10]",2319)
(2217,"user.enterkey[].[]",2321)
(2218,"time +=9",2219)
(2219,"user.enterkey[].[]",2319)
(2219,"user.enterkey[].[_15]",2321)
(2220,"intruder.spyingdoor[false].[]",2222)
(2221,"intruder.spyingdoor[false].[]",2224)
(2222,"time +=7",2223)
(2223,"controller.tau=>setkeyvalid.[]",2285)
(2224,"time +=2",2225)
(2225,"controller.tau=>setkeyvalid.[]",2248)
(2226,"intruder.spyingdoor[false].[]",2228)
(2227,"intruder.spyingdoor[false].[]",2230)
(2228,"time +=7",2229)
(2229,"controller.checkkey[2].[]",2286)
(2230,"time +=12",2231)
(2231,"controller.checkkey[2].[]",2324)
(2232,"intruder.spyingdoor[false].[]",2234)
(2233,"intruder.spyingdoor[false].[]",2236)
(2234,"time +=7",2235)
(2235,"controller.tau=>setkeyvalid.[]",2292)
(2236,"time +=2",2237)
(2237,"user.enterkey[].[_10]",3451)
(2237,"user.enterkey[].[]",3452)
(2238,"intruder.spyingdoor[false].[]",2240)
(2239,"intruder.spyingdoor[false].[]",2242)
(2240,"time +=4",2241)
(2241,"user.enterkey[].[]",2281)
(2241,"user.enterkey[].[_15]",2283)
(2242,"time +=2",2243)
(2243,"controller.checkkey[2].[]",2249)
(2244,"intruder.spyingdoor[false].[]",2245)
(2245,"time +=2",2246)
(2246,"controller.checkkey[2].[]",2250)
(2247,"controller.setkeyinvalid[].[]",2251)
(2248,"controller.setkeyinvalid[].[]",2253)
(2249,"controller.setkeyvalid[].[]",2255)
(2250,"controller.setkeyvalid[].[]",2257)
(2251,"time +=1",2252)
(2252,"controller.checkcode[3].[]",2259)
(2253,"time +=1",2254)
(2254,"controller.checkcode[3].[]",2260)
(2255,"time +=1",2256)
(2256,"user.keychecked[true].[]",2271)
(2257,"time +=1",2258)
(2258,"user.keychecked[true].[]",2261)
(2259,"controller.lockeduser[].[]",2263)
(2260,"controller.lockeduser[].[]",2264)
(2261,"time +=9",2262)
(2262,"controller.tau=>setkeyvalid.[]",2323)
(2263,"controller.setarmed[].[]",2265)
(2264,"controller.setarmed[].[]",2266)
(2265,"door.lockdoor[].[]",2267)
(2266,"door.lockdoor[].[]",2269)
(2267,"time +=1",2268)
(2268,"user.codechecked[true].[]",2273)
(2269,"time +=1",2270)
(2270,"user.codechecked[true].[]",2274)
(2271,"time +=9",2272)
(2272,"controller.tau=>setkeyvalid.[]",2329)
(2273,"door.getlockstatus[].[]",2275)
(2274,"door.getlockstatus[].[]",2276)
(2275,"user.setstatus[false].[]",2277)
(2276,"user.setstatus[false].[]",2279)
(2277,"time +=10",2278)
(2278,"user.enterkey[].[]",2355)
(2278,"user.enterkey[].[_15]",2357)
(2279,"time +=10",2280)
(2280,"user.enterkey[].[_10]",2355)
(2280,"user.enterkey[].[]",2357)
(2281,"time +=10",2282)
(2282,"controller.checkkey[2].[]",2344)
(2283,"time +=15",2284)
(2284,"controller.checkkey[2].[]",2385)
(2285,"controller.setkeyinvalid[].[]",2287)
(2286,"controller.setkeyvalid[].[]",2289)
(2287,"time +=1",2288)
(2288,"controller.checkcode[3].[]",2297)
(2289,"time +=1",2290)
(2290,"user.keychecked[true].[]",2298)
(2291,"controller.setkeyvalid[].[]",2293)
(2292,"controller.setkeyinvalid[].[]",2295)
(2293,"time +=1",2294)
(2294,"user.keychecked[true].[]",2300)
(2295,"time +=1",2296)
(2296,"controller.checkcode[3].[]",2302)
(2297,"controller.lockeduser[].[]",2303)
(2298,"time +=9",2299)
(2299,"controller.tau=>setkeyvalid.[]",2362)
(2300,"time +=9",2301)
(2301,"controller.tau=>setkeyvalid.[]",2361)
(2302,"controller.lockeduser[].[]",2304)
(2303,"controller.setarmed[].[]",2305)
(2304,"controller.setarmed[].[]",2306)
(2305,"door.lockdoor[].[]",2307)
(2306,"door.lockdoor[].[]",2309)
(2307,"time +=1",2308)
(2308,"user.codechecked[true].[]",2311)
(2309,"time +=1",2310)
(2310,"user.codechecked[true].[]",2312)
(2311,"door.getlockstatus[].[]",2313)
(2312,"door.getlockstatus[].[]",2314)
(2313,"user.setstatus[false].[]",2315)
(2314,"user.setstatus[false].[]",2317)
(2315,"time +=10",2316)
(2316,"user.enterkey[].[_10]",2386)
(2316,"user.enterkey[].[]",2388)
(2317,"time +=10",2318)
(2318,"user.enterkey[].[]",2386)
(2318,"user.enterkey[].[_15]",2388)
(2319,"time +=10",2320)
(2320,"controller.checkkey[2].[]",2392)
(2321,"time +=15",2322)
(2322,"controller.checkkey[2].[]",2407)
(2323,"controller.setkeyinvalid[].[]",2325)
(2324,"controller.setkeyvalid[].[]",2327)
(2325,"time +=1",2326)
(2326,"controller.checkcode[3].[]",2332)
(2327,"time +=1",2328)
(2328,"user.keychecked[true].[]",2333)
(2329,"controller.setkeyinvalid[].[]",2330)
(2330,"time +=1",2331)
(2331,"controller.checkcode[3].[]",2335)
(2332,"controller.lockeduser[].[]",2336)
(2333,"time +=9",2334)
(2334,"controller.tau=>setkeyvalid.[]",2399)
(2335,"controller.lockeduser[].[]",2337)
(2336,"controller.setarmed[].[]",2338)
(2337,"controller.setarmed[].[]",2339)
(2338,"door.lockdoor[].[]",2340)
(2339,"door.lockdoor[].[]",2342)
(2340,"time +=1",2341)
(2341,"user.codechecked[true].[]",2345)
(2342,"time +=1",2343)
(2343,"user.codechecked[true].[]",2346)
(2344,"controller.setkeyvalid[].[]",2347)
(2345,"door.getlockstatus[].[]",2349)
(2346,"door.getlockstatus[].[]",2350)
(2347,"time +=1",2348)
(2348,"user.keychecked[true].[]",2359)
(2349,"user.setstatus[false].[]",2351)
(2350,"user.setstatus[false].[]",2353)
(2351,"time +=10",2352)
(2352,"user.enterkey[].[_10]",2415)
(2352,"user.enterkey[].[]",2417)
(2353,"time +=10",2354)
(2354,"user.enterkey[].[]",2415)
(2354,"user.enterkey[].[_15]",2417)
(2355,"time +=10",2356)
(2356,"controller.checkkey[2].[]",2408)
(2357,"time +=15",2358)
(2358,"controller.checkkey[2].[]",2445)
(2359,"time +=9",2360)
(2360,"controller.tau=>setkeyvalid.[]",2421)
(2361,"controller.setkeyinvalid[].[]",2363)
(2362,"controller.setkeyinvalid[].[]",2365)
(2363,"time +=1",2364)
(2364,"controller.checkcode[3].[]",2367)
(2365,"time +=1",2366)
(2366,"controller.checkcode[3].[]",2368)
(2367,"controller.lockeduser[].[]",2369)
(2368,"controller.lockeduser[].[]",2370)
(2369,"controller.setarmed[].[]",2371)
(2370,"controller.setarmed[].[]",2372)
(2371,"door.lockdoor[].[]",2373)
(2372,"door.lockdoor[].[]",2375)
(2373,"time +=1",2374)
(2374,"user.codechecked[true].[]",2377)
(2375,"time +=1",2376)
(2376,"user.codechecked[true].[]",2378)
(2377,"door.getlockstatus[].[]",2379)
(2378,"door.getlockstatus[].[]",2380)
(2379,"user.setstatus[false].[]",2381)
(2380,"user.setstatus[false].[]",2383)
(2381,"time +=10",2382)
(2382,"user.enterkey[].[]",2451)
(2382,"user.enterkey[].[_15]",2453)
(2383,"time +=10",2384)
(2384,"user.enterkey[].[_10]",2451)
(2384,"user.enterkey[].[]",2453)
(2385,"controller.setkeyvalid[].[]",2390)
(2386,"time +=10",2387)
(2387,"controller.checkkey[2].[]",2439)
(2388,"time +=11",2389)
(2389,"door.spiedon[].[]",2500)
(2390,"time +=1",2391)
(2391,"user.keychecked[true].[]",2395)
(2392,"controller.setkeyvalid[].[]",2393)
(2393,"time +=1",2394)
(2394,"user.keychecked[true].[]",2397)
(2395,"time +=9",2396)
(2396,"controller.tau=>setkeyvalid.[]",2446)
(2397,"time +=9",2398)
(2398,"controller.tau=>setkeyvalid.[]",2440)
(2399,"controller.setkeyinvalid[].[]",2400)
(2400,"time +=1",2401)
(2401,"controller.checkcode[3].[]",2402)
(2402,"controller.lockeduser[].[]",2403)
(2403,"controller.setarmed[].[]",2404)
(2404,"door.lockdoor[].[]",2405)
(2405,"time +=1",2406)
(2406,"user.codechecked[true].[]",2409)
(2407,"controller.setkeyvalid[].[]",2410)
(2408,"controller.setkeyvalid[].[]",2412)
(2409,"door.getlockstatus[].[]",2414)
(2410,"time +=1",2411)
(2411,"user.keychecked[true].[]",2424)
(2412,"time +=1",2413)
(2413,"user.keychecked[true].[]",2426)
(2414,"user.setstatus[false].[]",2419)
(2415,"time +=6",2416)
(2416,"door.spiedon[].[]",2468)
(2417,"time +=6",2418)
(2418,"door.spiedon[].[]",2473)
(2419,"time +=6",2420)
(2420,"door.spiedon[].[]",2484)
(2421,"controller.setkeyinvalid[].[]",2422)
(2422,"time +=1",2423)
(2423,"controller.checkcode[3].[]",2428)
(2424,"time +=5",2425)
(2425,"door.spiedon[].[]",2467)
(2426,"time +=5",2427)
(2427,"door.spiedon[].[]",2456)
(2428,"controller.lockeduser[].[]",2429)
(2429,"controller.setunarmed[].[]",2430)
(2430,"door.unlockdoor[].[]",2431)
(2431,"time +=1",2432)
(2432,"user.codechecked[true].[]",2433)
(2433,"door.getlockstatus[].[]",2434)
(2434,"user.setstatus[false].[]",2435)
(2435,"time +=1",2436)
(2436,"controller.setdoorstatus[true, false].[]",2437)
(2437,"time +=3",2438)
(2438,"door.spiedon[].[]",2455)
(2439,"controller.setkeyvalid[].[]",2441)
(2440,"controller.setkeyinvalid[].[]",2443)
(2441,"time +=1",2442)
(2442,"user.keychecked[true].[]",2474)
(2442,"door.spiedon[].[]",2475)
(2443,"time +=1",2444)
(2444,"controller.checkcode[3].[]",2509)
(2444,"door.spiedon[].[]",2510)
(2445,"controller.setkeyvalid[].[]",2447)
(2446,"controller.setkeyinvalid[].[]",2449)
(2447,"time +=1",2448)
(2448,"user.keychecked[true].[]",2501)
(2448,"door.spiedon[].[]",2502)
(2449,"time +=1",2450)
(2450,"controller.checkcode[3].[]",2482)
(2450,"door.spiedon[].[]",2483)
(2451,"time +=1",2452)
(2452,"door.spiedon[].[]",2458)
(2453,"time +=1",2454)
(2454,"door.spiedon[].[]",2457)
(2455,"intruder.spyingdoor[false].[]",2459)
(2456,"intruder.spyingdoor[false].[]",2461)
(2457,"intruder.spyingdoor[false].[]",2463)
(2458,"intruder.spyingdoor[false].[]",2465)
(2459,"time +=6",2460)
(2460,"user.enterkey[].[]",2570)
(2460,"user.enterkey[].[_15]",2572)
(2461,"time +=4",2462)
(2462,"controller.tau=>setkeyvalid.[]",2537)
(2463,"time +=14",2464)
(2464,"controller.checkkey[2].[]",2620)
(2465,"time +=9",2466)
(2466,"controller.checkkey[2].[]",2578)
(2467,"intruder.spyingdoor[false].[]",2469)
(2468,"intruder.spyingdoor[false].[]",2471)
(2469,"time +=4",2470)
(2470,"controller.tau=>setkeyvalid.[]",2536)
(2471,"time +=4",2472)
(2472,"controller.checkkey[2].[]",2542)
(2473,"intruder.spyingdoor[false].[]",2476)
(2474,"door.spiedon[].[]",2478)
(2475,"user.keychecked[true].[]",2478)
(2475,"intruder.spyingdoor[false].[]",2479)
(2476,"time +=9",2477)
(2477,"controller.checkkey[2].[]",2585)
(2478,"intruder.spyingdoor[false].[]",2480)
(2479,"user.keychecked[true].[]",2480)
(2480,"time +=9",2481)
(2481,"controller.tau=>setkeyvalid.[]",2584)
(2482,"controller.lockeduser[].[]",2485)
(2482,"door.spiedon[].[]",2486)
(2483,"controller.checkcode[3].[]",2486)
(2483,"intruder.spyingdoor[false].[]",2487)
(2484,"intruder.spyingdoor[false].[]",2488)
(2485,"controller.setunarmed[].[]",2490)
(2485,"door.spiedon[].[]",2491)
(2486,"controller.lockeduser[].[]",2491)
(2486,"intruder.spyingdoor[false].[]",2492)
(2487,"controller.checkcode[3].[]",2492)
(2488,"time +=4",2489)
(2489,"user.enterkey[].[_10]",3453)
(2489,"user.enterkey[].[]",3454)
(2490,"door.unlockdoor[].[]",2493)
(2490,"door.spiedon[].[]",2494)
(2491,"controller.setunarmed[].[]",2494)
(2491,"intruder.spyingdoor[false].[]",2495)
(2492,"controller.lockeduser[].[]",2495)
(2493,"door.spiedon[].[]",2496)
(2494,"intruder.spyingdoor[false].[]",2497)
(2494,"door.unlockdoor[].[]",2496)
(2495,"controller.setunarmed[].[]",2497)
(2496,"intruder.spyingdoor[false].[]",2498)
(2497,"door.unlockdoor[].[]",2498)
(2498,"time +=1",2499)
(2499,"user.codechecked[true].[]",2524)
(2500,"intruder.spyingdoor[false].[]",2503)
(2501,"door.spiedon[].[]",2505)
(2502,"user.keychecked[true].[]",2505)
(2502,"intruder.spyingdoor[false].[]",2506)
(2503,"time +=4",2504)
(2504,"controller.checkkey[2].[]",2543)
(2505,"intruder.spyingdoor[false].[]",2507)
(2506,"user.keychecked[true].[]",2507)
(2507,"time +=9",2508)
(2508,"controller.tau=>setkeyvalid.[]",2579)
(2509,"controller.lockeduser[].[]",2511)
(2509,"door.spiedon[].[]",2512)
(2510,"controller.checkcode[3].[]",2512)
(2510,"intruder.spyingdoor[false].[]",2513)
(2511,"controller.setunarmed[].[]",2514)
(2511,"door.spiedon[].[]",2515)
(2512,"controller.lockeduser[].[]",2515)
(2512,"intruder.spyingdoor[false].[]",2516)
(2513,"controller.checkcode[3].[]",2516)
(2514,"door.unlockdoor[].[]",2517)
(2514,"door.spiedon[].[]",2518)
(2515,"controller.setunarmed[].[]",2518)
(2515,"intruder.spyingdoor[false].[]",2519)
(2516,"controller.lockeduser[].[]",2519)
(2517,"door.spiedon[].[]",2520)
(2518,"intruder.spyingdoor[false].[]",2521)
(2518,"door.unlockdoor[].[]",2520)
(2519,"controller.setunarmed[].[]",2521)
(2520,"intruder.spyingdoor[false].[]",2522)
(2521,"door.unlockdoor[].[]",2522)
(2522,"time +=1",2523)
(2523,"user.codechecked[true].[]",2525)
(2524,"door.getlockstatus[].[]",2526)
(2525,"door.getlockstatus[].[]",2527)
(2526,"user.setstatus[false].[]",2528)
(2527,"user.setstatus[false].[]",2530)
(2528,"time +=1",2529)
(2529,"controller.setdoorstatus[true, false].[]",2532)
(2530,"time +=1",2531)
(2531,"controller.setdoorstatus[true, false].[]",2534)
(2532,"time +=9",2533)
(2533,"user.enterkey[].[_10]",2612)
(2533,"user.enterkey[].[]",2614)
(2534,"time +=9",2535)
(2535,"user.enterkey[].[]",2612)
(2535,"user.enterkey[].[_15]",2614)
(2536,"controller.setkeyinvalid[].[]",2538)
(2537,"controller.setkeyinvalid[].[]",2540)
(2538,"time +=1",2539)
(2539,"controller.checkcode[3].[]",2548)
(2540,"time +=1",2541)
(2541,"controller.checkcode[3].[]",2549)
(2542,"controller.setkeyvalid[].[]",2544)
(2543,"controller.setkeyvalid[].[]",2546)
(2544,"time +=1",2545)
(2545,"user.keychecked[true].[]",2550)
(2546,"time +=1",2547)
(2547,"user.keychecked[true].[]",2552)
(2548,"controller.lockeduser[].[]",2554)
(2549,"controller.lockeduser[].[]",2555)
(2550,"time +=9",2551)
(2551,"controller.tau=>setkeyvalid.[]",2626)
(2552,"time +=9",2553)
(2553,"controller.tau=>setkeyvalid.[]",2621)
(2554,"controller.setunarmed[].[]",2556)
(2555,"controller.setunarmed[].[]",2557)
(2556,"door.unlockdoor[].[]",2558)
(2557,"door.unlockdoor[].[]",2560)
(2558,"time +=1",2559)
(2559,"user.codechecked[true].[]",2562)
(2560,"time +=1",2561)
(2561,"user.codechecked[true].[]",2563)
(2562,"door.getlockstatus[].[]",2564)
(2563,"door.getlockstatus[].[]",2565)
(2564,"user.setstatus[false].[]",2566)
(2565,"user.setstatus[false].[]",2568)
(2566,"time +=1",2567)
(2567,"controller.setdoorstatus[true, false].[]",2574)
(2568,"time +=1",2569)
(2569,"controller.setdoorstatus[true, false].[]",2576)
(2570,"time +=10",2571)
(2571,"controller.checkkey[2].[]",2653)
(2572,"time +=15",2573)
(2573,"controller.checkkey[2].[]",2678)
(2574,"time +=9",2575)
(2575,"user.enterkey[].[_10]",2649)
(2575,"user.enterkey[].[]",2651)
(2576,"time +=9",2577)
(2577,"user.enterkey[].[]",2649)
(2577,"user.enterkey[].[_15]",2651)
(2578,"controller.setkeyvalid[].[]",2580)
(2579,"controller.setkeyinvalid[].[]",2582)
(2580,"time +=1",2581)
(2581,"user.keychecked[true].[]",2590)
(2582,"time +=1",2583)
(2583,"controller.checkcode[3].[]",2592)
(2584,"controller.setkeyinvalid[].[]",2586)
(2585,"controller.setkeyvalid[].[]",2588)
(2586,"time +=1",2587)
(2587,"controller.checkcode[3].[]",2593)
(2588,"time +=1",2589)
(2589,"user.keychecked[true].[]",2594)
(2590,"time +=9",2591)
(2591,"controller.tau=>setkeyvalid.[]",2663)
(2592,"controller.lockeduser[].[]",2596)
(2593,"controller.lockeduser[].[]",2597)
(2594,"time +=9",2595)
(2595,"controller.tau=>setkeyvalid.[]",2662)
(2596,"controller.setunarmed[].[]",2598)
(2597,"controller.setunarmed[].[]",2599)
(2598,"door.unlockdoor[].[]",2600)
(2599,"door.unlockdoor[].[]",2602)
(2600,"time +=1",2601)
(2601,"user.codechecked[true].[]",2604)
(2602,"time +=1",2603)
(2603,"user.codechecked[true].[]",2605)
(2604,"door.getlockstatus[].[]",2606)
(2605,"door.getlockstatus[].[]",2607)
(2606,"user.setstatus[false].[]",2608)
(2607,"user.setstatus[false].[]",2610)
(2608,"time +=1",2609)
(2609,"controller.setdoorstatus[true, false].[]",2616)
(2610,"time +=1",2611)
(2611,"controller.setdoorstatus[true, false].[]",2618)
(2612,"time +=10",2613)
(2613,"controller.checkkey[2].[]",2689)
(2614,"time +=15",2615)
(2615,"controller.checkkey[2].[]",2716)
(2616,"time +=9",2617)
(2617,"user.enterkey[].[_10]",2690)
(2617,"user.enterkey[].[]",2692)
(2618,"time +=9",2619)
(2619,"user.enterkey[].[]",2690)
(2619,"user.enterkey[].[_15]",2692)
(2620,"controller.setkeyvalid[].[]",2622)
(2621,"controller.setkeyinvalid[].[]",2624)
(2622,"time +=1",2623)
(2623,"user.keychecked[true].[]",2629)
(2624,"time +=1",2625)
(2625,"controller.checkcode[3].[]",2631)
(2626,"controller.setkeyinvalid[].[]",2627)
(2627,"time +=1",2628)
(2628,"controller.checkcode[3].[]",2632)
(2629,"time +=9",2630)
(2630,"controller.tau=>setkeyvalid.[]",2704)
(2631,"controller.lockeduser[].[]",2633)
(2632,"controller.lockeduser[].[]",2634)
(2633,"controller.setunarmed[].[]",2635)
(2634,"controller.setunarmed[].[]",2636)
(2635,"door.unlockdoor[].[]",2637)
(2636,"door.unlockdoor[].[]",2639)
(2637,"time +=1",2638)
(2638,"user.codechecked[true].[]",2641)
(2639,"time +=1",2640)
(2640,"user.codechecked[true].[]",2642)
(2641,"door.getlockstatus[].[]",2643)
(2642,"door.getlockstatus[].[]",2644)
(2643,"user.setstatus[false].[]",2645)
(2644,"user.setstatus[false].[]",2647)
(2645,"time +=1",2646)
(2646,"controller.setdoorstatus[true, false].[]",2656)
(2647,"time +=1",2648)
(2648,"controller.setdoorstatus[true, false].[]",2658)
(2649,"time +=10",2650)
(2650,"controller.checkkey[2].[]",2726)
(2651,"time +=14",2652)
(2652,"door.spiedon[].[]",2762)
(2653,"controller.setkeyvalid[].[]",2654)
(2654,"time +=1",2655)
(2655,"user.keychecked[true].[]",2660)
(2656,"time +=9",2657)
(2657,"user.enterkey[].[_10]",2712)
(2657,"user.enterkey[].[]",2714)
(2658,"time +=9",2659)
(2659,"user.enterkey[].[]",2712)
(2659,"user.enterkey[].[_15]",2714)
(2660,"time +=9",2661)
(2661,"controller.tau=>setkeyvalid.[]",2721)
(2662,"controller.setkeyinvalid[].[]",2664)
(2663,"controller.setkeyinvalid[].[]",2666)
(2664,"time +=1",2665)
(2665,"controller.checkcode[3].[]",2668)
(2666,"time +=1",2667)
(2667,"controller.checkcode[3].[]",2669)
(2668,"controller.lockeduser[].[]",2670)
(2669,"controller.lockeduser[].[]",2671)
(2670,"controller.setunarmed[].[]",2672)
(2671,"controller.setunarmed[].[]",2673)
(2672,"door.unlockdoor[].[]",2674)
(2673,"door.unlockdoor[].[]",2676)
(2674,"time +=1",2675)
(2675,"user.codechecked[true].[]",2679)
(2676,"time +=1",2677)
(2677,"user.codechecked[true].[]",2680)
(2678,"controller.setkeyvalid[].[]",2681)
(2679,"door.getlockstatus[].[]",2683)
(2680,"door.getlockstatus[].[]",2684)
(2681,"time +=1",2682)
(2682,"user.keychecked[true].[]",2696)
(2683,"user.setstatus[false].[]",2685)
(2684,"user.setstatus[false].[]",2687)
(2685,"time +=1",2686)
(2686,"controller.setdoorstatus[true, false].[]",2700)
(2687,"time +=1",2688)
(2688,"controller.setdoorstatus[true, false].[]",2702)
(2689,"controller.setkeyvalid[].[]",2694)
(2690,"time +=9",2691)
(2691,"door.spiedon[].[]",2756)
(2692,"time +=9",2693)
(2693,"door.spiedon[].[]",2774)
(2694,"time +=1",2695)
(2695,"user.keychecked[true].[]",2698)
(2696,"time +=8",2697)
(2697,"door.spiedon[].[]",2775)
(2698,"time +=8",2699)
(2699,"door.spiedon[].[]",2769)
(2700,"time +=8",2701)
(2701,"door.spiedon[].[]",2763)
(2702,"time +=8",2703)
(2703,"door.spiedon[].[]",2757)
(2704,"controller.setkeyinvalid[].[]",2705)
(2705,"time +=1",2706)
(2706,"controller.checkcode[3].[]",2707)
(2707,"controller.lockeduser[].[]",2708)
(2708,"controller.setunarmed[].[]",2709)
(2709,"door.unlockdoor[].[]",2710)
(2710,"time +=1",2711)
(2711,"user.codechecked[true].[]",2717)
(2712,"time +=4",2713)
(2713,"door.spiedon[].[]",2744)
(2714,"time +=4",2715)
(2715,"door.spiedon[].[]",2780)
(2716,"controller.setkeyvalid[].[]",2718)
(2717,"door.getlockstatus[].[]",2720)
(2718,"time +=1",2719)
(2719,"user.keychecked[true].[]",2729)
(2720,"user.setstatus[false].[]",2722)
(2721,"controller.setkeyinvalid[].[]",2724)
(2722,"time +=1",2723)
(2723,"controller.setdoorstatus[true, false].[]",2731)
(2724,"time +=1",2725)
(2725,"controller.checkcode[3].[]",2735)
(2726,"controller.setkeyvalid[].[]",2727)
(2727,"time +=1",2728)
(2728,"user.keychecked[true].[]",2733)
(2729,"time +=3",2730)
(2730,"door.spiedon[].[]",2745)
(2731,"time +=3",2732)
(2732,"door.spiedon[].[]",2768)
(2733,"time +=3",2734)
(2734,"door.spiedon[].[]",2746)
(2735,"controller.lockeduser[].[]",2736)
(2736,"controller.setarmed[].[]",2737)
(2737,"door.lockdoor[].[]",2738)
(2738,"time +=1",2739)
(2739,"user.codechecked[true].[]",2740)
(2740,"door.getlockstatus[].[]",2741)
(2741,"user.setstatus[false].[]",2742)
(2742,"time +=2",2743)
(2743,"door.spiedon[].[]",2747)
(2744,"intruder.spyingdoor[false].[]",2748)
(2745,"intruder.spyingdoor[false].[]",2750)
(2746,"intruder.spyingdoor[false].[]",2752)
(2747,"intruder.spyingdoor[false].[]",2754)
(2748,"time +=6",2749)
(2749,"controller.checkkey[2].[]",2827)
(2750,"time +=6",2751)
(2751,"controller.tau=>setkeyvalid.[]",2821)
(2752,"time +=6",2753)
(2753,"controller.tau=>setkeyvalid.[]",2830)
(2754,"time +=8",2755)
(2755,"user.enterkey[].[]",2855)
(2755,"user.enterkey[].[_15]",2857)
(2756,"intruder.spyingdoor[false].[]",2758)
(2757,"intruder.spyingdoor[false].[]",2760)
(2758,"time +=1",2759)
(2759,"controller.checkkey[2].[]",2783)
(2760,"time +=1",2761)
(2761,"user.enterkey[].[]",2784)
(2761,"user.enterkey[].[_15]",2786)
(2762,"intruder.spyingdoor[false].[]",2764)
(2763,"intruder.spyingdoor[false].[]",2766)
(2764,"time +=1",2765)
(2765,"controller.checkkey[2].[]",2793)
(2766,"time +=1",2767)
(2767,"user.enterkey[].[_10]",2784)
(2767,"user.enterkey[].[]",2786)
(2768,"intruder.spyingdoor[false].[]",2770)
(2769,"intruder.spyingdoor[false].[]",2772)
(2770,"time +=6",2771)
(2771,"user.enterkey[].[_10]",3455)
(2771,"user.enterkey[].[]",3456)
(2772,"time +=1",2773)
(2773,"controller.tau=>setkeyvalid.[]",2796)
(2774,"intruder.spyingdoor[false].[]",2776)
(2775,"intruder.spyingdoor[false].[]",2778)
(2776,"time +=6",2777)
(2777,"controller.checkkey[2].[]",2822)
(2778,"time +=1",2779)
(2779,"controller.tau=>setkeyvalid.[]",2788)
(2780,"intruder.spyingdoor[false].[]",2781)
(2781,"time +=11",2782)
(2782,"controller.checkkey[2].[]",2865)
(2783,"controller.setkeyvalid[].[]",2789)
(2784,"time +=10",2785)
(2785,"controller.checkkey[2].[]",2866)
(2786,"time +=15",2787)
(2787,"controller.checkkey[2].[]",2897)
(2788,"controller.setkeyinvalid[].[]",2791)
(2789,"time +=1",2790)
(2790,"user.keychecked[true].[]",2799)
(2791,"time +=1",2792)
(2792,"controller.checkcode[3].[]",2801)
(2793,"controller.setkeyvalid[].[]",2794)
(2794,"time +=1",2795)
(2795,"user.keychecked[true].[]",2802)
(2796,"controller.setkeyinvalid[].[]",2797)
(2797,"time +=1",2798)
(2798,"controller.checkcode[3].[]",2804)
(2799,"time +=9",2800)
(2800,"controller.tau=>setkeyvalid.[]",2859)
(2801,"controller.lockeduser[].[]",2805)
(2802,"time +=9",2803)
(2803,"controller.tau=>setkeyvalid.[]",2860)
(2804,"controller.lockeduser[].[]",2806)
(2805,"controller.setarmed[].[]",2807)
(2806,"controller.setarmed[].[]",2808)
(2807,"door.lockdoor[].[]",2809)
(2808,"door.lockdoor[].[]",2811)
(2809,"time +=1",2810)
(2810,"user.codechecked[true].[]",2813)
(2811,"time +=1",2812)
(2812,"user.codechecked[true].[]",2814)
(2813,"door.getlockstatus[].[]",2815)
(2814,"door.getlockstatus[].[]",2816)
(2815,"user.setstatus[false].[]",2817)
(2816,"user.setstatus[false].[]",2819)
(2817,"time +=10",2818)
(2818,"user.enterkey[].[_10]",2893)
(2818,"user.enterkey[].[]",2895)
(2819,"time +=10",2820)
(2820,"user.enterkey[].[]",2893)
(2820,"user.enterkey[].[_15]",2895)
(2821,"controller.setkeyinvalid[].[]",2823)
(2822,"controller.setkeyvalid[].[]",2825)
(2823,"time +=1",2824)
(2824,"controller.checkcode[3].[]",2833)
(2825,"time +=1",2826)
(2826,"user.keychecked[true].[]",2834)
(2827,"controller.setkeyvalid[].[]",2828)
(2828,"time +=1",2829)
(2829,"user.keychecked[true].[]",2836)
(2830,"controller.setkeyinvalid[].[]",2831)
(2831,"time +=1",2832)
(2832,"controller.checkcode[3].[]",2838)
(2833,"controller.lockeduser[].[]",2839)
(2834,"time +=9",2835)
(2835,"controller.tau=>setkeyvalid.[]",2903)
(2836,"time +=9",2837)
(2837,"controller.tau=>setkeyvalid.[]",2898)
(2838,"controller.lockeduser[].[]",2840)
(2839,"controller.setarmed[].[]",2841)
(2840,"controller.setarmed[].[]",2842)
(2841,"door.lockdoor[].[]",2843)
(2842,"door.lockdoor[].[]",2845)
(2843,"time +=1",2844)
(2844,"user.codechecked[true].[]",2847)
(2845,"time +=1",2846)
(2846,"user.codechecked[true].[]",2848)
(2847,"door.getlockstatus[].[]",2849)
(2848,"door.getlockstatus[].[]",2850)
(2849,"user.setstatus[false].[]",2851)
(2850,"user.setstatus[false].[]",2853)
(2851,"time +=10",2852)
(2852,"user.enterkey[].[_10]",2918)
(2852,"user.enterkey[].[]",2920)
(2853,"time +=10",2854)
(2854,"user.enterkey[].[]",2918)
(2854,"user.enterkey[].[_15]",2920)
(2855,"time +=10",2856)
(2856,"controller.checkkey[2].[]",2930)
(2857,"time +=15",2858)
(2858,"controller.checkkey[2].[]",2964)
(2859,"controller.setkeyinvalid[].[]",2861)
(2860,"controller.setkeyinvalid[].[]",2863)
(2861,"time +=1",2862)
(2862,"controller.checkcode[3].[]",2871)
(2863,"time +=1",2864)
(2864,"controller.checkcode[3].[]",2872)
(2865,"controller.setkeyvalid[].[]",2867)
(2866,"controller.setkeyvalid[].[]",2869)
(2867,"time +=1",2868)
(2868,"user.keychecked[true].[]",2873)
(2869,"time +=1",2870)
(2870,"user.keychecked[true].[]",2875)
(2871,"controller.lockeduser[].[]",2877)
(2872,"controller.lockeduser[].[]",2878)
(2873,"time +=9",2874)
(2874,"controller.tau=>setkeyvalid.[]",2936)
(2875,"time +=9",2876)
(2876,"controller.tau=>setkeyvalid.[]",2935)
(2877,"controller.setarmed[].[]",2879)
(2878,"controller.setarmed[].[]",2880)
(2879,"door.lockdoor[].[]",2881)
(2880,"door.lockdoor[].[]",2883)
(2881,"time +=1",2882)
(2882,"user.codechecked[true].[]",2885)
(2883,"time +=1",2884)
(2884,"user.codechecked[true].[]",2886)
(2885,"door.getlockstatus[].[]",2887)
(2886,"door.getlockstatus[].[]",2888)
(2887,"user.setstatus[false].[]",2889)
(2888,"user.setstatus[false].[]",2891)
(2889,"time +=10",2890)
(2890,"user.enterkey[].[]",2959)
(2890,"user.enterkey[].[_15]",2961)
(2891,"time +=10",2892)
(2892,"user.enterkey[].[_10]",2959)
(2892,"user.enterkey[].[]",2961)
(2893,"time +=10",2894)
(2894,"controller.checkkey[2].[]",2963)
(2895,"time +=15",2896)
(2896,"controller.checkkey[2].[]",2993)
(2897,"controller.setkeyvalid[].[]",2899)
(2898,"controller.setkeyinvalid[].[]",2901)
(2899,"time +=1",2900)
(2900,"user.keychecked[true].[]",2906)
(2901,"time +=1",2902)
(2902,"controller.checkcode[3].[]",2908)
(2903,"controller.setkeyinvalid[].[]",2904)
(2904,"time +=1",2905)
(2905,"controller.checkcode[3].[]",2909)
(2906,"time +=9",2907)
(2907,"controller.tau=>setkeyvalid.[]",2973)
(2908,"controller.lockeduser[].[]",2910)
(2909,"controller.lockeduser[].[]",2911)
(2910,"controller.setarmed[].[]",2912)
(2911,"controller.setarmed[].[]",2913)
(2912,"door.lockdoor[].[]",2914)
(2913,"door.lockdoor[].[]",2916)
(2914,"time +=1",2915)
(2915,"user.codechecked[true].[]",2922)
(2916,"time +=1",2917)
(2917,"user.codechecked[true].[]",2923)
(2918,"time +=10",2919)
(2919,"controller.checkkey[2].[]",2985)
(2920,"time +=12",2921)
(2921,"door.spiedon[].[]",3044)
(2922,"door.getlockstatus[].[]",2924)
(2923,"door.getlockstatus[].[]",2925)
(2924,"user.setstatus[false].[]",2926)
(2925,"user.setstatus[false].[]",2928)
(2926,"time +=10",2927)
(2927,"user.enterkey[].[]",2981)
(2927,"user.enterkey[].[_15]",2983)
(2928,"time +=10",2929)
(2929,"user.enterkey[].[_10]",2981)
(2929,"user.enterkey[].[]",2983)
(2930,"controller.setkeyvalid[].[]",2931)
(2931,"time +=1",2932)
(2932,"user.keychecked[true].[]",2933)
(2933,"time +=9",2934)
(2934,"controller.tau=>setkeyvalid.[]",2986)
(2935,"controller.setkeyinvalid[].[]",2937)
(2936,"controller.setkeyinvalid[].[]",2939)
(2937,"time +=1",2938)
(2938,"controller.checkcode[3].[]",2941)
(2939,"time +=1",2940)
(2940,"controller.checkcode[3].[]",2942)
(2941,"controller.lockeduser[].[]",2943)
(2942,"controller.lockeduser[].[]",2944)
(2943,"controller.setarmed[].[]",2945)
(2944,"controller.setarmed[].[]",2946)
(2945,"door.lockdoor[].[]",2947)
(2946,"door.lockdoor[].[]",2949)
(2947,"time +=1",2948)
(2948,"user.codechecked[true].[]",2951)
(2949,"time +=1",2950)
(2950,"user.codechecked[true].[]",2952)
(2951,"door.getlockstatus[].[]",2953)
(2952,"door.getlockstatus[].[]",2954)
(2953,"user.setstatus[false].[]",2955)
(2954,"user.setstatus[false].[]",2957)
(2955,"time +=7",2956)
(2956,"door.spiedon[].[]",3032)
(2957,"time +=7",2958)
(2958,"door.spiedon[].[]",3050)
(2959,"time +=7",2960)
(2960,"door.spiedon[].[]",3043)
(2961,"time +=7",2962)
(2962,"door.spiedon[].[]",3049)
(2963,"controller.setkeyvalid[].[]",2965)
(2964,"controller.setkeyvalid[].[]",2967)
(2965,"time +=1",2966)
(2966,"user.keychecked[true].[]",2969)
(2967,"time +=1",2968)
(2968,"user.keychecked[true].[]",2971)
(2969,"time +=6",2970)
(2970,"door.spiedon[].[]",3037)
(2971,"time +=6",2972)
(2972,"door.spiedon[].[]",3031)
(2973,"controller.setkeyinvalid[].[]",2974)
(2974,"time +=1",2975)
(2975,"controller.checkcode[3].[]",2976)
(2976,"controller.lockeduser[].[]",2977)
(2977,"controller.setarmed[].[]",2978)
(2978,"door.lockdoor[].[]",2979)
(2979,"time +=1",2980)
(2980,"user.codechecked[true].[]",2987)
(2981,"time +=2",2982)
(2982,"door.spiedon[].[]",3009)
(2983,"time +=2",2984)
(2984,"door.spiedon[].[]",3008)
(2985,"controller.setkeyvalid[].[]",2988)
(2986,"controller.setkeyinvalid[].[]",2990)
(2987,"door.getlockstatus[].[]",2992)
(2988,"time +=1",2989)
(2989,"user.keychecked[true].[]",2998)
(2990,"time +=1",2991)
(2991,"controller.checkcode[3].[]",3000)
(2992,"user.setstatus[false].[]",2994)
(2993,"controller.setkeyvalid[].[]",2996)
(2994,"time +=2",2995)
(2995,"door.spiedon[].[]",3038)
(2996,"time +=1",2997)
(2997,"user.keychecked[true].[]",3001)
(2998,"time +=1",2999)
(2999,"door.spiedon[].[]",3007)
(3000,"controller.lockeduser[].[]",3003)
(3001,"time +=1",3002)
(3002,"door.spiedon[].[]",3020)
(3003,"controller.setunarmed[].[]",3004)
(3004,"door.unlockdoor[].[]",3005)
(3005,"time +=1",3006)
(3006,"user.codechecked[true].[]",3010)
(3006,"door.spiedon[].[]",3011)
(3007,"intruder.spyingdoor[false].[]",3012)
(3008,"intruder.spyingdoor[false].[]",3014)
(3009,"intruder.spyingdoor[false].[]",3016)
(3010,"door.getlockstatus[].[]",3021)
(3010,"door.spiedon[].[]",3018)
(3011,"user.codechecked[true].[]",3018)
(3011,"intruder.spyingdoor[false].[]",3019)
(3012,"time +=8",3013)
(3013,"controller.tau=>setkeyvalid.[]",3106)
(3014,"time +=13",3015)
(3015,"controller.checkkey[2].[]",3137)
(3016,"time +=8",3017)
(3017,"controller.checkkey[2].[]",3105)
(3018,"intruder.spyingdoor[false].[]",3022)
(3018,"door.getlockstatus[].[]",3023)
(3019,"user.codechecked[true].[]",3022)
(3020,"intruder.spyingdoor[false].[]",3024)
(3021,"user.setstatus[false].[]",3026)
(3021,"door.spiedon[].[]",3023)
(3022,"door.getlockstatus[].[]",3027)
(3023,"user.setstatus[false].[]",3028)
(3023,"intruder.spyingdoor[false].[]",3027)
(3024,"time +=8",3025)
(3025,"controller.tau=>setkeyvalid.[]",3099)
(3026,"door.spiedon[].[]",3028)
(3027,"user.setstatus[false].[]",3029)
(3028,"intruder.spyingdoor[false].[]",3029)
(3029,"time +=1",3030)
(3030,"controller.setdoorstatus[true, false].[]",3055)
(3031,"intruder.spyingdoor[false].[]",3033)
(3032,"intruder.spyingdoor[false].[]",3035)
(3033,"time +=3",3034)
(3034,"controller.tau=>setkeyvalid.[]",3057)
(3035,"time +=3",3036)
(3036,"user.enterkey[].[]",3058)
(3036,"user.enterkey[].[_15]",3060)
(3037,"intruder.spyingdoor[false].[]",3039)
(3038,"intruder.spyingdoor[false].[]",3041)
(3039,"time +=3",3040)
(3040,"controller.tau=>setkeyvalid.[]",3065)
(3041,"time +=8",3042)
(3042,"user.enterkey[].[_10]",3457)
(3042,"user.enterkey[].[]",3458)
(3043,"intruder.spyingdoor[false].[]",3045)
(3044,"intruder.spyingdoor[false].[]",3047)
(3045,"time +=3",3046)
(3046,"controller.checkkey[2].[]",3070)
(3047,"time +=3",3048)
(3048,"controller.checkkey[2].[]",3064)
(3049,"intruder.spyingdoor[false].[]",3051)
(3050,"intruder.spyingdoor[false].[]",3053)
(3051,"time +=8",3052)
(3052,"controller.checkkey[2].[]",3100)
(3053,"time +=3",3054)
(3054,"user.enterkey[].[_10]",3058)
(3054,"user.enterkey[].[]",3060)
(3055,"time +=9",3056)
(3056,"user.enterkey[].[]",3459)
(3056,"user.enterkey[].[_15]",3460)
(3057,"controller.setkeyinvalid[].[]",3062)
(3058,"time +=10",3059)
(3059,"controller.checkkey[2].[]",3146)
(3060,"time +=15",3061)
(3061,"controller.checkkey[2].[]",3181)
(3062,"time +=1",3063)
(3063,"controller.checkcode[3].[]",3073)
(3064,"controller.setkeyvalid[].[]",3066)
(3065,"controller.setkeyinvalid[].[]",3068)
(3066,"time +=1",3067)
(3067,"user.keychecked[true].[]",3074)
(3068,"time +=1",3069)
(3069,"controller.checkcode[3].[]",3076)
(3070,"controller.setkeyvalid[].[]",3071)
(3071,"time +=1",3072)
(3072,"user.keychecked[true].[]",3077)
(3073,"controller.lockeduser[].[]",3079)
(3074,"time +=9",3075)
(3075,"controller.tau=>setkeyvalid.[]",3138)
(3076,"controller.lockeduser[].[]",3080)
(3077,"time +=9",3078)
(3078,"controller.tau=>setkeyvalid.[]",3139)
(3079,"controller.setunarmed[].[]",3081)
(3080,"controller.setunarmed[].[]",3082)
(3081,"door.unlockdoor[].[]",3083)
(3082,"door.unlockdoor[].[]",3085)
(3083,"time +=1",3084)
(3084,"user.codechecked[true].[]",3087)
(3085,"time +=1",3086)
(3086,"user.codechecked[true].[]",3088)
(3087,"door.getlockstatus[].[]",3089)
(3088,"door.getlockstatus[].[]",3090)
(3089,"user.setstatus[false].[]",3091)
(3090,"user.setstatus[false].[]",3093)
(3091,"time +=1",3092)
(3092,"controller.setdoorstatus[true, false].[]",3095)
(3093,"time +=1",3094)
(3094,"controller.setdoorstatus[true, false].[]",3097)
(3095,"time +=9",3096)
(3096,"user.enterkey[].[_10]",3163)
(3096,"user.enterkey[].[]",3165)
(3097,"time +=9",3098)
(3098,"user.enterkey[].[]",3163)
(3098,"user.enterkey[].[_15]",3165)
(3099,"controller.setkeyinvalid[].[]",3101)
(3100,"controller.setkeyvalid[].[]",3103)
(3101,"time +=1",3102)
(3102,"controller.checkcode[3].[]",3111)
(3103,"time +=1",3104)
(3104,"user.keychecked[true].[]",3112)
(3105,"controller.setkeyvalid[].[]",3107)
(3106,"controller.setkeyinvalid[].[]",3109)
(3107,"time +=1",3108)
(3108,"user.keychecked[true].[]",3123)
(3109,"time +=1",3110)
(3110,"controller.checkcode[3].[]",3114)
(3111,"controller.lockeduser[].[]",3115)
(3112,"time +=9",3113)
(3113,"controller.tau=>setkeyvalid.[]",3179)
(3114,"controller.lockeduser[].[]",3116)
(3115,"controller.setunarmed[].[]",3117)
(3116,"controller.setunarmed[].[]",3118)
(3117,"door.unlockdoor[].[]",3119)
(3118,"door.unlockdoor[].[]",3121)
(3119,"time +=1",3120)
(3120,"user.codechecked[true].[]",3125)
(3121,"time +=1",3122)
(3122,"user.codechecked[true].[]",3126)
(3123,"time +=9",3124)
(3124,"controller.tau=>setkeyvalid.[]",3180)
(3125,"door.getlockstatus[].[]",3127)
(3126,"door.getlockstatus[].[]",3128)
(3127,"user.setstatus[false].[]",3129)
(3128,"user.setstatus[false].[]",3131)
(3129,"time +=1",3130)
(3130,"controller.setdoorstatus[true, false].[]",3133)
(3131,"time +=1",3132)
(3132,"controller.setdoorstatus[true, false].[]",3135)
(3133,"time +=9",3134)
(3134,"user.enterkey[].[_10]",3461)
(3134,"user.enterkey[].[]",3462)
(3135,"time +=9",3136)
(3136,"user.enterkey[].[]",3463)
(3136,"user.enterkey[].[_15]",3464)
(3137,"controller.setkeyvalid[].[]",3140)
(3138,"controller.setkeyinvalid[].[]",3142)
(3139,"controller.setkeyinvalid[].[]",3144)
(3140,"time +=1",3141)
(3141,"user.keychecked[true].[]",3149)
(3142,"time +=1",3143)
(3143,"controller.checkcode[3].[]",3151)
(3144,"time +=1",3145)
(3145,"controller.checkcode[3].[]",3152)
(3146,"controller.setkeyvalid[].[]",3147)
(3147,"time +=1",3148)
(3148,"user.keychecked[true].[]",3153)
(3149,"time +=9",3150)
(3150,"controller.tau=>setkeyvalid.[]",3212)
(3151,"controller.lockeduser[].[]",3155)
(3152,"controller.lockeduser[].[]",3156)
(3153,"time +=9",3154)
(3154,"controller.tau=>setkeyvalid.[]",3213)
(3155,"controller.setunarmed[].[]",3157)
(3156,"controller.setunarmed[].[]",3158)
(3157,"door.unlockdoor[].[]",3159)
(3158,"door.unlockdoor[].[]",3161)
(3159,"time +=1",3160)
(3160,"user.codechecked[true].[]",3167)
(3161,"time +=1",3162)
(3162,"user.codechecked[true].[]",3168)
(3163,"time +=10",3164)
(3164,"controller.checkkey[2].[]",3233)
(3165,"time +=15",3166)
(3166,"controller.checkkey[2].[]",3276)
(3166,"door.spiedon[].[]",3277)
(3167,"door.getlockstatus[].[]",3169)
(3168,"door.getlockstatus[].[]",3170)
(3169,"user.setstatus[false].[]",3171)
(3170,"user.setstatus[false].[]",3173)
(3171,"time +=1",3172)
(3172,"controller.setdoorstatus[true, false].[]",3175)
(3173,"time +=1",3174)
(3174,"controller.setdoorstatus[true, false].[]",3177)
(3175,"time +=9",3176)
(3176,"user.enterkey[].[_10]",3228)
(3176,"user.enterkey[].[]",3230)
(3177,"time +=9",3178)
(3178,"user.enterkey[].[]",3228)
(3178,"user.enterkey[].[_15]",3230)
(3179,"controller.setkeyinvalid[].[]",3182)
(3180,"controller.setkeyinvalid[].[]",3184)
(3181,"controller.setkeyvalid[].[]",3186)
(3182,"time +=1",3183)
(3183,"controller.checkcode[3].[]",3188)
(3184,"time +=1",3185)
(3185,"controller.checkcode[3].[]",3189)
(3186,"time +=1",3187)
(3187,"user.keychecked[true].[]",3190)
(3188,"controller.lockeduser[].[]",3192)
(3189,"controller.lockeduser[].[]",3193)
(3190,"time +=9",3191)
(3191,"controller.tau=>setkeyvalid.[]",3249)
(3192,"controller.setunarmed[].[]",3194)
(3193,"controller.setunarmed[].[]",3195)
(3194,"door.unlockdoor[].[]",3196)
(3195,"door.unlockdoor[].[]",3198)
(3196,"time +=1",3197)
(3197,"user.codechecked[true].[]",3200)
(3198,"time +=1",3199)
(3199,"user.codechecked[true].[]",3201)
(3200,"door.getlockstatus[].[]",3202)
(3201,"door.getlockstatus[].[]",3203)
(3202,"user.setstatus[false].[]",3204)
(3203,"user.setstatus[false].[]",3206)
(3204,"time +=1",3205)
(3205,"controller.setdoorstatus[true, false].[]",3208)
(3206,"time +=1",3207)
(3207,"controller.setdoorstatus[true, false].[]",3210)
(3208,"time +=9",3209)
(3209,"user.enterkey[].[_10]",3465)
(3209,"user.enterkey[].[]",3466)
(3209,"door.spiedon[].[]",3257)
(3210,"time +=9",3211)
(3211,"user.enterkey[].[]",3471)
(3211,"user.enterkey[].[_15]",3472)
(3211,"door.spiedon[].[]",3290)
(3212,"controller.setkeyinvalid[].[]",3214)
(3213,"controller.setkeyinvalid[].[]",3216)
(3214,"time +=1",3215)
(3215,"controller.checkcode[3].[]",3218)
(3216,"time +=1",3217)
(3217,"controller.checkcode[3].[]",3219)
(3218,"controller.lockeduser[].[]",3220)
(3219,"controller.lockeduser[].[]",3221)
(3220,"controller.setunarmed[].[]",3222)
(3221,"controller.setunarmed[].[]",3223)
(3222,"door.unlockdoor[].[]",3224)
(3223,"door.unlockdoor[].[]",3226)
(3224,"time +=1",3225)
(3225,"user.codechecked[true].[]",3234)
(3226,"time +=1",3227)
(3227,"user.codechecked[true].[]",3232)
(3228,"time +=5",3229)
(3229,"door.spiedon[].[]",3292)
(3230,"time +=5",3231)
(3231,"door.spiedon[].[]",3269)
(3232,"door.getlockstatus[].[]",3235)
(3233,"controller.setkeyvalid[].[]",3236)
(3234,"door.getlockstatus[].[]",3238)
(3235,"user.setstatus[false].[]",3239)
(3236,"time +=1",3237)
(3237,"user.keychecked[true].[]",3243)
(3238,"user.setstatus[false].[]",3241)
(3239,"time +=1",3240)
(3240,"controller.setdoorstatus[true, false].[]",3245)
(3241,"time +=1",3242)
(3242,"controller.setdoorstatus[true, false].[]",3247)
(3243,"time +=4",3244)
(3244,"door.spiedon[].[]",3278)
(3245,"time +=4",3246)
(3246,"door.spiedon[].[]",3258)
(3247,"time +=4",3248)
(3248,"door.spiedon[].[]",3259)
(3249,"controller.setkeyinvalid[].[]",3250)
(3250,"time +=1",3251)
(3251,"controller.checkcode[3].[]",3252)
(3252,"controller.lockeduser[].[]",3253)
(3253,"controller.setunarmed[].[]",3254)
(3254,"door.unlockdoor[].[]",3255)
(3255,"time +=1",3256)
(3256,"user.codechecked[true].[]",3260)
(3256,"door.spiedon[].[]",3261)
(3257,"user.enterkey[].[_10]",3467)
(3257,"user.enterkey[].[]",3468)
(3257,"intruder.spyingdoor[false].[]",3262)
(3258,"intruder.spyingdoor[false].[]",3263)
(3259,"intruder.spyingdoor[false].[]",3265)
(3260,"door.getlockstatus[].[]",3291)
(3260,"door.spiedon[].[]",3267)
(3261,"user.codechecked[true].[]",3267)
(3261,"intruder.spyingdoor[false].[]",3268)
(3262,"user.enterkey[].[_10]",3469)
(3262,"user.enterkey[].[]",3470)
(3263,"time +=5",3264)
(3264,"user.enterkey[].[]",3301)
(3264,"user.enterkey[].[_15]",3303)
(3265,"time +=5",3266)
(3266,"user.enterkey[].[_10]",3301)
(3266,"user.enterkey[].[]",3303)
(3267,"intruder.spyingdoor[false].[]",3270)
(3267,"door.getlockstatus[].[]",3271)
(3268,"user.codechecked[true].[]",3270)
(3269,"intruder.spyingdoor[false].[]",3272)
(3270,"door.getlockstatus[].[]",3274)
(3271,"user.setstatus[false].[]",3275)
(3271,"intruder.spyingdoor[false].[]",3274)
(3272,"time +=10",3273)
(3273,"controller.checkkey[2].[]",3323)
(3274,"user.setstatus[false].[]",3279)
(3275,"intruder.spyingdoor[false].[]",3279)
(3276,"controller.setkeyvalid[].[]",3281)
(3276,"door.spiedon[].[]",3282)
(3277,"controller.checkkey[2].[]",3282)
(3277,"intruder.spyingdoor[false].[]",3283)
(3278,"intruder.spyingdoor[false].[]",3284)
(3279,"time +=1",3280)
(3280,"controller.setdoorstatus[true, false].[]",3297)
(3281,"door.spiedon[].[]",3286)
(3282,"controller.setkeyvalid[].[]",3286)
(3282,"intruder.spyingdoor[false].[]",3287)
(3283,"controller.checkkey[2].[]",3287)
(3284,"time +=5",3285)
(3285,"controller.tau=>setkeyvalid.[]",3306)
(3286,"intruder.spyingdoor[false].[]",3288)
(3287,"controller.setkeyvalid[].[]",3288)
(3288,"time +=1",3289)
(3289,"user.keychecked[true].[]",3299)
(3290,"user.enterkey[].[]",3473)
(3290,"user.enterkey[].[_15]",3474)
(3290,"intruder.spyingdoor[false].[]",3293)
(3291,"user.setstatus[false].[]",3294)
(3291,"door.spiedon[].[]",3271)
(3292,"intruder.spyingdoor[false].[]",3295)
(3293,"user.enterkey[].[]",3475)
(3293,"user.enterkey[].[_15]",3476)
(3294,"door.spiedon[].[]",3275)
(3295,"time +=5",3296)
(3296,"controller.checkkey[2].[]",3305)
(3297,"time +=9",3298)
(3298,"user.enterkey[].[_10]",3477)
(3298,"user.enterkey[].[]",3478)
(3299,"time +=9",3300)
(3300,"controller.tau=>setkeyvalid.[]",3322)
(3301,"time +=10",3302)
(3302,"controller.checkkey[2].[]",3340)
(3303,"time +=15",3304)
(3304,"controller.checkkey[2].[]",3357)
(3305,"controller.setkeyvalid[].[]",3307)
(3306,"controller.setkeyinvalid[].[]",3309)
(3307,"time +=1",3308)
(3308,"user.keychecked[true].[]",3311)
(3309,"time +=1",3310)
(3310,"controller.checkcode[3].[]",3313)
(3311,"time +=9",3312)
(3312,"controller.tau=>setkeyvalid.[]",3339)
(3313,"controller.lockeduser[].[]",3314)
(3314,"controller.setarmed[].[]",3315)
(3315,"door.lockdoor[].[]",3316)
(3316,"time +=1",3317)
(3317,"user.codechecked[true].[]",3318)
(3318,"door.getlockstatus[].[]",3319)
(3319,"user.setstatus[false].[]",3320)
(3320,"time +=10",3321)
(3321,"user.enterkey[].[]",3479)
(3321,"user.enterkey[].[_15]",3480)
(3322,"controller.setkeyinvalid[].[]",3324)
(3323,"controller.setkeyvalid[].[]",3326)
(3324,"time +=1",3325)
(3325,"controller.checkcode[3].[]",3328)
(3326,"time +=1",3327)
(3327,"user.keychecked[true].[]",3329)
(3328,"controller.lockeduser[].[]",3331)
(3329,"time +=9",3330)
(3330,"controller.tau=>setkeyvalid.[]",3356)
(3331,"controller.setarmed[].[]",3332)
(3332,"door.lockdoor[].[]",3333)
(3333,"time +=1",3334)
(3334,"user.codechecked[true].[]",3335)
(3335,"door.getlockstatus[].[]",3336)
(3336,"user.setstatus[false].[]",3337)
(3337,"time +=10",3338)
(3338,"user.enterkey[].[_10]",3481)
(3338,"user.enterkey[].[]",3482)
(3339,"controller.setkeyinvalid[].[]",3341)
(3340,"controller.setkeyvalid[].[]",3343)
(3341,"time +=1",3342)
(3342,"controller.checkcode[3].[]",3345)
(3343,"time +=1",3344)
(3344,"user.keychecked[true].[]",3346)
(3345,"controller.lockeduser[].[]",3348)
(3346,"time +=9",3347)
(3347,"controller.tau=>setkeyvalid.[]",3373)
(3348,"controller.setarmed[].[]",3349)
(3349,"door.lockdoor[].[]",3350)
(3350,"time +=1",3351)
(3351,"user.codechecked[true].[]",3352)
(3352,"door.getlockstatus[].[]",3353)
(3353,"user.setstatus[false].[]",3354)
(3354,"time +=10",3355)
(3355,"user.enterkey[].[]",3483)
(3355,"user.enterkey[].[_15]",3484)
(3356,"controller.setkeyinvalid[].[]",3358)
(3357,"controller.setkeyvalid[].[]",3360)
(3358,"time +=1",3359)
(3359,"controller.checkcode[3].[]",3362)
(3360,"time +=1",3361)
(3361,"user.keychecked[true].[]",3363)
(3362,"controller.lockeduser[].[]",3365)
(3363,"time +=9",3364)
(3364,"controller.tau=>setkeyvalid.[]",3386)
(3364,"door.spiedon[].[]",3387)
(3365,"controller.setarmed[].[]",3366)
(3366,"door.lockdoor[].[]",3367)
(3367,"time +=1",3368)
(3368,"user.codechecked[true].[]",3369)
(3369,"door.getlockstatus[].[]",3370)
(3370,"user.setstatus[false].[]",3371)
(3371,"time +=8",3372)
(3372,"door.spiedon[].[]",3385)
(3373,"controller.setkeyinvalid[].[]",3374)
(3374,"time +=1",3375)
(3375,"controller.checkcode[3].[]",3376)
(3376,"controller.lockeduser[].[]",3377)
(3377,"controller.setarmed[].[]",3378)
(3378,"door.lockdoor[].[]",3379)
(3379,"time +=1",3380)
(3380,"user.codechecked[true].[]",3381)
(3381,"door.getlockstatus[].[]",3382)
(3382,"user.setstatus[false].[]",3383)
(3383,"time +=3",3384)
(3384,"door.spiedon[].[]",3388)
(3385,"intruder.spyingdoor[false].[]",3398)
(3386,"controller.setkeyinvalid[].[]",3389)
(3386,"door.spiedon[].[]",3390)
(3387,"controller.tau=>setkeyvalid.[]",3390)
(3387,"intruder.spyingdoor[false].[]",3391)
(3388,"intruder.spyingdoor[false].[]",3392)
(3389,"door.spiedon[].[]",3394)
(3390,"controller.setkeyinvalid[].[]",3394)
(3390,"intruder.spyingdoor[false].[]",3395)
(3391,"controller.tau=>setkeyvalid.[]",3395)
(3392,"time +=7",3393)
(3393,"user.enterkey[].[]",3487)
(3393,"user.enterkey[].[_15]",3488)
(3394,"intruder.spyingdoor[false].[]",3396)
(3395,"controller.setkeyinvalid[].[]",3396)
(3396,"time +=1",3397)
(3397,"controller.checkcode[3].[]",3400)
(3398,"time +=2",3399)
(3399,"user.enterkey[].[_10]",3485)
(3399,"user.enterkey[].[]",3486)
(3400,"controller.lockeduser[].[]",3401)
(3401,"controller.setarmed[].[]",3402)
(3402,"door.lockdoor[].[]",3403)
(3403,"time +=1",3404)
(3404,"user.codechecked[true].[]",3405)
(3405,"door.getlockstatus[].[]",3406)
(3406,"user.setstatus[false].[]",3407)
(3407,"time +=10",3408)
(3408,"user.enterkey[].[_10]",3489)
(3408,"user.enterkey[].[]",3490)
(3409,"@[20>>20]",30)
(3410,"@[37>>5]",155)
(3411,"@[37>>5]",157)
(3412,"@[57>>5]",273)
(3413,"@[57>>5]",275)
(3414,"@[74>>5]",511)
(3415,"@[84>>64]",61)
(3416,"@[84>>64]",63)
(3417,"@[84>>20]",468)
(3418,"@[89>>15]",464)
(3419,"@[89>>69]",61)
(3420,"@[89>>69]",63)
(3421,"@[90>>60]",135)
(3422,"@[90>>60]",139)
(3423,"@[90>>60]",144)
(3424,"@[90>>60]",130)
(3425,"@[90>>60]",141)
(3426,"@[90>>60]",147)
(3427,"@[90>>60]",148)
(3428,"@[114>>30]",658)
(3429,"@[114>>30]",660)
(3430,"@[124>>30]",779)
(3431,"@[124>>30]",781)
(3432,"@[124>>60]",470)
(3433,"@[129>>60]",513)
(3434,"@[129>>60]",515)
(3435,"@[134>>30]",864)
(3436,"@[134>>30]",866)
(3437,"@[146>>30]",987)
(3438,"@[146>>30]",989)
(3439,"@[161>>30]",1207)
(3440,"@[161>>30]",1209)
(3441,"@[166>>30]",1223)
(3442,"@[166>>30]",1225)
(3443,"@[178>>30]",1341)
(3444,"@[178>>30]",1343)
(3445,"@[210>>30]",1688)
(3446,"@[210>>30]",1689)
(3447,"@[210>>30]",1692)
(3448,"@[210>>30]",1693)
(3449,"@[210>>30]",1697)
(3450,"@[210>>30]",1699)
(3451,"@[242>>30]",1996)
(3452,"@[242>>30]",1998)
(3453,"@[274>>30]",2281)
(3454,"@[274>>30]",2283)
(3455,"@[306>>30]",2570)
(3456,"@[306>>30]",2572)
(3457,"@[338>>30]",2855)
(3458,"@[338>>30]",2857)
(3459,"@[340>>300]",188)
(3460,"@[340>>300]",190)
(3461,"@[350>>270]",628)
(3462,"@[350>>270]",630)
(3463,"@[350>>270]",628)
(3464,"@[350>>270]",630)
(3465,"@[360>>300]",415)
(3466,"@[360>>300]",416)
(3467,"@[360>>300]",408)
(3468,"@[360>>300]",409)
(3469,"@[360>>300]",399)
(3470,"@[360>>300]",401)
(3471,"@[360>>300]",415)
(3472,"@[360>>300]",416)
(3473,"@[360>>300]",408)
(3474,"@[360>>300]",409)
(3475,"@[360>>300]",399)
(3476,"@[360>>300]",401)
(3477,"@[370>>330]",188)
(3478,"@[370>>330]",190)
(3479,"@[377>>300]",568)
(3480,"@[377>>300]",570)
(3481,"@[382>>330]",278)
(3482,"@[382>>330]",280)
(3483,"@[387>>330]",317)
(3484,"@[387>>330]",319)
(3485,"@[392>>300]",762)
(3486,"@[392>>300]",764)
(3487,"@[397>>300]",798)
(3488,"@[397>>300]",800)
(3489,"@[402>>330]",521)
(3490,"@[402>>330]",523)
