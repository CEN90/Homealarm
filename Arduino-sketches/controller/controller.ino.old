#include <Servo.h>

#define DOOR_SENSOR         PIN4
#define DOOR_LOCK           PIN7
#define AUTH_IN             PIN3

#define SERVO_POS_LOCKED    90
#define SERVO_POS_UNLOCKED  0

#define POLL_TIME           10

Servo lock_servo;

boolean armed = false;
boolean alarm = false;
boolean auth_ok = false;
boolean door_open = LOW;

boolean prev_door_state = false;

void setup() {
    // pinMode(AUTH_IN, INPUT); 
    pinMode(DOOR_SENSOR, INPUT_PULLUP); // Use internal pull-up in arduino

    lock_servo.attach(DOOR_LOCK);
    lock_servo.write(SERVO_POS_UNLOCKED);   
}

boolean setDoorLock(boolean lock_door) {
    int new_pos = SERVO_POS_UNLOCKED;

    if (lock_door) {
        new_pos = SERVO_POS_LOCKED;
    }

    lock_servo.write(new_pos);   

    return lock_door;
}

void checkAlarmConditions() {
    if (armed && door_open) {
        alarm = true; 
    }
}

void setSensorReadState() {
    door_open = !door_open;
}

void loop() {
    // auth_ok = digitalRead(AUTH_IN);

    // if (!digitalRead(DOOR_SENSOR)) { // logical LOW is active state when using pull-up
    //     door_open = !door_open;
    // }

    setDoorLock(door_open);
    door_open = !door_open;

    // Authentication branch
    // if (auth_ok) {
    //     alarm = false; // Always turn off alarm when authenticated

    //     armed = !armed; // Flip armed status
    //     setDoorLock(armed); // Door lock status should follow armed
    // }
    
    // Alarm branch
    // checkAlarmConditions();

    delay(POLL_TIME * 100);
}
